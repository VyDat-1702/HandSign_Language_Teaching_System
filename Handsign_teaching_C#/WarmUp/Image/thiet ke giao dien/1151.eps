%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1506.i029.012.P.m005.c26.translator language icon set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: lena
%%CreationDate: 6/30/2015
%%BoundingBox: 0 0 403 405
%%HiResBoundingBox: 0 0 403 404.0357
%%CropBox: 0 0 403 404.0357
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.2 x682 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2015-06-30T08:36+06:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-06-30T08:36+06:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-06-30T08:36+06:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8h13zF+aF1rusNpG&#xA;saZpmkWF69hCl2oDF4rcTua+lMT8FW65lGWHHEGfVx8eLUZpyGPev2D7yj9Ei/Nq/sbmSbzJZSPG&#xA;5jEtksLKp4BqN6lsfi+IHpkfFwy+kMp4NRj/ALzZKtT0j/nIn6236L81af8AVKDj9Zih9StN68LL&#xA;jiJY+o/HzaicnQp7+VWp/mG2s+YdF87ahbajd6dHYz2s1qiogS69fkKrHBX+5HVcjlEaBi2YZSJI&#xA;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&#xA;7I9hm6zZ5T58nSabSQxDbn3p1lDlP//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:73CD1D5CD01EE511939F8D72181FF645</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:73CD1D5CD01EE511939F8D72181FF645</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:34708098541EE5118347D2BD3E9DD101</stRef:instanceID>
            <stRef:documentID>xmp.did:34708098541EE5118347D2BD3E9DD101</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:534D8B17F31CE511B914A7E6773A6F23</stEvt:instanceID>
                  <stEvt:when>2015-06-27T20:36:50+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:34708098541EE5118347D2BD3E9DD101</stEvt:instanceID>
                  <stEvt:when>2015-06-29T14:47:18+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:73CD1D5CD01EE511939F8D72181FF645</stEvt:instanceID>
                  <stEvt:when>2015-06-30T08:36+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -404.036 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 404.036 li
403 404.036 li
403 0 li
cp
clp
27.8291 350.5 mo
27.8291 350.5 26.7554 349.534 26.6499 349.071 cv
27.4312 348.752 li
27.8291 350.5 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.309804 .160784 .0588235 rgb
f
42.1455 350.5 mo
42.1455 350.5 43.2207 349.534 43.3281 349.071 cv
42.5449 348.752 li
42.1455 350.5 li
f
33.5166 326.704 mo
32.7534 329.73 34.934 331.082 37.858 331.821 cv
40.7842 332.557 43.3452 332.396 44.1075 329.373 cv
44.8584 326.394 42.7666 324.677 39.8448 323.941 cv
36.9184 323.206 34.2895 323.624 33.5166 326.704 cv
.231373 .117647 .0431373 rgb
f
19.7964 365.475 mo
20.2515 362.452 22.8164 361.282 24.3364 360.824 cv
25.8535 360.365 28.3755 360.196 29.9698 359.277 cv
31.5639 358.359 31.3125 353.766 31.3125 353.766 cv
34.7549 353.766 li
38.1978 353.766 li
38.1978 353.766 37.9419 358.359 39.5366 359.277 cv
41.1323 360.196 43.6533 360.365 45.1714 360.824 cv
46.6914 361.282 49.2564 362.452 49.7129 365.475 cv
50.0781 367.897 50.0928 371.135 50.0928 371.135 cv
34.7549 371.135 li
19.4165 371.135 li
19.4165 371.135 19.4311 367.897 19.7964 365.475 cv
.956863 .713726 .505882 rgb
f
38.4848 357.503 mo
38.4848 357.507 li
36.6353 357.158 33.0508 356.004 31.3106 354.689 cv
31.3125 354.552 31.3125 354.425 31.3125 354.316 cv
31.3125 354.305 li
31.3081 354.164 li
31.3081 354.136 li
31.3081 354.033 li
31.3061 354.009 li
31.3037 353.923 li
31.3037 353.904 li
31.2998 353.843 li
31.2998 353.828 li
31.2998 353.792 li
31.2978 353.766 li
34.7412 353.766 li
38.1831 353.766 li
38.1831 353.766 38.0669 355.862 38.4848 357.503 cv
.929412 .701961 .501961 rgb
f
25.8022 343.808 mo
25.8022 343.808 24.4414 337.996 26.0249 334.765 cv
27.7329 331.277 30.2915 329.287 34.9893 329.287 cv
39.6821 329.287 42.2452 331.277 43.9512 334.765 cv
45.5347 337.996 44.1709 343.808 44.1709 343.808 cv
46.3047 343.383 45.9063 345.716 45.2392 346.772 cv
44.6855 347.649 44.6729 347.744 44.3399 348.704 cv
43.8599 350.09 42.7558 349.13 42.7558 349.13 cv
42.1186 350.911 41.6645 351.328 39.1142 353.682 cv
36.8911 355.732 36.1098 355.71 34.9893 355.71 cv
33.8628 355.71 33.1035 355.732 30.8638 353.682 cv
28.3017 351.341 27.8574 350.911 27.2163 349.13 cv
27.2163 349.13 26.1167 350.09 25.6353 348.704 cv
25.3008 347.744 25.29 347.649 24.7368 346.772 cv
24.0694 345.716 23.6694 343.383 25.8022 343.808 cv
.956863 .713726 .505882 rgb
f
38.4861 357.462 mo
38.4835 357.452 38.481 357.441 38.4785 357.431 cv
38.481 357.441 38.4835 357.452 38.4861 357.462 cv
38.4861 357.462 li
.909804 .839216 .772549 rgb
f
34.8921 360.784 mo
34.8921 360.784 li
34.8921 359.382 li
34.81 359.338 li
34.81 356.443 li
36.1407 356.937 37.4896 357.314 38.4234 357.496 cv
34.8921 359.382 li
34.8921 360.784 li
38.4758 357.468 mo
38.2208 356.443 38.1704 355.25 38.1683 354.501 cv
38.1724 354.498 38.1766 354.495 38.1807 354.491 cv
38.1822 355.231 38.2313 356.41 38.4785 357.431 cv
38.481 357.441 38.4835 357.452 38.4861 357.462 cv
38.4758 357.468 li
.870588 .6 .392157 rgb
f
38.4234 357.496 mo
37.4896 357.314 36.1407 356.937 34.81 356.443 cv
34.81 355.71 li
34.8464 355.71 34.8831 355.71 34.9201 355.71 cv
34.943 355.71 34.9661 355.71 34.9893 355.71 cv
35.0124 355.71 35.0353 355.71 35.0581 355.71 cv
35.969 355.71 36.6753 355.696 38.1683 354.501 cv
38.1704 355.25 38.2208 356.443 38.4758 357.468 cv
38.4234 357.496 li
.847059 .588235 .388235 rgb
f
35.0581 355.71 mo
35.0353 355.71 35.0124 355.71 34.9893 355.71 cv
34.9661 355.71 34.943 355.71 34.9201 355.71 cv
34.8831 355.71 34.8464 355.71 34.81 355.71 cv
34.81 329.291 li
34.9893 329.287 li
39.6821 329.287 42.2452 331.277 43.9512 334.765 cv
44.5326 335.951 44.7167 337.486 44.7168 338.953 cv
44.7171 341.48 44.1709 343.808 44.1709 343.808 cv
44.1709 343.808 li
44.1709 343.808 li
44.3457 343.773 44.5036 343.757 44.6457 343.757 cv
45.4791 343.757 45.7704 344.317 45.771 344.991 cv
45.7715 345.604 45.5311 346.31 45.2392 346.772 cv
44.6855 347.649 44.6729 347.744 44.3399 348.704 cv
44.1386 349.285 43.8275 349.454 43.5342 349.454 cv
43.408 349.454 43.2852 349.423 43.1757 349.38 cv
42.9327 349.284 42.7558 349.13 42.7558 349.13 cv
42.558 349.683 42.3779 350.104 42.1472 350.493 cv
41.6347 351.356 40.8729 352.059 39.1142 353.682 cv
39.1142 353.682 li
38.7675 353.999 38.4639 354.263 38.1807 354.487 cv
38.1807 354.488 38.1807 354.49 38.1807 354.491 cv
38.1766 354.495 38.1724 354.498 38.1683 354.501 cv
36.6753 355.696 35.969 355.71 35.0581 355.71 cv
.870588 .6 .392157 rgb
f
28.8735 329.287 mo
34.1001 326.558 38.4937 329.287 38.4937 329.287 cv
49.3262 330.486 45.5366 344.144 45.5366 344.144 cv
45.5322 344.144 li
45.2983 343.83 44.8711 343.668 44.1709 343.808 cv
44.3203 342.814 43.0981 341.604 41.1772 340.181 cv
39.2578 338.757 38.4937 336.695 38.4937 336.695 cv
38.4937 336.695 36.5742 340.322 31.7632 341.283 cv
26.9512 342.243 25.937 342.92 25.8022 343.808 cv
25.1021 343.668 24.6777 343.83 24.4434 344.144 cv
24.4375 344.144 li
24.4375 344.144 21.5288 333.126 28.8735 329.287 cv
cp
.345098 .176471 .0666667 rgb
f
25.9814 349.312 mo
25.9814 349.582 26.2021 349.799 26.4712 349.799 cv
26.7427 349.799 26.9609 349.582 26.9609 349.312 cv
26.9609 349.042 26.7427 348.822 26.4712 348.822 cv
26.2021 348.822 25.9814 349.042 25.9814 349.312 cv
cp
.85098 .192157 .0862745 rgb
f
43.9932 349.312 mo
43.9932 349.582 43.7734 349.799 43.5015 349.799 cv
43.2354 349.799 43.0137 349.582 43.0137 349.312 cv
43.0137 349.042 43.2354 348.822 43.5015 348.822 cv
43.7734 348.822 43.9932 349.042 43.9932 349.312 cv
cp
.678431 .0941176 0 rgb
f
19.1841 371.135 mo
19.1841 371.135 19.1968 367.897 19.5737 365.475 cv
19.6172 365.194 19.6846 364.937 19.7637 364.69 cv
20.5229 363.378 21.1592 363.226 21.5898 362.992 cv
22.0005 362.766 24.5142 361.471 26.8408 360.278 cv
27.9839 360.054 29.1631 359.778 30.0571 359.277 cv
30.4248 359.073 30.6938 358.679 30.8955 358.199 cv
31.0083 358.141 li
34.8101 360.784 li
34.8101 373.227 li
19.1841 371.135 li
cp
.909804 .964706 .937255 rgb
f
34.8101 360.788 mo
32.2466 363.711 li
29.5039 359.33 li
30.9736 358.008 li
30.9736 358.008 33.1958 359.662 34.8101 360.788 cv
cp
.811765 .909804 .866667 rgb
f
50.4346 371.135 mo
50.4346 371.135 50.4199 367.897 50.042 365.475 cv
49.9995 365.194 49.9346 364.937 49.854 364.69 cv
49.0962 363.378 48.459 363.226 48.0298 362.992 cv
47.6162 362.766 45.104 361.471 42.7769 360.278 cv
41.6328 360.054 40.4526 359.778 39.5571 359.277 cv
39.1919 359.073 38.9238 358.679 38.7217 358.199 cv
38.6055 358.141 li
34.8101 360.784 li
34.8101 373.227 li
50.4346 371.135 li
cp
f
34.8101 360.788 mo
37.3701 363.711 li
40.1128 359.33 li
38.6411 358.008 li
38.6411 358.008 36.418 359.662 34.8101 360.788 cv
cp
.729412 .870588 .811765 rgb
f
30.6547 357.119 mo
30.6547 357.119 28.6534 358.171 26.3701 359.374 cv
26.6221 359.389 li
34.8921 374.201 li
34.8921 359.382 li
30.6547 357.119 li
.882353 .929412 .909804 rgb
f
21.6372 378.117 mo
21.7081 378.117 21.8267 378.142 21.982 378.191 cv
22.1103 378.234 li
24.6338 379.065 34.8921 384.259 34.8921 384.259 cv
34.8921 374.201 li
26.6221 359.389 li
26.3159 359.371 li
23.9102 360.636 20.6494 362.35 19.8579 362.815 cv
19.1294 363.243 18.5542 363.997 17.643 365.35 cv
16.9355 366.4 16.0288 367.812 14.6884 369.713 cv
11.6177 374.079 8.3853 380.38 8.3853 380.38 cv
8.3853 380.38 4.9912 385.227 8.3853 387.491 cv
9.66213 388.344 11.8388 389.442 14.0537 390.478 cv
17.4824 392.087 20.999 393.543 21.4253 393.719 cv
21.476 393.741 li
21.4781 393.719 li
21.7734 391.918 li
22.3291 388.546 li
22.9282 384.905 li
22.9282 384.905 22.6899 384.86 22.3291 384.785 cv
21.8985 384.696 21.2881 384.557 20.6514 384.387 cv
19.2676 384.016 17.7891 383.493 17.9512 382.966 cv
18.2417 381.995 20.5049 378.117 21.6372 378.117 cv
.137255 .34902 .509804 rgb
f
39.1289 357.119 mo
39.1289 357.119 41.1323 358.171 43.415 359.374 cv
43.1636 359.389 li
34.8921 374.201 li
34.8921 359.382 li
39.1289 357.119 li
.811765 .909804 .866667 rgb
f
34.8921 359.382 mo
37.8979 362.815 li
40.7607 357.956 li
39.1289 357.119 li
39.1289 357.119 36.7095 358.975 34.8921 359.382 cv
cp
.729412 .870588 .811765 rgb
f
34.8921 359.382 mo
31.8833 362.815 li
29.0229 357.956 li
30.6548 357.119 li
30.6548 357.119 33.0732 358.975 34.8921 359.382 cv
cp
.811765 .909804 .866667 rgb
f
48.1459 378.117 mo
48.0742 378.117 47.9541 378.142 47.7998 378.191 cv
47.6714 378.234 li
45.1499 379.065 34.8921 384.259 34.8921 384.259 cv
34.8921 374.201 li
43.1636 359.389 li
43.4653 359.371 li
45.8702 360.636 49.1343 362.35 49.9258 362.815 cv
50.6523 363.243 51.2266 363.997 52.143 365.35 cv
52.8482 366.4 53.7558 367.812 55.0942 369.713 cv
58.1679 374.079 61.3984 380.38 61.3984 380.38 cv
61.3984 380.38 64.7915 385.227 61.3984 387.491 cv
60.1191 388.344 57.9448 389.442 55.7275 390.478 cv
52.2988 392.087 48.7836 393.543 48.3569 393.719 cv
48.3067 393.741 li
48.3067 393.719 li
48.0064 391.918 li
47.4536 388.546 li
46.854 384.905 li
46.854 384.905 47.0923 384.86 47.4536 384.785 cv
47.8843 384.696 48.4922 384.557 49.1324 384.387 cv
50.5171 384.016 51.9907 383.493 51.8325 382.966 cv
51.5411 381.995 49.2778 378.117 48.1459 378.117 cv
.0627451 .207843 .309804 rgb
f
20.4942 393.799 mo
20.4942 394.513 21.0718 395.089 21.7842 395.089 cv
47.5191 395.089 li
48.2329 395.089 48.8115 394.513 48.8115 393.799 cv
48.8115 393.086 48.2329 392.509 47.5191 392.509 cv
21.7842 392.509 li
21.0718 392.509 20.4942 393.086 20.4942 393.799 cv
.85098 .192157 .0862745 rgb
f
34.6875 392.509 mo
47.5191 392.509 li
48.2329 392.509 48.8115 393.086 48.8115 393.799 cv
48.8115 394.513 48.2329 395.089 47.5191 395.089 cv
34.6875 395.089 li
34.6875 392.509 li
.678431 .0941176 0 rgb
f
20.4942 391.729 mo
20.4942 392.409 21.0474 392.96 21.7251 392.96 cv
47.5762 392.96 li
48.2578 392.96 48.8115 392.409 48.8115 391.729 cv
48.8115 375.373 li
48.8115 374.693 48.2578 374.144 47.5762 374.144 cv
21.7251 374.144 li
21.0474 374.144 20.4942 374.693 20.4942 375.373 cv
20.4942 391.729 li
.901961 .905882 .909804 rgb
f
33.5405 385.567 mo
32.9986 384.641 32.5855 384.415 32.5566 383.454 cv
32.5528 383.342 li
32.5528 382.185 33.4931 381.245 34.6523 381.245 cv
35.8135 381.245 36.7539 382.185 36.7539 383.342 cv
36.7539 383.454 li
36.7221 384.415 36.3081 384.641 35.7607 385.567 cv
35.6362 385.779 35.6035 386.002 35.5918 386.152 cv
35.8042 386.152 li
35.8042 386.688 li
35.5733 386.688 li
35.5918 386.784 li
35.498 386.991 li
35.5918 387.191 li
35.5044 387.391 li
35.5918 387.57 li
35.5918 387.694 35.4771 387.799 35.3139 387.833 cv
35.2319 388.067 34.9672 388.241 34.6523 388.241 cv
34.3369 388.241 34.0698 388.067 33.9873 387.833 cv
33.8281 387.799 33.7094 387.694 33.7094 387.57 cv
33.7998 387.391 li
33.7094 387.191 li
33.8057 386.991 li
33.7094 386.784 li
33.731 386.688 li
33.5019 386.688 li
33.5019 386.152 li
33.7115 386.152 li
33.7056 386.002 33.6674 385.779 33.5405 385.567 cv
1 1 1 rgb
f
34.4135 380.716 mo
34.4135 380.891 34.5225 381.029 34.6523 381.029 cv
34.7837 381.029 34.8921 380.891 34.8921 380.716 cv
34.8921 379.683 li
34.8921 379.51 34.7837 379.371 34.6523 379.371 cv
34.5225 379.371 34.4135 379.51 34.4135 379.683 cv
34.4135 380.716 li
f
35.8569 380.911 mo
35.7715 381.058 35.7958 381.231 35.9096 381.294 cv
36.021 381.36 36.1856 381.292 36.27 381.144 cv
36.7852 380.248 li
36.8715 380.102 36.853 379.926 36.7368 379.861 cv
36.623 379.795 36.4624 379.864 36.376 380.011 cv
35.8569 380.911 li
f
37.0132 381.794 mo
36.8637 381.879 36.7979 382.043 36.8618 382.156 cv
36.9287 382.27 37.102 382.292 37.2519 382.207 cv
38.1469 381.692 li
38.2949 381.602 38.3624 381.441 38.2974 381.329 cv
38.2315 381.214 38.0567 381.191 37.9106 381.278 cv
37.0132 381.794 li
f
37.5669 383.14 mo
37.393 383.14 37.2564 383.248 37.2564 383.38 cv
37.2564 383.509 37.393 383.615 37.5669 383.615 cv
38.601 383.615 li
38.7744 383.615 38.9111 383.509 38.9111 383.38 cv
38.9111 383.248 38.7744 383.14 38.601 383.14 cv
37.5669 383.14 li
f
37.3764 384.584 mo
37.227 384.495 37.0557 384.52 36.9883 384.632 cv
36.9229 384.749 36.9903 384.909 37.1397 384.996 cv
38.0352 385.512 li
38.1831 385.598 38.3584 385.575 38.4238 385.464 cv
38.4888 385.35 38.4219 385.188 38.2739 385.101 cv
37.3764 384.584 li
f
36.646 385.69 mo
36.5762 385.567 36.4287 385.524 36.312 385.586 cv
36.2006 385.655 36.1645 385.804 36.2343 385.926 cv
36.6606 386.661 li
36.7325 386.786 36.8803 386.831 36.9941 386.765 cv
37.1084 386.7 37.1426 386.547 37.0703 386.427 cv
36.646 385.69 li
f
33.4473 380.911 mo
33.5327 381.058 33.5122 381.231 33.396 381.294 cv
33.2832 381.36 33.1206 381.292 33.0361 381.144 cv
32.5176 380.248 li
32.4321 380.102 32.4546 379.926 32.5674 379.861 cv
32.6816 379.795 32.8433 379.864 32.9287 380.011 cv
33.4473 380.911 li
cp
f
32.292 381.794 mo
32.4409 381.879 32.5083 382.043 32.4448 382.156 cv
32.3779 382.27 32.2041 382.292 32.0566 382.207 cv
31.1592 381.692 li
31.0103 381.602 30.9429 381.441 31.0083 381.329 cv
31.0762 381.214 31.249 381.191 31.396 381.278 cv
32.292 381.794 li
cp
f
31.7388 383.14 mo
31.9077 383.14 32.0474 383.248 32.0474 383.38 cv
32.0474 383.509 31.9077 383.615 31.7388 383.615 cv
30.7021 383.615 li
30.5303 383.615 30.3916 383.509 30.3916 383.38 cv
30.3916 383.248 30.5303 383.14 30.7021 383.14 cv
31.7388 383.14 li
cp
f
31.9268 384.583 mo
32.0757 384.495 32.2485 384.52 32.3184 384.632 cv
32.3818 384.749 32.314 384.909 32.1631 384.996 cv
31.2695 385.512 li
31.1201 385.598 30.9473 385.575 30.8774 385.464 cv
30.8159 385.35 30.8818 385.188 31.0327 385.101 cv
31.9268 384.583 li
cp
f
32.6572 385.69 mo
32.728 385.567 32.876 385.524 32.9897 385.586 cv
33.106 385.655 33.1406 385.804 33.0713 385.926 cv
32.645 386.661 li
32.5718 386.786 32.4243 386.832 32.312 386.765 cv
32.1982 386.7 32.1631 386.547 32.2329 386.427 cv
32.6572 385.69 li
cp
f
47.5762 392.96 mo
34.6875 392.96 li
34.6875 388.24 li
34.9868 388.228 35.235 388.058 35.3139 387.833 cv
35.4771 387.799 35.5918 387.694 35.5918 387.57 cv
35.5044 387.391 li
35.5918 387.191 li
35.498 386.991 li
35.5918 386.784 li
35.5733 386.688 li
35.8042 386.688 li
35.8042 386.152 li
35.5918 386.152 li
35.6035 386.002 35.6362 385.779 35.7607 385.567 cv
36.3081 384.641 36.7221 384.415 36.7539 383.454 cv
36.7539 383.342 li
36.7539 382.197 35.8323 381.264 34.6875 381.245 cv
34.6875 381.025 li
34.8025 381.003 34.8921 380.875 34.8921 380.716 cv
34.8921 379.683 li
34.8921 379.526 34.8025 379.396 34.6875 379.374 cv
34.6875 374.144 li
47.5762 374.144 li
48.2578 374.144 48.8115 374.693 48.8115 375.373 cv
48.8115 378.424 li
48.8115 391.729 li
48.8115 392.409 48.2578 392.96 47.5762 392.96 cv
36.4253 385.558 mo
36.3867 385.558 36.3479 385.567 36.312 385.586 cv
36.2006 385.655 36.1645 385.804 36.2343 385.926 cv
36.6606 386.661 li
36.7102 386.747 36.796 386.795 36.8818 386.795 cv
36.9203 386.795 36.9589 386.786 36.9941 386.765 cv
37.1084 386.7 37.1426 386.547 37.0703 386.427 cv
36.646 385.69 li
36.5977 385.605 36.5121 385.558 36.4253 385.558 cv
37.1907 384.53 mo
37.1042 384.53 37.0281 384.566 36.9883 384.632 cv
36.9229 384.749 36.9903 384.909 37.1397 384.996 cv
38.0352 385.512 li
38.0958 385.547 38.1611 385.564 38.2215 385.564 cv
38.3084 385.564 38.3852 385.529 38.4238 385.464 cv
38.4888 385.35 38.4219 385.188 38.2739 385.101 cv
37.3764 384.584 li
37.3153 384.547 37.2505 384.53 37.1907 384.53 cv
37.5669 383.14 mo
37.393 383.14 37.2564 383.248 37.2564 383.38 cv
37.2564 383.509 37.393 383.615 37.5669 383.615 cv
38.601 383.615 li
38.7744 383.615 38.9111 383.509 38.9111 383.38 cv
38.9111 383.248 38.7744 383.14 38.601 383.14 cv
37.5669 383.14 li
38.0946 381.225 mo
38.0347 381.225 37.9703 381.242 37.9106 381.278 cv
37.0132 381.794 li
36.8637 381.879 36.7979 382.043 36.8618 382.156 cv
36.9013 382.223 36.9779 382.258 37.0648 382.258 cv
37.1251 382.258 37.1905 382.241 37.2519 382.207 cv
38.1469 381.692 li
38.2949 381.602 38.3624 381.441 38.2974 381.329 cv
38.2584 381.261 38.1813 381.225 38.0946 381.225 cv
36.6414 379.836 mo
36.545 379.836 36.4401 379.902 36.376 380.011 cv
35.8569 380.911 li
35.7715 381.058 35.7958 381.231 35.9096 381.294 cv
35.9385 381.311 35.971 381.319 36.0047 381.319 cv
36.101 381.319 36.2075 381.254 36.27 381.144 cv
36.7852 380.248 li
36.8715 380.102 36.853 379.926 36.7368 379.861 cv
36.7074 379.844 36.6749 379.836 36.6414 379.836 cv
.87451 .878431 .882353 rgb
f
34.6875 388.24 mo
34.6875 381.245 li
35.8323 381.264 36.7539 382.197 36.7539 383.342 cv
36.7539 383.454 li
36.7221 384.415 36.3081 384.641 35.7607 385.567 cv
35.6362 385.779 35.6035 386.002 35.5918 386.152 cv
35.8042 386.152 li
35.8042 386.688 li
35.5733 386.688 li
35.5918 386.784 li
35.498 386.991 li
35.5918 387.191 li
35.5044 387.391 li
35.5918 387.57 li
35.5918 387.694 35.4771 387.799 35.3139 387.833 cv
35.235 388.058 34.9868 388.228 34.6875 388.24 cv
.968627 .968627 .968627 rgb
f
34.6875 381.025 mo
34.6875 379.374 li
34.8025 379.396 34.8921 379.526 34.8921 379.683 cv
34.8921 380.716 li
34.8921 380.875 34.8025 381.003 34.6875 381.025 cv
f
36.0047 381.319 mo
35.971 381.319 35.9385 381.311 35.9096 381.294 cv
35.7958 381.231 35.7715 381.058 35.8569 380.911 cv
36.376 380.011 li
36.4401 379.902 36.545 379.836 36.6414 379.836 cv
36.6749 379.836 36.7074 379.844 36.7368 379.861 cv
36.853 379.926 36.8715 380.102 36.7852 380.248 cv
36.27 381.144 li
36.2075 381.254 36.101 381.319 36.0047 381.319 cv
f
37.0648 382.258 mo
36.9779 382.258 36.9013 382.223 36.8618 382.156 cv
36.7979 382.043 36.8637 381.879 37.0132 381.794 cv
37.9106 381.278 li
37.9703 381.242 38.0347 381.225 38.0946 381.225 cv
38.1813 381.225 38.2584 381.261 38.2974 381.329 cv
38.3624 381.441 38.2949 381.602 38.1469 381.692 cv
37.2519 382.207 li
37.1905 382.241 37.1251 382.258 37.0648 382.258 cv
f
38.601 383.615 mo
37.5669 383.615 li
37.393 383.615 37.2564 383.509 37.2564 383.38 cv
37.2564 383.248 37.393 383.14 37.5669 383.14 cv
38.601 383.14 li
38.7744 383.14 38.9111 383.248 38.9111 383.38 cv
38.9111 383.509 38.7744 383.615 38.601 383.615 cv
f
38.2215 385.564 mo
38.1611 385.564 38.0958 385.547 38.0352 385.512 cv
37.1397 384.996 li
36.9903 384.909 36.9229 384.749 36.9883 384.632 cv
37.0281 384.566 37.1042 384.53 37.1907 384.53 cv
37.2505 384.53 37.3153 384.547 37.3764 384.584 cv
38.2739 385.101 li
38.4219 385.188 38.4888 385.35 38.4238 385.464 cv
38.3852 385.529 38.3084 385.564 38.2215 385.564 cv
f
36.8818 386.795 mo
36.796 386.795 36.7102 386.747 36.6606 386.661 cv
36.2343 385.926 li
36.1645 385.804 36.2006 385.655 36.312 385.586 cv
36.3479 385.567 36.3867 385.558 36.4253 385.558 cv
36.5121 385.558 36.5977 385.605 36.646 385.69 cv
37.0703 386.427 li
37.1426 386.547 37.1084 386.7 36.9941 386.765 cv
36.9589 386.786 36.9203 386.795 36.8818 386.795 cv
f
22.0151 367.726 mo
10.3408 367.726 li
10.3408 349.65 li
22.0151 349.65 li
22.0151 367.726 li
cp
1 .827451 .360784 rgb
f
25.2788 352.498 mo
7.07666 352.498 li
16.1782 344.661 li
25.2788 352.498 li
cp
f
47.6035 344.786 mo
59.2788 344.786 li
59.2788 362.861 li
47.6035 362.861 li
47.6035 344.786 li
cp
1 .756863 .188235 rgb
f
44.3408 360.011 mo
62.543 360.011 li
53.4409 367.85 li
44.3408 360.011 li
cp
f
52.6094 356.268 mo
52.6919 355.87 52.5669 355.637 52.4111 355.619 cv
52.2549 355.595 51.5449 356.211 51.4419 356.334 cv
51.3369 356.455 50.5762 357.029 50.4414 357.107 cv
50.3057 357.183 49.9829 357.415 49.9722 357.546 cv
49.9639 357.641 50.1919 357.747 50.4512 357.624 cv
50.7124 357.503 51.2964 357.083 51.5039 356.985 cv
51.7119 356.885 52.5249 356.666 52.6094 356.268 cv
cp
.0627451 .207843 .309804 rgb
f
55.0386 355.154 mo
55.1621 355.163 55.4233 355.186 55.5068 354.921 cv
55.5903 354.658 55.6436 354.469 55.5068 354.381 cv
55.3706 354.292 54.9443 354.469 54.5581 354.481 cv
54.4629 354.483 54.2256 354.481 53.9214 354.479 cv
53.9468 354.387 53.9751 354.314 54.0059 354.261 cv
54.1846 353.962 54.2354 353.519 54.1001 353.411 cv
53.9644 353.3 53.019 353.191 53.0376 354.465 cv
52.2607 354.456 51.4766 354.452 51.4102 354.481 cv
51.4102 354.481 51.3901 355.154 51.5664 355.209 cv
51.6963 355.249 52.5903 355.2 53.0571 355.17 cv
53.0874 356.235 53.1055 357.198 52.8276 357.35 cv
52.6348 357.453 52.6348 357.47 52.2759 357.425 cv
52.2759 357.425 52.3179 358.065 52.9326 358.065 cv
53.5469 358.065 53.6816 357.138 53.7241 356.334 cv
53.7441 355.946 53.769 355.522 53.8086 355.149 cv
54.2837 355.147 54.957 355.147 55.0386 355.154 cv
cp
f
56.7876 353.809 mo
55.3394 353.211 53.4224 350.608 53.4224 350.608 cv
53.4634 351.987 51.2222 353.817 50.3672 354.06 cv
49.5132 354.302 49.1069 354.625 49.1719 354.791 cv
49.2397 354.958 49.8267 354.846 50.7959 354.356 cv
51.7646 353.871 53.7139 352.23 53.7139 352.23 cv
55.7993 354.589 56.6016 354.789 57.0918 354.862 cv
57.5815 354.934 58.3311 354.634 58.3311 354.634 cv
58.3311 354.634 58.2378 354.403 56.7876 353.809 cv
cp
f
51.7021 350.102 mo
51.7021 350.102 51.8682 351.227 52.0254 351.347 cv
52.1821 351.467 52.6919 351.125 52.6919 351.125 cv
52.4004 350.927 52.3472 350.157 52.3472 350.157 cv
54.8081 350.002 li
54.4438 351.115 li
54.8813 351.373 li
55.4658 350.023 li
55.4658 350.023 57.8301 350.013 58.0078 350.034 cv
58.1865 350.055 58.3794 349.506 58.3794 349.162 cv
58.3794 348.82 57.8726 349.008 57.5493 349.12 cv
57.2266 349.23 55.5693 349.339 55.5693 349.339 cv
56.0908 348.115 li
55.2568 347.926 54.7666 348.346 54.7666 348.346 cv
54.9443 348.6 54.9023 349.405 54.9023 349.405 cv
52.3374 349.45 li
52.3896 348.045 li
52.2651 347.876 50.7744 348.391 51.0767 348.58 cv
51.3784 348.765 51.5767 349.47 51.5767 349.47 cv
51.5767 349.47 49.5439 349.36 49.3159 349.383 cv
49.0854 349.405 49.1069 349.648 49.3159 350.102 cv
49.5244 350.551 51.7021 350.102 51.7021 350.102 cv
cp
f
54.0894 355.707 mo
54.0894 355.707 54.1411 356.101 54.6826 356.334 cv
55.2251 356.567 55.7358 357.36 55.8193 357.624 cv
55.9028 357.89 56.2578 358.099 56.4644 357.845 cv
56.6733 357.59 56.9355 356.791 54.0894 355.707 cv
cp
f
16.4302 356.589 mo
15.9189 354.917 li
15.4146 356.589 li
16.4302 356.589 li
cp
16.1426 359.064 mo
16.1426 358.047 li
16.8794 358.047 li
16.7168 357.521 li
15.1279 357.521 li
14.9648 358.047 li
15.5698 358.047 li
15.5698 359.064 li
13.1045 359.064 li
13.1045 358.047 li
13.6323 358.047 li
14.6787 354.644 li
14.3608 354.644 li
14.3608 353.644 li
17.3364 353.644 li
18.7085 358.047 li
19.2515 358.047 li
19.2515 359.064 li
16.1426 359.064 li
cp
.137255 .34902 .509804 rgb
f
16.3486 362.823 mo
16.3252 362.783 16.2173 362.597 15.8921 362.597 cv
15.582 362.597 15.4424 362.768 15.4424 363.009 cv
15.4424 363.224 15.6201 363.372 15.853 363.372 cv
16.0854 363.372 16.2788 363.233 16.3486 363.117 cv
16.3486 362.823 li
cp
14.1323 360.682 mo
14.4419 360.497 15.1089 360.132 15.8223 360.132 cv
16.752 360.132 17.9219 360.482 17.9219 361.729 cv
17.9219 363.241 li
18.3872 363.241 li
18.3872 364.234 li
16.7285 364.234 li
16.5425 363.882 li
16.2563 364.28 15.7749 364.379 15.4961 364.379 cv
14.7598 364.379 13.9692 363.985 13.9692 363.085 cv
13.9692 362.211 14.7056 361.66 15.582 361.66 cv
16.0391 361.66 16.3101 361.883 16.3486 361.93 cv
16.3486 361.66 li
16.3486 361.312 16.0313 361.225 15.6133 361.225 cv
15.1553 361.225 14.7529 361.418 14.4585 361.582 cv
14.1323 360.682 li
cp
f
132.427 360.046 mo
132.427 360.046 140.889 364.381 141.67 364.809 cv
142.453 365.236 143.946 365.377 145.582 373.055 cv
147.216 380.736 148.779 384.077 147.36 388.414 cv
145.937 392.75 146.007 392.252 146.007 392.252 cv
139.609 392.252 li
139.609 392.252 140.887 389.125 141.387 387.49 cv
141.886 385.854 140.306 379.527 140.171 378.886 cv
140.035 378.246 139.75 378.388 139.75 380.806 cv
139.75 383.223 139.75 392.252 139.75 392.252 cv
128.697 392.252 li
128.697 362.036 li
132.427 360.046 li
.811765 .909804 .866667 rgb
f
124.969 360.046 mo
124.969 360.046 116.506 364.381 115.726 364.809 cv
114.943 365.236 113.449 365.377 111.814 373.055 cv
110.179 380.736 108.616 384.077 110.038 388.414 cv
111.459 392.75 111.388 392.252 111.388 392.252 cv
117.788 392.252 li
117.788 392.252 116.507 389.125 116.009 387.49 cv
115.511 385.854 117.091 379.527 117.224 378.886 cv
117.361 378.246 117.644 378.388 117.644 380.806 cv
117.644 383.223 117.644 392.252 117.644 392.252 cv
128.697 392.252 li
128.697 362.036 li
124.969 360.046 li
.909804 .964706 .937255 rgb
f
125.274 355.558 mo
128.669 355.092 li
132.067 355.558 li
132.067 355.558 131.816 358.624 132.427 360.046 cv
132.427 360.046 130.592 362.177 128.669 362.036 cv
126.75 362.177 124.914 360.046 124.914 360.046 cv
125.524 358.624 125.274 355.558 125.274 355.558 cv
.956863 .705882 .486275 rgb
f
121.358 348.042 mo
121.504 348.042 li
121.441 347.544 121.378 347.052 121.318 346.587 cv
121.005 344.181 120.298 337.144 128.697 337.144 cv
137.098 337.144 136.391 344.181 136.077 346.587 cv
136.018 347.052 135.956 347.544 135.893 348.042 cv
136.038 348.042 li
137.315 347.097 137.425 349.567 136.891 350.411 cv
136.45 351.111 136.44 351.186 136.174 351.955 cv
135.977 352.522 135.65 352.597 135.378 352.535 cv
135.342 352.871 135.313 353.165 135.293 353.397 cv
135.175 354.696 132.056 357.297 131.347 358.111 cv
130.685 358.872 129.58 358.575 129.226 358.559 cv
128.869 358.542 128.697 358.534 128.697 358.534 cv
128.697 358.534 128.528 358.542 128.17 358.559 cv
127.816 358.575 126.711 358.872 126.049 358.111 cv
125.34 357.297 122.221 354.696 122.104 353.397 cv
122.082 353.165 122.054 352.871 122.019 352.535 cv
121.746 352.597 121.42 352.522 121.224 351.955 cv
120.956 351.186 120.946 351.111 120.505 350.411 cv
119.971 349.567 120.08 347.097 121.358 348.042 cv
.956863 .760784 .592157 rgb
f
129.534 336.284 mo
129.542 336.286 li
129.689 336.286 129.851 336.29 130.026 336.299 cv
136.878 336.601 136.508 343.126 136.508 343.126 cv
136.497 343.123 li
136.551 344.761 136.211 346.403 135.893 348.042 cv
135.753 347.245 li
135.753 347.245 135.68 346.455 135.363 345.488 cv
135.313 345.335 li
135.216 345.068 135.106 344.79 134.971 344.514 cv
133.107 340.801 128.697 342.011 128.697 342.011 cv
128.697 342.011 124.285 340.799 122.423 344.519 cv
122.292 344.79 122.183 345.058 122.09 345.321 cv
122.031 345.492 li
121.717 346.456 121.643 347.245 121.643 347.245 cv
121.504 348.042 li
121.304 347.016 121.097 345.989 120.979 344.96 cv
120.979 344.943 li
120.204 339.49 121.789 335.889 129.534 336.284 cv
.345098 .176471 .0666667 rgb
f
132.096 358.605 mo
132.052 358.215 132.03 357.811 132.021 357.43 cv
132.117 357.338 132.219 357.24 132.325 357.138 cv
132.219 357.24 132.118 357.338 132.022 357.43 cv
132.031 357.811 132.053 358.215 132.096 358.605 cv
132.638 356.836 mo
132.66 356.815 132.682 356.794 132.704 356.772 cv
132.689 356.787 li
132.672 356.803 132.655 356.82 132.638 356.836 cv
133.168 356.315 mo
133.194 356.289 133.22 356.263 133.246 356.237 cv
133.222 356.262 133.198 356.286 133.174 356.31 cv
133.168 356.315 li
134.473 354.896 mo
134.473 354.896 134.474 354.895 134.474 354.894 cv
134.474 354.896 li
134.473 354.896 li
.909804 .839216 .772549 rgb
f
128.854 362.04 mo
128.802 362.04 128.749 362.039 128.697 362.036 cv
128.697 358.534 li
128.697 358.534 128.869 358.542 129.226 358.559 cv
129.384 358.566 129.692 358.629 130.044 358.629 cv
130.479 358.629 130.981 358.532 131.347 358.111 cv
131.489 357.948 131.728 357.712 132.021 357.43 cv
132.03 357.811 132.052 358.215 132.096 358.605 cv
132.157 359.144 132.259 359.657 132.427 360.046 cv
132.427 360.046 132.427 360.046 132.427 360.046 cv
132.427 360.046 132.427 360.047 132.427 360.047 cv
132.427 360.047 132.427 360.047 132.427 360.047 cv
132.392 360.086 130.69 362.04 128.854 362.04 cv
.870588 .592157 .376471 rgb
f
130.044 358.629 mo
129.692 358.629 129.384 358.566 129.226 358.559 cv
128.869 358.542 128.697 358.534 128.697 358.534 cv
128.697 342.011 li
128.697 342.011 129.383 341.823 130.329 341.823 cv
131.781 341.823 133.842 342.266 134.971 344.514 cv
135.106 344.79 135.216 345.068 135.313 345.335 cv
135.363 345.488 li
135.68 346.455 135.753 347.245 135.753 347.245 cv
135.893 348.042 li
135.893 348.042 li
135.893 348.042 li
136.038 348.042 li
136.238 347.895 136.409 347.83 136.554 347.83 cv
136.999 347.83 137.192 348.438 137.193 349.092 cv
137.193 349.585 137.084 350.105 136.891 350.411 cv
136.45 351.111 136.44 351.186 136.174 351.955 cv
136.013 352.418 135.766 352.553 135.533 352.553 cv
135.48 352.553 135.428 352.546 135.378 352.535 cv
135.342 352.871 135.313 353.165 135.293 353.397 cv
135.293 353.397 li
135.282 353.509 135.244 353.631 135.193 353.762 cv
135.192 353.767 li
135.189 353.769 li
135.056 354.105 134.801 354.49 134.475 354.894 cv
134.474 354.894 li
134.474 354.895 134.473 354.896 134.473 354.896 cv
134.472 354.897 li
134.356 355.039 134.232 355.185 134.105 355.328 cv
134.001 355.443 li
133.897 355.558 133.789 355.674 133.68 355.79 cv
133.598 355.877 li
133.481 355.997 133.363 356.118 133.246 356.237 cv
133.22 356.263 133.194 356.289 133.168 356.315 cv
133.153 356.329 li
133.01 356.471 132.869 356.61 132.73 356.746 cv
132.704 356.772 li
132.682 356.794 132.66 356.815 132.638 356.836 cv
132.53 356.94 132.425 357.041 132.325 357.138 cv
132.219 357.24 132.117 357.338 132.021 357.43 cv
131.728 357.712 131.489 357.948 131.347 358.111 cv
130.981 358.532 130.479 358.629 130.044 358.629 cv
.870588 .639216 .458824 rgb
f
135.893 348.042 mo
135.753 347.245 li
135.753 347.245 135.68 346.455 135.363 345.488 cv
135.313 345.335 li
135.216 345.068 135.106 344.79 134.971 344.514 cv
133.842 342.266 131.781 341.823 130.329 341.823 cv
129.383 341.823 128.697 342.011 128.697 342.011 cv
128.697 336.279 li
128.97 336.281 129.236 336.284 129.534 336.284 cv
129.542 336.286 li
129.689 336.286 129.851 336.29 130.026 336.299 cv
136.209 336.572 136.512 341.911 136.512 342.952 cv
136.512 343.064 136.508 343.126 136.508 343.126 cv
136.497 343.123 li
136.497 343.123 li
136.501 343.238 136.503 343.353 136.503 343.468 cv
136.503 344.992 136.189 346.518 135.893 348.042 cv
135.893 348.042 li
.313725 .14902 .0509804 rgb
f
128.697 362.036 mo
131.345 365.057 li
133.861 360.782 li
132.427 360.046 li
132.427 360.046 130.298 361.68 128.697 362.036 cv
cp
.729412 .870588 .811765 rgb
f
128.697 362.036 mo
126.051 365.057 li
123.534 360.782 li
124.969 360.046 li
124.969 360.046 127.098 361.68 128.697 362.036 cv
cp
.811765 .909804 .866667 rgb
f
139.75 391.9 mo
139.75 390.22 139.75 382.939 139.75 380.806 cv
139.75 378.388 140.035 378.246 140.171 378.886 cv
140.306 379.527 141.886 385.854 141.387 387.49 cv
140.988 388.793 140.097 391.041 139.75 391.9 cv
cp
128.697 370.812 mo
128.697 392.252 li
139.609 392.252 li
139.75 392.252 li
146.007 392.252 li
146.007 392.252 145.938 392.75 147.36 388.414 cv
148.779 384.077 147.216 380.736 145.582 373.055 cv
143.946 365.377 142.453 365.236 141.67 364.809 cv
141.251 364.58 138.629 363.229 136.284 362.024 cv
135.974 362.042 li
128.697 370.812 li
cp
1 .756863 .188235 rgb
f
116.009 387.49 mo
115.511 385.854 117.091 379.527 117.224 378.886 cv
117.361 378.246 117.644 378.388 117.644 380.806 cv
117.644 382.939 117.644 390.22 117.644 391.9 cv
117.298 391.041 116.408 388.793 116.009 387.49 cv
cp
121.422 362.042 mo
121.112 362.024 li
118.767 363.229 116.143 364.58 115.726 364.809 cv
114.943 365.236 113.449 365.377 111.814 373.055 cv
110.179 380.736 108.616 384.077 110.038 388.414 cv
111.458 392.75 111.388 392.252 111.388 392.252 cv
117.644 392.252 li
117.788 392.252 li
128.697 392.252 li
128.697 370.812 li
121.422 362.042 li
cp
1 .827451 .360784 rgb
f
128.064 373.966 mo
128.064 374.316 128.347 374.599 128.697 374.599 cv
129.049 374.599 129.331 374.316 129.331 373.966 cv
129.331 373.616 129.049 373.332 128.697 373.332 cv
128.347 373.332 128.064 373.616 128.064 373.966 cv
cp
.137255 .34902 .509804 rgb
f
129.331 373.966 mo
129.331 374.316 129.049 374.599 128.697 374.599 cv
128.697 373.332 li
129.049 373.332 129.331 373.616 129.331 373.966 cv
cp
.0627451 .207843 .309804 rgb
f
128.064 377.539 mo
128.064 377.888 128.347 378.172 128.697 378.172 cv
129.049 378.172 129.331 377.888 129.331 377.539 cv
129.331 377.188 129.049 376.904 128.697 376.904 cv
128.347 376.904 128.064 377.188 128.064 377.539 cv
cp
.137255 .34902 .509804 rgb
f
129.331 377.539 mo
129.331 377.888 129.049 378.172 128.697 378.172 cv
128.697 376.904 li
129.049 376.904 129.331 377.188 129.331 377.539 cv
cp
.0627451 .207843 .309804 rgb
f
128.064 381.112 mo
128.064 381.461 128.347 381.745 128.697 381.745 cv
129.049 381.745 129.331 381.461 129.331 381.112 cv
129.331 380.76 129.049 380.478 128.697 380.478 cv
128.347 380.478 128.064 380.76 128.064 381.112 cv
cp
.137255 .34902 .509804 rgb
f
129.331 381.112 mo
129.331 381.461 129.049 381.745 128.697 381.745 cv
128.697 380.478 li
129.049 380.478 129.331 380.76 129.331 381.112 cv
cp
.0627451 .207843 .309804 rgb
f
128.064 384.684 mo
128.064 385.036 128.347 385.318 128.697 385.318 cv
129.049 385.318 129.331 385.036 129.331 384.684 cv
129.331 384.335 129.049 384.051 128.697 384.051 cv
128.347 384.051 128.064 384.335 128.064 384.684 cv
cp
.137255 .34902 .509804 rgb
f
129.331 384.684 mo
129.331 385.036 129.049 385.318 128.697 385.318 cv
128.697 384.051 li
129.049 384.051 129.331 384.335 129.331 384.684 cv
cp
.0627451 .207843 .309804 rgb
f
128.064 388.257 mo
128.064 388.608 128.347 388.891 128.697 388.891 cv
129.049 388.891 129.331 388.608 129.331 388.257 cv
129.331 387.908 129.049 387.624 128.697 387.624 cv
128.347 387.624 128.064 387.908 128.064 388.257 cv
cp
.137255 .34902 .509804 rgb
f
129.331 388.257 mo
129.331 388.608 129.049 388.891 128.697 388.891 cv
128.697 387.624 li
129.049 387.624 129.331 387.908 129.331 388.257 cv
cp
.0627451 .207843 .309804 rgb
f
165.463 359.104 mo
165.463 359.104 175.603 364.299 176.54 364.81 cv
177.477 365.321 179.265 365.492 181.224 374.692 cv
183.183 383.892 185.055 387.894 183.353 393.09 cv
181.651 398.288 181.735 397.691 181.735 397.691 cv
174.069 397.691 li
174.069 397.691 175.601 393.943 176.198 391.983 cv
176.794 390.024 174.904 382.442 174.742 381.676 cv
174.579 380.909 174.239 381.08 174.239 383.976 cv
174.239 386.873 174.239 397.691 174.239 397.691 cv
160.998 397.691 li
160.998 361.489 li
165.463 359.104 li
.811765 .909804 .866667 rgb
f
156.528 359.104 mo
156.528 359.104 146.391 364.299 145.454 364.81 cv
144.517 365.321 142.728 365.492 140.769 374.692 cv
138.809 383.892 136.938 387.894 138.639 393.09 cv
140.343 398.288 140.258 397.691 140.258 397.691 cv
147.924 397.691 li
147.924 397.691 146.393 393.943 145.796 391.983 cv
145.198 390.024 147.09 382.442 147.251 381.676 cv
147.414 380.909 147.754 381.08 147.754 383.976 cv
147.754 386.873 147.754 397.691 147.754 397.691 cv
160.998 397.691 li
160.998 361.489 li
156.528 359.104 li
.909804 .964706 .937255 rgb
f
156.896 353.728 mo
160.963 353.17 li
165.032 353.728 li
165.032 353.728 164.733 357.399 165.463 359.104 cv
165.463 359.104 163.267 361.658 160.963 361.489 cv
158.661 361.658 156.463 359.104 156.463 359.104 cv
157.195 357.399 156.896 353.728 156.896 353.728 cv
.956863 .760784 .592157 rgb
f
152.202 344.722 mo
152.378 344.722 li
152.303 344.125 152.228 343.537 152.155 342.979 cv
151.781 340.096 150.933 331.666 160.998 331.666 cv
171.061 331.666 170.215 340.096 169.839 342.979 cv
169.766 343.537 169.691 344.125 169.619 344.722 cv
169.792 344.722 li
171.322 343.59 171.453 346.549 170.812 347.56 cv
170.283 348.397 170.271 348.489 169.954 349.41 cv
169.718 350.089 169.326 350.181 169 350.106 cv
168.958 350.507 168.921 350.86 168.899 351.139 cv
168.756 352.695 165.018 355.811 164.17 356.787 cv
163.377 357.698 162.054 357.341 161.629 357.324 cv
161.201 357.302 160.998 357.292 160.998 357.292 cv
160.998 357.292 160.793 357.302 160.362 357.324 cv
159.939 357.341 158.617 357.698 157.823 356.787 cv
156.975 355.811 153.237 352.695 153.096 351.139 cv
153.07 350.86 153.038 350.507 152.993 350.106 cv
152.668 350.181 152.275 350.089 152.042 349.41 cv
151.721 348.489 151.71 348.397 151.18 347.56 cv
150.543 346.549 150.672 343.59 152.202 344.722 cv
f
152.545 343.768 mo
152.545 344.279 153.463 348.306 153.616 349.591 cv
153.91 352.031 155.662 353.167 156.172 353.728 cv
156.684 354.289 158.369 354.852 159.083 355.107 cv
159.8 355.364 162.196 355.364 162.91 355.107 cv
163.626 354.852 165.312 354.289 165.822 353.728 cv
166.332 353.167 168.084 352.031 168.375 349.591 cv
168.531 348.306 169.448 344.279 169.448 343.768 cv
169.448 343.426 169.614 343.551 169.715 343.945 cv
169.682 344.203 169.651 344.461 169.619 344.722 cv
169.619 344.722 169.091 350.128 169 350.106 cv
168.958 350.507 168.921 350.86 168.899 351.139 cv
168.885 351.276 168.838 351.425 168.776 351.581 cv
168.585 351.876 168.29 352.359 167.916 352.933 cv
166.708 354.426 164.755 356.115 164.17 356.787 cv
163.377 357.698 162.054 357.341 161.629 357.324 cv
161.201 357.302 160.998 357.292 160.998 357.292 cv
160.998 357.292 160.793 357.302 160.362 357.324 cv
159.939 357.341 158.617 357.698 157.823 356.787 cv
157.24 356.115 155.286 354.426 154.078 352.933 cv
153.706 352.359 153.408 351.876 153.218 351.581 cv
153.157 351.425 153.108 351.276 153.096 351.139 cv
153.07 350.86 153.038 350.507 152.993 350.106 cv
152.902 350.128 152.378 344.722 152.378 344.722 cv
152.343 344.461 152.311 344.203 152.279 343.945 cv
152.38 343.551 152.545 343.426 152.545 343.768 cv
.345098 .176471 .0666667 rgb
f
158.325 352.386 mo
159.452 351.365 160.998 351.093 160.998 351.093 cv
160.998 351.093 162.543 351.365 163.667 352.386 cv
164.793 353.408 163.667 355.248 163.667 355.248 cv
163.419 354.926 li
164.634 352.465 160.998 352.32 160.998 352.32 cv
160.998 352.32 157.362 352.465 158.574 354.926 cv
158.325 355.248 li
158.325 355.248 157.2 353.408 158.325 352.386 cv
f
160.178 355.111 mo
160.53 354.772 160.998 354.826 160.998 354.826 cv
160.998 354.826 161.463 354.772 161.815 355.111 cv
162.167 355.452 162.916 355.201 162.916 355.201 cv
161.409 356.44 li
160.998 356.032 li
160.585 356.44 li
159.08 355.201 li
159.08 355.201 159.826 355.452 160.178 355.111 cv
f
153.823 329.502 mo
153.823 329.502 153.416 330.636 161.997 330.636 cv
162.009 330.638 li
162.185 330.638 162.378 330.643 162.59 330.656 cv
170.799 331.015 170.352 338.834 170.352 338.834 cv
170.34 338.828 li
170.405 340.792 169.996 342.761 169.619 344.722 cv
169.448 343.768 li
169.448 343.768 169.363 342.821 168.984 341.663 cv
168.92 341.48 li
168.806 341.16 168.672 340.828 168.513 340.496 cv
166.28 336.048 160.998 337.497 160.998 337.497 cv
160.998 337.497 155.71 336.046 153.478 340.501 cv
153.323 340.826 153.191 341.149 153.08 341.464 cv
153.009 341.668 li
152.633 342.823 152.545 343.768 152.545 343.768 cv
152.378 344.722 li
152.139 343.495 151.89 342.263 151.751 341.03 cv
151.749 341.009 li
150.818 334.475 153.823 329.502 153.823 329.502 cv
f
165.463 359.104 mo
165.119 358.3 165.003 357.058 164.978 355.971 cv
165.011 355.938 165.045 355.905 165.08 355.872 cv
165.125 355.828 165.172 355.783 165.219 355.738 cv
165.137 355.818 165.057 355.895 164.98 355.97 cv
165.004 357.058 165.12 358.297 165.463 359.104 cv
166.163 354.822 mo
166.21 354.775 166.258 354.728 166.305 354.681 cv
166.258 354.729 166.21 354.776 166.163 354.822 cv
167.918 352.932 mo
167.947 352.896 167.975 352.861 168.003 352.825 cv
167.975 352.86 167.947 352.896 167.918 352.932 cv
167.918 352.932 li
161.997 330.636 mo
161.649 330.636 161.316 330.634 160.998 330.631 cv
160.998 330.629 li
161.324 330.632 161.641 330.636 161.997 330.636 cv
.909804 .839216 .772549 rgb
f
161.185 361.494 mo
161.122 361.494 161.06 361.493 160.998 361.489 cv
160.998 357.292 li
160.998 357.292 161.201 357.302 161.629 357.324 cv
161.819 357.332 162.188 357.407 162.608 357.407 cv
163.13 357.407 163.731 357.291 164.17 356.787 cv
164.341 356.591 164.627 356.309 164.978 355.971 cv
165.003 357.058 165.119 358.3 165.463 359.104 cv
165.463 359.104 li
165.463 359.104 165.463 359.104 165.463 359.104 cv
165.447 359.123 163.396 361.494 161.185 361.494 cv
.870588 .639216 .458824 rgb
f
165.08 355.872 mo
165.13 355.824 165.181 355.774 165.233 355.724 cv
165.229 355.729 165.224 355.733 165.219 355.738 cv
165.172 355.783 165.125 355.828 165.08 355.872 cv
162.077 355.255 mo
161.98 355.227 161.889 355.182 161.815 355.111 cv
161.548 354.853 161.215 354.823 161.07 354.823 cv
161.025 354.823 160.998 354.826 160.998 354.826 cv
160.998 352.32 li
160.998 352.32 164.634 352.465 163.419 354.926 cv
163.419 354.926 li
163.223 354.997 163.048 355.058 162.91 355.107 cv
162.725 355.173 162.428 355.223 162.077 355.255 cv
166.037 354.945 mo
166.326 354.662 166.622 354.365 166.91 354.063 cv
166.867 354.11 li
166.7 354.285 166.528 354.458 166.358 354.628 cv
166.335 354.651 li
166.325 354.661 166.315 354.671 166.305 354.681 cv
166.258 354.728 166.21 354.775 166.163 354.822 cv
166.121 354.864 166.079 354.905 166.037 354.945 cv
163.913 354.744 mo
164.165 354.125 164.423 353.071 163.667 352.386 cv
162.543 351.365 160.998 351.093 160.998 351.093 cv
160.998 337.497 li
160.998 337.497 161.819 337.271 162.952 337.271 cv
164.69 337.271 167.161 337.803 168.513 340.496 cv
168.672 340.828 168.806 341.16 168.92 341.48 cv
168.984 341.663 li
169.363 342.821 169.448 343.768 169.448 343.768 cv
169.448 344.279 168.531 348.306 168.375 349.591 cv
168.084 352.031 166.332 353.167 165.822 353.728 cv
165.488 354.095 164.652 354.462 163.913 354.744 cv
167.761 353.121 mo
167.806 353.067 167.851 353.013 167.895 352.959 cv
167.851 353.013 167.806 353.067 167.761 353.121 cv
167.916 352.933 mo
167.916 352.933 li
168.29 352.359 168.585 351.876 168.776 351.581 cv
168.776 351.581 li
168.774 351.586 li
168.624 351.958 168.353 352.38 168.003 352.825 cv
167.975 352.861 167.947 352.896 167.918 352.932 cv
167.916 352.933 li
168.813 351.484 mo
168.825 351.449 168.837 351.415 168.847 351.381 cv
168.837 351.415 168.825 351.449 168.813 351.484 cv
168.848 351.379 mo
168.848 351.378 168.849 351.377 168.849 351.376 cv
168.849 351.377 168.848 351.378 168.848 351.379 cv
169.184 350.128 mo
169.122 350.128 169.06 350.12 169 350.106 cv
169.001 350.106 169.001 350.106 169.001 350.106 cv
169.093 350.106 169.619 344.722 169.619 344.722 cv
169.619 344.722 li
169.619 344.722 li
169.619 344.722 li
169.792 344.722 li
170.031 344.545 170.236 344.468 170.409 344.468 cv
170.943 344.468 171.174 345.196 171.175 345.981 cv
171.175 346.571 171.045 347.194 170.812 347.56 cv
170.283 348.397 170.271 348.489 169.954 349.41 cv
169.761 349.965 169.464 350.128 169.184 350.128 cv
f
162.608 357.407 mo
162.188 357.407 161.819 357.332 161.629 357.324 cv
161.201 357.302 160.998 357.292 160.998 357.292 cv
160.998 356.032 li
161.409 356.44 li
162.916 355.201 li
162.916 355.201 162.65 355.29 162.361 355.29 cv
162.266 355.29 162.169 355.28 162.077 355.255 cv
162.428 355.223 162.725 355.173 162.91 355.107 cv
163.048 355.058 163.223 354.997 163.419 354.926 cv
163.667 355.248 li
163.667 355.248 163.789 355.048 163.913 354.744 cv
164.652 354.462 165.488 354.095 165.822 353.728 cv
166.332 353.167 168.084 352.031 168.375 349.591 cv
168.531 348.306 169.448 344.279 169.448 343.768 cv
169.448 343.768 li
169.619 344.722 li
169.619 344.722 169.093 350.106 169.001 350.106 cv
169.001 350.106 169.001 350.106 169 350.106 cv
169 350.106 li
168.958 350.507 168.921 350.86 168.899 351.139 cv
168.899 351.139 li
168.891 351.214 168.874 351.293 168.849 351.376 cv
168.849 351.377 168.848 351.378 168.848 351.379 cv
168.848 351.38 168.848 351.38 168.847 351.381 cv
168.837 351.415 168.825 351.449 168.813 351.484 cv
168.802 351.514 168.79 351.544 168.778 351.575 cv
168.776 351.581 li
168.776 351.581 li
168.585 351.876 168.29 352.359 167.916 352.933 cv
167.916 352.933 li
167.913 352.937 li
167.907 352.944 167.901 352.952 167.895 352.959 cv
167.851 353.013 167.806 353.067 167.761 353.121 cv
167.668 353.231 167.572 353.34 167.475 353.452 cv
167.35 353.588 li
167.225 353.727 167.096 353.867 166.965 354.005 cv
166.91 354.063 li
166.622 354.365 166.326 354.662 166.037 354.945 cv
165.967 355.014 165.897 355.082 165.828 355.149 cv
165.779 355.197 li
165.589 355.381 165.405 355.558 165.233 355.724 cv
165.181 355.774 165.13 355.824 165.08 355.872 cv
165.045 355.905 165.011 355.938 164.978 355.971 cv
164.627 356.309 164.341 356.591 164.17 356.787 cv
163.731 357.291 163.13 357.407 162.608 357.407 cv
.313725 .14902 .0509804 rgb
f
163.667 355.248 mo
163.419 354.926 li
163.419 354.926 li
164.634 352.465 160.998 352.32 160.998 352.32 cv
160.998 351.093 li
160.998 351.093 162.543 351.365 163.667 352.386 cv
164.423 353.071 164.165 354.125 163.913 354.744 cv
163.789 355.048 163.667 355.248 163.667 355.248 cv
f
161.409 356.44 mo
160.998 356.032 li
160.998 354.826 li
160.998 354.826 161.025 354.823 161.07 354.823 cv
161.215 354.823 161.548 354.853 161.815 355.111 cv
161.889 355.182 161.98 355.227 162.077 355.255 cv
162.169 355.28 162.266 355.29 162.361 355.29 cv
162.65 355.29 162.916 355.201 162.916 355.201 cv
161.409 356.44 li
f
169.619 344.722 mo
169.619 344.722 li
169.448 343.768 li
169.448 343.768 li
169.448 343.768 169.363 342.821 168.984 341.663 cv
168.92 341.48 li
168.806 341.16 168.672 340.828 168.513 340.496 cv
167.161 337.803 164.69 337.271 162.952 337.271 cv
161.819 337.271 160.998 337.497 160.998 337.497 cv
160.998 330.631 li
161.316 330.634 161.649 330.636 161.997 330.636 cv
161.997 330.636 li
162.009 330.638 li
162.185 330.638 162.378 330.643 162.59 330.656 cv
169.99 330.98 170.356 337.364 170.356 338.62 cv
170.356 338.757 170.352 338.834 170.352 338.834 cv
170.34 338.828 li
170.34 338.828 li
170.344 338.966 170.347 339.104 170.347 339.242 cv
170.347 341.069 169.97 342.899 169.619 344.722 cv
169.619 344.722 li
f
160.998 361.489 mo
164.168 365.11 li
167.183 359.985 li
165.463 359.104 li
165.463 359.104 162.916 361.061 160.998 361.489 cv
cp
.729412 .870588 .811765 rgb
f
160.998 361.489 mo
157.825 365.11 li
154.809 359.985 li
156.528 359.104 li
156.528 359.104 159.08 361.061 160.998 361.489 cv
cp
.811765 .909804 .866667 rgb
f
162.566 363.28 mo
161.548 365.11 li
162.916 374.061 li
160.998 377.112 li
160.998 361.489 li
162.566 363.28 li
cp
.760784 .14902 .0509804 rgb
f
159.428 363.28 mo
160.445 365.11 li
159.08 374.061 li
160.998 377.112 li
160.998 361.489 li
159.428 363.28 li
cp
.921569 .294118 .192157 rgb
f
174.239 397.269 mo
174.239 395.253 174.239 386.532 174.239 383.976 cv
174.239 381.08 174.579 380.909 174.742 381.676 cv
174.904 382.442 176.794 390.024 176.198 391.983 cv
175.722 393.544 174.653 396.239 174.239 397.269 cv
cp
160.998 377.112 mo
160.998 397.691 li
174.069 397.691 li
174.239 397.691 li
181.735 397.691 li
181.735 397.691 181.651 398.288 183.354 393.09 cv
185.055 387.894 183.183 383.892 181.224 374.692 cv
179.265 365.492 177.477 365.321 176.54 364.81 cv
176.037 364.537 172.896 362.918 170.083 361.473 cv
169.715 361.496 li
160.998 377.112 li
cp
.372549 .690196 .811765 rgb
f
145.796 391.983 mo
145.198 390.024 147.09 382.442 147.25 381.676 cv
147.414 380.909 147.754 381.08 147.754 383.976 cv
147.754 386.532 147.754 395.253 147.754 397.269 cv
147.34 396.239 146.271 393.544 145.796 391.983 cv
cp
152.279 361.496 mo
151.91 361.473 li
149.098 362.918 145.956 364.537 145.454 364.81 cv
144.517 365.321 142.729 365.492 140.769 374.692 cv
138.809 383.892 136.938 387.894 138.639 393.09 cv
140.343 398.288 140.258 397.691 140.258 397.691 cv
147.754 397.691 li
147.924 397.691 li
160.998 397.691 li
160.998 377.112 li
152.279 361.496 li
cp
.643137 .847059 .901961 rgb
f
140.79 342.467 mo
136.446 342.467 132.923 345.091 132.923 348.332 cv
132.923 350.428 134.406 352.264 136.63 353.299 cv
134.453 357.055 li
139.547 354.112 li
139.953 354.161 140.366 354.193 140.79 354.193 cv
145.136 354.193 148.657 351.568 148.657 348.332 cv
148.657 345.091 145.136 342.467 140.79 342.467 cv
cp
.85098 .192157 .0862745 rgb
f
148.657 348.332 mo
148.657 351.568 145.136 354.193 140.79 354.193 cv
140.79 342.467 li
145.136 342.467 148.657 345.091 148.657 348.332 cv
cp
.678431 .0941176 0 rgb
f
145.09 323.979 mo
151.32 323.979 156.368 327.74 156.368 332.384 cv
156.368 335.392 154.242 338.023 151.055 339.508 cv
154.179 344.894 li
146.871 340.673 li
146.29 340.744 145.696 340.791 145.09 340.791 cv
138.859 340.791 133.809 337.026 133.809 332.384 cv
133.809 327.74 138.859 323.979 145.09 323.979 cv
cp
.556863 .764706 .843137 rgb
f
133.809 332.384 mo
133.809 337.026 138.859 340.791 145.09 340.791 cv
145.09 323.979 li
138.859 323.979 133.809 327.74 133.809 332.384 cv
cp
.643137 .847059 .901961 rgb
f
151.03 332.891 mo
150.982 332.246 150.845 331.681 150.631 331.194 cv
150.625 331.171 li
150.576 331.026 150.519 330.926 150.458 330.846 cv
150.447 330.825 li
150.43 330.81 li
150.32 330.679 150.208 330.622 150.135 330.605 cv
150.01 330.579 149.885 330.615 149.797 330.703 cv
149.692 330.805 149.652 330.959 149.686 331.125 cv
149.736 331.375 149.953 331.603 150.162 331.822 cv
150.368 332.037 150.56 332.24 150.574 332.429 cv
150.578 332.587 150.576 332.744 150.564 332.9 cv
150.531 333.526 150.338 334.259 149.905 334.436 cv
149.746 334.476 li
149.673 334.484 li
149.553 334.483 li
149.45 334.474 149.333 334.436 149.262 334.385 cv
149.085 334.268 148.856 333.972 148.793 333.694 cv
148.716 333.321 148.685 332.944 148.702 332.544 cv
148.724 332.313 li
148.836 331.801 148.842 331.475 148.742 331.321 cv
148.683 331.229 148.589 331.191 148.469 331.213 cv
148.204 331.264 148.218 331.707 148.231 332.097 cv
148.235 332.244 li
148.171 332.668 148.076 333.056 147.878 333.402 cv
147.738 333.636 147.391 333.847 147.195 333.908 cv
146.962 333.974 146.78 333.936 146.575 333.786 cv
146.166 333.465 145.912 332.833 145.717 332.258 cv
145.688 332.167 li
145.682 331.869 145.684 331.583 145.686 331.333 cv
145.695 330.431 145.7 329.836 145.327 329.7 cv
145.095 329.615 144.914 329.624 144.779 329.726 cv
144.641 329.831 144.564 330.027 144.544 330.325 cv
144.528 330.581 144.674 330.901 144.828 331.238 cv
145 331.616 145.191 332.04 145.187 332.444 cv
145.162 332.654 li
145.046 333.458 144.809 334.133 144.454 334.663 cv
143.753 335.767 142.607 336.295 141.307 336.116 cv
140.927 336.074 140.692 336.031 140.383 335.948 cv
140.083 335.873 139.809 335.763 139.566 335.62 cv
139.136 335.379 138.594 334.852 138.49 334.157 cv
138.391 333.465 138.45 332.708 138.655 332.023 cv
138.746 331.701 138.874 331.351 139.042 330.959 cv
139.083 330.871 li
139.226 330.56 139.373 330.238 139.588 329.98 cv
139.586 329.888 li
139.493 329.878 li
139.196 330.096 138.973 330.408 138.733 330.766 cv
138.527 331.081 138.339 331.426 138.162 331.823 cv
137.825 332.608 137.675 333.466 137.729 334.301 cv
137.756 335.305 138.494 336.21 139.214 336.661 cv
139.504 336.855 139.832 336.999 140.246 337.112 cv
140.378 337.151 140.522 337.188 140.674 337.221 cv
140.88 337.265 141.092 337.299 141.289 337.323 cv
142.069 337.398 142.808 337.272 143.493 336.951 cv
144.371 336.382 144.72 336.022 145.121 335.267 cv
145.313 334.912 145.431 334.404 145.523 333.995 cv
145.542 333.917 li
145.583 333.739 145.603 333.578 145.625 333.415 cv
145.757 333.728 145.935 334.023 146.201 334.281 cv
146.356 334.418 146.54 334.517 146.726 334.569 cv
146.831 334.594 146.92 334.609 147.038 334.611 cv
147.122 334.614 147.23 334.602 147.338 334.582 cv
147.736 334.497 148.027 334.209 148.201 333.985 cv
148.285 334.328 148.471 334.771 148.886 335.027 cv
149.004 335.095 149.125 335.146 149.256 335.174 cv
149.344 335.192 149.436 335.201 149.539 335.202 cv
149.671 335.198 li
149.842 335.175 li
149.951 335.15 150.054 335.115 150.16 335.062 cv
150.639 334.816 150.843 334.313 150.922 334.034 cv
151.04 333.612 151.042 333.204 151.03 332.891 cv
cp
.0627451 .207843 .309804 rgb
f
147.373 329.559 mo
147.722 329.635 148.066 329.412 148.141 329.062 cv
148.216 328.714 147.993 328.371 147.645 328.294 cv
147.295 328.22 146.951 328.443 146.876 328.791 cv
146.801 329.139 147.024 329.484 147.373 329.559 cv
cp
f
149.013 329.323 mo
149.322 329.389 149.625 329.193 149.692 328.884 cv
149.759 328.576 149.563 328.27 149.254 328.204 cv
148.945 328.137 148.641 328.333 148.574 328.643 cv
148.507 328.952 148.705 329.255 149.013 329.323 cv
cp
f
148.227 327.85 mo
148.575 327.925 148.92 327.703 148.995 327.355 cv
149.071 327.004 148.847 326.661 148.498 326.585 cv
148.15 326.511 147.805 326.733 147.73 327.082 cv
147.655 327.431 147.878 327.775 148.227 327.85 cv
cp
f
145.162 332.654 mo
145.187 332.444 li
145.189 332.261 145.147 332.075 145.09 331.89 cv
145.09 332.956 li
145.11 332.851 145.146 332.763 145.162 332.654 cv
cp
.137255 .34902 .509804 rgb
f
144.779 329.726 mo
144.641 329.831 144.564 330.027 144.544 330.325 cv
144.528 330.581 144.674 330.901 144.828 331.238 cv
144.923 331.445 145.019 331.667 145.09 331.89 cv
145.09 329.657 li
144.97 329.648 144.862 329.664 144.779 329.726 cv
cp
f
144.454 334.663 mo
143.753 335.767 142.607 336.295 141.307 336.116 cv
140.927 336.074 140.692 336.031 140.383 335.948 cv
140.083 335.873 139.809 335.763 139.566 335.62 cv
139.136 335.379 138.594 334.852 138.49 334.157 cv
138.391 333.465 138.45 332.708 138.655 332.023 cv
138.746 331.701 138.874 331.351 139.042 330.959 cv
139.083 330.871 li
139.226 330.56 139.373 330.238 139.588 329.98 cv
139.586 329.888 li
139.493 329.878 li
139.196 330.096 138.973 330.408 138.733 330.766 cv
138.527 331.081 138.339 331.426 138.162 331.823 cv
137.825 332.608 137.675 333.466 137.729 334.301 cv
137.756 335.305 138.494 336.21 139.214 336.661 cv
139.504 336.855 139.832 336.999 140.246 337.112 cv
140.378 337.151 140.522 337.188 140.674 337.221 cv
140.88 337.265 141.092 337.299 141.289 337.323 cv
142.069 337.398 142.808 337.272 143.493 336.951 cv
144.348 336.397 144.701 336.035 145.09 335.321 cv
145.09 332.956 li
144.961 333.621 144.76 334.205 144.454 334.663 cv
cp
f
138.383 348.189 mo
137.921 346.677 li
137.465 348.189 li
138.383 348.189 li
cp
138.123 350.423 mo
138.123 349.506 li
138.789 349.506 li
138.642 349.03 li
137.207 349.03 li
137.059 349.506 li
137.605 349.506 li
137.605 350.423 li
135.377 350.423 li
135.377 349.506 li
135.854 349.506 li
136.8 346.431 li
136.512 346.431 li
136.512 345.528 li
139.203 345.528 li
140.442 349.506 li
140.933 349.506 li
140.933 350.423 li
138.123 350.423 li
cp
1 .827451 .360784 rgb
f
143.296 349.15 mo
143.274 349.114 143.176 348.947 142.882 348.947 cv
142.602 348.947 142.477 349.1 142.477 349.318 cv
142.477 349.513 142.637 349.647 142.848 349.647 cv
143.057 349.647 143.232 349.52 143.296 349.415 cv
143.296 349.15 li
cp
141.292 347.215 mo
141.573 347.047 142.175 346.718 142.819 346.718 cv
143.66 346.718 144.717 347.035 144.717 348.162 cv
144.717 349.527 li
145.138 349.527 li
145.138 350.423 li
143.639 350.423 li
143.471 350.108 li
143.212 350.466 142.778 350.556 142.525 350.556 cv
141.86 350.556 141.145 350.2 141.145 349.386 cv
141.145 348.596 141.811 348.099 142.602 348.099 cv
143.016 348.099 143.26 348.301 143.296 348.342 cv
143.296 348.099 li
143.296 347.783 143.009 347.707 142.63 347.707 cv
142.217 347.707 141.853 347.881 141.587 348.028 cv
141.292 347.215 li
cp
1 .756863 .188235 rgb
f
363.215 348.545 mo
363.215 348.545 361.012 349.706 358.498 351.027 cv
358.778 351.046 li
367.877 367.342 li
367.877 351.037 li
363.215 348.545 li
.956863 .713726 .505882 rgb
f
372.537 348.545 mo
372.537 348.545 374.738 349.706 377.251 351.027 cv
376.975 351.046 li
367.877 367.342 li
367.877 351.037 li
372.537 348.545 li
f
367.877 367.342 mo
367.877 351.039 li
367.942 351.043 368.008 351.045 368.073 351.045 cv
370.387 351.045 372.529 348.555 372.537 348.545 cv
372.537 348.545 372.537 348.545 372.537 348.545 cv
372.537 348.545 li
372.537 348.545 li
372.537 348.545 li
372.537 348.545 374.564 349.614 376.948 350.867 cv
376.894 350.871 li
376.022 352.752 li
367.877 367.342 li
.870588 .6 .392157 rgb
f
363.595 342.939 mo
367.841 342.356 li
372.087 342.939 li
372.087 342.939 371.774 346.769 372.537 348.545 cv
372.537 348.545 370.246 351.214 367.841 351.037 cv
365.438 351.214 363.143 348.545 363.143 348.545 cv
363.905 346.769 363.595 342.939 363.595 342.939 cv
.956863 .713726 .505882 rgb
f
372.355 348.017 mo
372.342 347.967 372.329 347.917 372.316 347.865 cv
372.316 347.865 372.315 347.864 372.315 347.863 cv
372.315 347.861 372.314 347.859 372.314 347.857 cv
372.2 347.392 372.128 346.865 372.084 346.332 cv
372.06 346.045 372.046 345.756 372.037 345.474 cv
372.066 346.337 372.153 347.271 372.359 348.016 cv
372.355 348.017 li
363.646 345.43 mo
363.646 345.429 363.646 345.429 363.645 345.428 cv
363.648 345.355 363.65 345.283 363.652 345.212 cv
363.652 345.212 363.652 345.212 363.652 345.212 cv
363.651 345.284 363.649 345.357 363.646 345.43 cv
.960784 .882353 .815686 rgb
f
367.877 348.069 mo
365.243 347.57 364.074 346.132 363.646 345.43 cv
363.649 345.357 363.651 345.284 363.652 345.212 cv
364.049 345.595 364.375 345.913 364.563 346.13 cv
365.022 346.655 365.648 346.777 366.191 346.777 cv
366.631 346.777 367.016 346.697 367.214 346.688 cv
367.663 346.666 367.877 346.656 367.877 346.656 cv
367.877 346.656 li
367.877 348.069 li
372.316 347.865 mo
372.316 347.865 372.315 347.864 372.315 347.863 cv
372.315 347.864 372.316 347.865 372.316 347.865 cv
372.314 347.857 mo
372.2 347.392 372.127 346.865 372.084 346.332 cv
372.128 346.865 372.2 347.392 372.314 347.857 cv
.917647 .631373 .411765 rgb
f
358.699 333.54 mo
358.881 333.54 li
358.804 332.915 358.726 332.304 358.648 331.721 cv
358.256 328.71 357.372 319.913 367.877 319.913 cv
378.379 319.913 377.496 328.71 377.102 331.721 cv
377.028 332.304 376.95 332.915 376.874 333.54 cv
377.055 333.54 li
378.653 332.359 378.787 335.446 378.12 336.499 cv
377.569 337.376 377.555 337.467 377.223 338.431 cv
376.977 339.139 376.568 339.236 376.229 339.157 cv
376.184 339.581 376.145 339.947 376.121 340.238 cv
375.973 341.859 372.074 345.112 371.19 346.13 cv
370.358 347.081 368.98 346.708 368.536 346.688 cv
368.089 346.666 367.877 346.656 367.877 346.656 cv
367.877 346.656 367.663 346.666 367.214 346.688 cv
366.772 346.708 365.393 347.081 364.563 346.13 cv
363.678 345.112 359.781 341.859 359.631 340.238 cv
359.604 339.947 359.568 339.581 359.522 339.157 cv
359.184 339.236 358.777 339.139 358.527 338.431 cv
358.195 337.467 358.185 337.376 357.633 336.499 cv
356.963 335.446 357.1 332.359 358.699 333.54 cv
.956863 .713726 .505882 rgb
f
360.389 317.655 mo
360.389 317.655 359.963 318.838 368.921 318.838 cv
368.932 318.84 li
369.116 318.84 369.319 318.846 369.538 318.856 cv
378.104 319.235 377.642 327.393 377.642 327.393 cv
377.628 327.387 li
377.695 329.437 377.269 331.493 376.874 333.54 cv
376.695 332.542 li
376.695 332.542 376.605 331.553 376.21 330.345 cv
376.144 330.155 li
376.025 329.821 375.889 329.473 375.72 329.127 cv
373.39 324.488 367.877 325.999 367.877 325.999 cv
367.877 325.999 362.358 324.486 360.03 329.135 cv
359.868 329.471 359.729 329.809 359.616 330.137 cv
359.54 330.351 li
359.146 331.555 359.056 332.542 359.056 332.542 cv
358.881 333.54 li
358.631 332.257 358.371 330.974 358.227 329.686 cv
358.225 329.664 li
357.254 322.844 360.389 317.655 360.389 317.655 cv
.345098 .176471 .0666667 rgb
f
372.537 348.545 mo
372.468 348.385 372.408 348.207 372.355 348.017 cv
372.355 348.017 li
372.408 348.207 372.468 348.384 372.537 348.545 cv
372.037 345.474 mo
372.035 345.409 372.033 345.344 372.031 345.279 cv
372.032 345.279 372.032 345.279 372.032 345.278 cv
372.034 345.343 372.035 345.409 372.037 345.474 cv
373.93 343.412 mo
373.961 343.379 373.993 343.346 374.024 343.313 cv
374.004 343.335 li
373.979 343.361 373.955 343.386 373.93 343.412 cv
375.095 342.111 mo
375.107 342.096 375.119 342.082 375.13 342.067 cv
375.12 342.08 375.109 342.094 375.099 342.107 cv
375.098 342.11 li
375.095 342.111 li
376.115 340.291 mo
376.117 340.273 376.12 340.255 376.121 340.238 cv
376.145 339.947 376.184 339.581 376.229 339.157 cv
376.292 339.171 376.356 339.18 376.421 339.18 cv
376.713 339.18 377.022 339.009 377.223 338.431 cv
377.555 337.467 377.569 337.376 378.12 336.499 cv
378.362 336.117 378.499 335.468 378.498 334.852 cv
378.499 335.468 378.362 336.117 378.12 336.499 cv
377.569 337.376 377.555 337.467 377.223 338.431 cv
377.022 339.009 376.713 339.18 376.421 339.18 cv
376.356 339.18 376.292 339.171 376.229 339.157 cv
376.184 339.581 376.145 339.947 376.121 340.238 cv
376.12 340.255 376.118 340.273 376.115 340.291 cv
.909804 .839216 .772549 rgb
f
368.069 351.042 mo
368.005 351.042 367.941 351.041 367.877 351.037 cv
367.877 348.069 li
368.462 348.18 369.119 348.245 369.856 348.245 cv
370.55 348.245 371.314 348.188 372.156 348.058 cv
372.355 348.017 li
372.408 348.207 372.468 348.385 372.537 348.545 cv
372.537 348.545 li
372.537 348.545 372.537 348.545 372.537 348.545 cv
372.529 348.555 370.381 351.042 368.069 351.042 cv
.870588 .6 .392157 rgb
f
372.355 348.017 mo
372.342 347.967 372.328 347.917 372.316 347.865 cv
372.329 347.917 372.342 347.967 372.355 348.017 cv
372.355 348.017 li
372.315 347.863 mo
372.315 347.861 372.314 347.859 372.314 347.857 cv
372.314 347.859 372.315 347.861 372.315 347.863 cv
372.084 346.332 mo
372.055 345.978 372.038 345.622 372.03 345.281 cv
372.03 345.28 372.031 345.28 372.031 345.279 cv
372.033 345.344 372.035 345.409 372.037 345.474 cv
372.046 345.756 372.06 346.045 372.084 346.332 cv
.87451 .741176 .631373 rgb
f
369.856 348.245 mo
369.119 348.245 368.462 348.18 367.877 348.069 cv
367.877 346.656 li
367.877 346.656 368.089 346.666 368.536 346.688 cv
368.735 346.697 369.12 346.777 369.56 346.777 cv
370.104 346.777 370.731 346.655 371.19 346.13 cv
371.367 345.926 371.665 345.633 372.03 345.281 cv
372.038 345.622 372.055 345.978 372.084 346.332 cv
372.127 346.865 372.2 347.392 372.314 347.857 cv
372.314 347.859 372.315 347.861 372.315 347.863 cv
372.315 347.864 372.316 347.865 372.316 347.865 cv
372.328 347.917 372.342 347.967 372.355 348.017 cv
372.156 348.058 li
371.314 348.188 370.55 348.245 369.856 348.245 cv
.835294 .529412 .317647 rgb
f
369.56 346.777 mo
369.12 346.777 368.735 346.697 368.536 346.688 cv
368.089 346.666 367.877 346.656 367.877 346.656 cv
367.877 325.999 li
367.877 325.999 368.734 325.764 369.916 325.764 cv
371.73 325.764 374.309 326.318 375.72 329.127 cv
375.889 329.473 376.025 329.821 376.144 330.155 cv
376.21 330.345 li
376.605 331.553 376.695 332.542 376.695 332.542 cv
376.874 333.54 li
376.874 333.54 li
376.874 333.54 li
377.055 333.54 li
377.305 333.356 377.519 333.275 377.7 333.275 cv
378.257 333.275 378.498 334.035 378.498 334.852 cv
378.499 335.468 378.362 336.117 378.12 336.499 cv
377.569 337.376 377.555 337.467 377.223 338.431 cv
377.022 339.009 376.713 339.18 376.421 339.18 cv
376.356 339.18 376.292 339.171 376.229 339.157 cv
376.184 339.581 376.145 339.947 376.121 340.238 cv
376.12 340.255 376.117 340.273 376.115 340.291 cv
376.097 340.414 376.054 340.549 375.996 340.691 cv
375.994 340.697 li
375.992 340.701 li
375.827 341.109 375.521 341.574 375.13 342.067 cv
375.119 342.082 375.107 342.096 375.095 342.111 cv
375.094 342.112 li
374.952 342.288 374.795 342.467 374.638 342.648 cv
374.507 342.792 li
374.377 342.935 374.242 343.083 374.105 343.226 cv
374.024 343.313 li
373.993 343.346 373.961 343.379 373.93 343.412 cv
373.778 343.568 373.625 343.723 373.473 343.875 cv
373.446 343.902 li
373.269 344.081 373.09 344.252 372.917 344.422 cv
372.865 344.473 li
372.567 344.762 372.285 345.029 372.032 345.276 cv
372.032 345.277 372.032 345.277 372.032 345.278 cv
372.032 345.279 372.032 345.279 372.031 345.279 cv
372.031 345.28 372.03 345.28 372.03 345.281 cv
371.665 345.633 371.367 345.926 371.19 346.13 cv
370.731 346.655 370.104 346.777 369.56 346.777 cv
.870588 .6 .392157 rgb
f
368.921 318.838 mo
368.558 318.838 368.21 318.836 367.877 318.833 cv
367.877 318.83 li
368.216 318.834 368.549 318.838 368.921 318.838 cv
.909804 .839216 .772549 rgb
f
376.874 333.54 mo
376.695 332.542 li
376.695 332.542 376.605 331.553 376.21 330.345 cv
376.144 330.155 li
376.025 329.821 375.889 329.473 375.72 329.127 cv
374.309 326.318 371.73 325.764 369.916 325.764 cv
368.734 325.764 367.877 325.999 367.877 325.999 cv
367.877 318.833 li
368.21 318.836 368.558 318.838 368.921 318.838 cv
368.921 318.838 li
368.932 318.84 li
369.116 318.84 369.319 318.846 369.538 318.856 cv
377.267 319.198 377.646 325.874 377.646 327.174 cv
377.646 327.315 377.642 327.393 377.642 327.393 cv
377.628 327.387 li
377.628 327.387 li
377.633 327.531 377.635 327.676 377.635 327.82 cv
377.635 329.726 377.241 331.637 376.874 333.54 cv
376.874 333.54 li
.313725 .14902 .0509804 rgb
f
367.877 371.118 mo
367.877 351.037 li
361.856 349.242 li
358.789 350.871 li
367.877 371.118 li
cp
.882353 .929412 .909804 rgb
f
363.143 348.545 mo
367.877 351.037 li
364.674 354.829 li
360.616 349.914 li
363.143 348.545 li
cp
.137255 .34902 .509804 rgb
f
367.877 372.231 mo
367.877 351.037 li
373.896 349.242 li
376.963 350.871 li
367.877 372.231 li
cp
.811765 .909804 .866667 rgb
f
372.609 348.545 mo
367.877 351.037 li
371.078 354.829 li
375.137 349.914 li
372.609 348.545 li
cp
.0627451 .207843 .309804 rgb
f
365.909 353.364 mo
367.169 355.719 li
365.169 364.649 li
367.841 370.787 li
367.877 351.037 li
365.909 353.364 li
cp
.85098 .192157 .0862745 rgb
f
369.844 353.364 mo
368.583 355.719 li
370.583 364.649 li
367.841 370.787 li
367.877 351.037 li
369.844 353.364 li
cp
.678431 .0941176 0 rgb
f
344.865 373.024 mo
345.404 370.689 346.115 367.978 346.84 364.573 cv
348.875 355.021 350.732 354.842 351.704 354.311 cv
352.225 354.027 355.488 352.346 358.406 350.848 cv
358.789 350.871 li
367.841 370.42 li
367.841 392.896 li
354.186 392.896 li
354.186 387.125 li
354.186 386.948 354.15 386.793 354.091 386.66 cv
354.091 374.21 li
354.091 371.201 353.738 371.027 353.569 371.82 cv
353.491 372.197 347.305 374.169 344.865 373.024 cv
.643137 .847059 .901961 rgb
f
390.817 373.024 mo
390.279 370.689 389.568 367.978 388.842 364.573 cv
386.808 355.021 384.95 354.842 383.98 354.311 cv
383.459 354.027 380.196 352.346 377.278 350.848 cv
376.894 350.871 li
367.841 370.42 li
367.841 392.896 li
381.498 392.896 li
381.498 387.125 li
381.498 386.948 381.532 386.793 381.592 386.66 cv
381.592 374.21 li
381.592 371.201 381.944 371.027 382.114 371.82 cv
382.193 372.197 388.378 374.169 390.817 373.024 cv
.372549 .690196 .811765 rgb
f
368.905 394.925 mo
368.549 394.81 369.032 393.74 369.197 393.141 cv
369.425 392.32 369.811 392.368 370.985 392.001 cv
371.946 391.703 373.278 391.582 373.278 391.582 cv
374.043 391.648 375.081 391.89 375.878 391.763 cv
376.464 391.672 377.274 391.461 377.274 391.461 cv
378.864 395.705 li
378.864 395.705 377.713 396.415 377.429 397.245 cv
376.668 399.468 376.405 400.023 375.963 400.593 cv
375.11 401.694 374.567 402.455 373.885 402.906 cv
373.202 403.357 372.255 404.342 372.095 403.942 cv
371.933 403.54 372.353 402.76 373.161 402.264 cv
373.161 402.264 374.185 400.838 374.666 400.456 cv
374.666 400.456 372.526 401.997 371.994 402.352 cv
371.462 402.707 369.387 402.568 368.792 402.547 cv
368.198 402.532 368.52 401.722 369.242 401.647 cv
369.964 401.571 371.201 401.56 371.201 401.56 cv
371.201 401.56 372.077 400.499 373.18 400.085 cv
373.18 400.085 370.204 400.958 369.861 400.826 cv
369.52 400.69 367.575 399.515 367.711 399.098 cv
367.849 398.681 368.966 398.541 370.245 399.672 cv
370.245 399.672 371.983 398.687 372.981 398.493 cv
372.981 398.493 370.767 398.748 370.426 398.638 cv
370.081 398.53 368.936 397.407 368.7 397 cv
368.467 396.597 368.584 395.661 368.678 395.112 cv
368.769 394.574 369.444 395.089 369.529 396.356 cv
369.529 396.356 370.157 396.66 370.961 397.337 cv
370.961 397.337 372.427 396.297 373.057 396.067 cv
373.057 396.067 373.095 394.404 372.477 393.566 cv
372.477 393.566 371.376 393.711 370.319 393.625 cv
370.319 393.625 369.594 395.144 368.905 394.925 cv
.956863 .713726 .505882 rgb
f
372.231 404.036 mo
372.168 404.036 372.121 404.007 372.095 403.942 cv
372.072 403.885 372.061 403.821 372.06 403.752 cv
372.059 403.326 372.467 402.69 373.161 402.264 cv
373.161 402.264 374.185 400.838 374.666 400.456 cv
374.666 400.456 li
374.666 400.456 li
374.666 400.456 372.526 401.997 371.994 402.352 cv
371.707 402.544 370.971 402.591 370.26 402.591 cv
369.653 402.591 369.066 402.557 368.792 402.547 cv
368.579 402.542 368.484 402.434 368.483 402.294 cv
368.481 402.045 368.78 401.695 369.242 401.647 cv
369.964 401.571 371.201 401.56 371.201 401.56 cv
371.201 401.56 372.077 400.499 373.18 400.085 cv
373.18 400.085 li
373.18 400.085 li
373.18 400.085 370.608 400.839 369.971 400.839 cv
369.922 400.839 369.885 400.835 369.861 400.826 cv
369.531 400.694 367.702 399.592 367.704 399.142 cv
367.704 399.127 367.706 399.112 367.711 399.098 cv
367.77 398.92 368.006 398.793 368.358 398.793 cv
368.831 398.793 369.511 399.024 370.245 399.672 cv
370.245 399.672 371.983 398.687 372.981 398.493 cv
372.981 398.493 li
372.981 398.493 li
372.981 398.493 371.48 398.665 370.759 398.665 cv
370.605 398.665 370.486 398.658 370.426 398.638 cv
370.081 398.53 368.936 397.407 368.7 397 cv
368.599 396.825 368.564 396.55 368.564 396.25 cv
368.564 395.858 368.625 395.423 368.678 395.112 cv
368.702 394.969 368.767 394.9 368.852 394.9 cv
368.854 394.9 368.855 394.9 368.857 394.9 cv
368.857 394.9 li
368.857 394.9 li
368.801 394.857 368.777 394.776 368.777 394.67 cv
368.777 394.29 369.075 393.585 369.197 393.141 cv
369.425 392.32 369.811 392.368 370.985 392.001 cv
371.946 391.703 373.278 391.582 373.278 391.582 cv
373.786 391.626 374.414 391.747 375.013 391.787 cv
375.266 392.16 li
375.266 392.16 li
378.088 396.314 li
377.815 396.575 377.547 396.899 377.429 397.245 cv
376.668 399.468 376.405 400.023 375.963 400.593 cv
375.11 401.694 374.567 402.455 373.885 402.906 cv
373.313 403.283 372.556 404.035 372.231 404.036 cv
368.976 394.942 mo
369.201 395.082 369.477 395.577 369.529 396.356 cv
369.529 396.356 370.157 396.66 370.961 397.337 cv
370.961 397.337 372.427 396.297 373.057 396.067 cv
373.057 396.067 373.057 396.047 373.057 396.01 cv
373.057 395.713 373.027 394.312 372.477 393.566 cv
372.477 393.566 371.824 393.652 371.041 393.652 cv
370.807 393.652 370.562 393.645 370.319 393.625 cv
370.319 393.625 369.688 394.947 369.044 394.947 cv
369.021 394.947 368.999 394.945 368.976 394.942 cv
368.976 394.942 li
368.976 394.942 li
.870588 .6 .392157 rgb
f
381.493 371.231 mo
381.493 371.231 384.143 379.473 384.596 380.701 cv
385.096 382.052 376.303 388.447 373.987 390.276 cv
378.991 397.643 li
378.991 397.643 385.526 393.287 389.278 390.134 cv
394.399 385.829 395.332 382.979 394.033 378.943 cv
387.452 358.515 385.775 355.719 385.775 355.719 cv
381.493 371.231 li
.372549 .690196 .811765 rgb
f
362.586 392.896 mo
354.186 392.896 li
354.15 390.48 li
354.162 390.484 354.174 390.488 354.186 390.491 cv
354.186 392.896 li
362.586 392.896 li
362.586 392.896 li
.811765 .909804 .866667 rgb
f
362.586 392.896 mo
354.186 392.896 li
354.186 390.491 li
357.725 391.533 360.63 392.16 360.63 392.16 cv
360.849 391.511 li
360.91 391.541 360.969 391.571 361.025 391.601 cv
361.575 391.886 362.108 392.43 362.586 392.896 cv
.521569 .772549 .780392 rgb
f
368.51 393.208 mo
368.729 393.511 367.704 394.083 367.217 394.466 cv
366.542 394.993 366.261 394.721 365.101 394.319 cv
364.148 393.987 363.007 393.29 363.007 393.29 cv
362.431 392.785 361.742 391.973 361.025 391.601 cv
360.499 391.324 359.725 391.01 359.725 391.01 cv
360.969 386.656 li
360.969 386.656 362.318 386.769 363.038 386.272 cv
364.974 384.938 365.517 384.647 366.209 384.453 cv
367.55 384.076 368.44 383.785 369.257 383.83 cv
369.499 383.843 369.788 383.832 370.072 383.821 cv
370.744 383.795 371.388 383.769 371.311 384.062 cv
371.201 384.481 370.399 384.857 369.455 384.774 cv
369.455 384.774 367.783 385.312 367.17 385.332 cv
367.17 385.332 369.807 385.367 370.445 385.399 cv
371.084 385.43 372.671 386.775 373.137 387.146 cv
373.603 387.512 372.864 387.971 372.239 387.601 cv
371.613 387.235 370.61 386.508 370.61 386.508 cv
370.61 386.508 369.275 386.84 368.146 386.516 cv
368.146 386.516 371.057 387.583 371.251 387.896 cv
371.447 388.207 372.311 390.308 371.955 390.563 cv
371.596 390.816 370.613 390.259 370.259 388.592 cv
370.259 388.592 368.272 388.352 367.356 387.913 cv
367.356 387.913 369.286 389.028 369.498 389.319 cv
369.707 389.61 369.963 391.197 369.909 391.66 cv
369.859 392.122 369.204 392.809 368.807 393.19 cv
368.413 393.57 368.176 392.752 368.86 391.684 cv
368.86 391.684 368.536 391.067 368.293 390.045 cv
368.293 390.045 366.495 390.006 365.854 389.819 cv
365.854 389.819 364.833 391.131 364.831 392.173 cv
364.831 392.173 365.802 392.712 366.6 393.41 cv
366.6 393.41 368.088 392.623 368.51 393.208 cv
.956863 .713726 .505882 rgb
f
354.19 371.231 mo
354.19 371.231 351.049 379.038 350.596 380.268 cv
350.596 380.268 356.253 382.708 363.143 384.734 cv
360.63 392.16 li
360.63 392.16 353.396 390.599 347.852 388.309 cv
343.547 386.531 340.992 385.68 341.888 381.535 cv
346.602 359.693 349.906 355.719 349.906 355.719 cv
354.19 371.231 li
.643137 .847059 .901961 rgb
f
362.493 386.652 mo
357.631 385.253 348.966 381.518 348.966 381.518 cv
348.966 380.268 354.19 371.231 354.19 371.231 cv
354.19 371.231 354.102 371.451 353.953 371.823 cv
353.212 373.666 350.973 379.244 350.596 380.268 cv
350.596 380.268 li
350.596 380.268 li
350.596 380.268 356.253 382.708 363.143 384.734 cv
363.143 384.734 li
362.493 386.652 li
.521569 .772549 .780392 rgb
f
375.014 391.787 mo
375.013 391.787 375.013 391.787 375.013 391.787 cv
373.987 390.276 li
373.987 390.276 li
375.014 391.787 li
.301961 .627451 .701961 rgb
f
375.266 392.16 mo
375.013 391.787 li
375.013 391.787 375.013 391.787 375.014 391.787 cv
375.266 392.159 li
375.266 392.16 375.266 392.16 375.266 392.16 cv
.705882 .545098 .341176 rgb
f
375.266 392.159 mo
375.014 391.787 li
373.987 390.276 li
376.239 388.497 384.62 382.399 384.616 380.823 cv
384.616 380.778 384.609 380.738 384.596 380.701 cv
384.596 380.701 li
384.261 379.792 383.004 374.996 382.112 372.616 cv
382.923 374.55 384.867 379.162 385.628 380.685 cv
386.602 382.629 383.357 385.98 375.266 392.16 cv
382.112 372.616 mo
381.888 372.082 381.751 371.751 381.749 371.748 cv
381.86 371.972 381.982 372.269 382.112 372.616 cv
.301961 .627451 .701961 rgb
f
378.154 333.593 mo
377.006 333.593 li
377.006 330.917 li
377.006 325.73 372.896 321.511 367.842 321.511 cv
362.789 321.511 358.678 325.73 358.678 330.917 cv
358.678 333.593 li
357.531 333.593 li
357.531 330.917 li
357.531 325.098 362.156 320.362 367.842 320.362 cv
373.529 320.362 378.154 325.098 378.154 330.917 cv
378.154 333.593 li
cp
1 .827451 .360784 rgb
f
367.877 320.364 mo
367.877 321.513 li
372.914 321.531 377.006 325.742 377.006 330.917 cv
377.006 333.593 li
378.154 333.593 li
378.154 330.917 li
378.154 325.111 373.547 320.384 367.877 320.364 cv
cp
1 .756863 .188235 rgb
f
377.731 339.823 mo
376.231 339.734 li
376.695 331.865 li
378.196 331.954 li
377.731 339.823 li
cp
.0627451 .207843 .309804 rgb
f
378.077 331.948 mo
377.612 339.817 li
378.686 339.879 379.659 338.171 379.787 335.997 cv
379.917 333.822 379.151 332.01 378.077 331.948 cv
cp
.678431 .0941176 0 rgb
f
358.021 339.823 mo
359.521 339.734 li
359.057 331.865 li
357.556 331.954 li
358.021 339.823 li
cp
.137255 .34902 .509804 rgb
f
357.675 331.948 mo
358.14 339.817 li
357.066 339.879 356.093 338.171 355.965 335.997 cv
355.835 333.822 356.601 332.01 357.675 331.948 cv
cp
.85098 .192157 .0862745 rgb
f
253.223 377.541 mo
300.815 377.541 li
300.815 341.237 li
253.223 341.237 li
253.223 377.541 li
1 .827451 .360784 rgb
f
277.02 377.541 mo
300.815 377.541 li
300.815 341.237 li
277.02 341.237 li
277.02 377.541 li
1 .756863 .188235 rgb
f
297.965 374.262 mo
297.965 344.516 li
256.073 344.516 li
256.073 374.262 li
297.965 374.262 li
1 1 1 rgb
f
297.965 374.262 mo
277.02 374.262 li
277.02 344.335 li
297.965 344.335 li
297.965 374.262 li
.901961 .905882 .909804 rgb
f
267.202 359.832 mo
266.049 356.06 li
264.916 359.832 li
267.202 359.832 li
cp
266.557 365.404 mo
266.557 363.116 li
268.216 363.116 li
267.848 361.929 li
264.269 361.929 li
263.902 363.116 li
265.264 363.116 li
265.264 365.404 li
259.71 365.404 li
259.71 363.116 li
260.897 363.116 li
263.255 355.449 li
262.538 355.449 li
262.538 353.195 li
269.246 353.195 li
272.338 363.116 li
273.56 363.116 li
273.56 365.404 li
266.557 365.404 li
cp
.85098 .192157 .0862745 rgb
f
279.709 360.077 mo
279.709 362.399 li
274.643 362.399 li
274.643 360.077 li
279.709 360.077 li
cp
f
281.105 353.195 mo
292.562 353.195 li
292.599 355.517 li
286.206 363.097 li
289.454 363.097 li
289.454 360.863 li
292.546 360.863 li
292.546 365.404 li
281 365.404 li
281 363.132 li
287.357 355.517 li
284.073 355.517 li
284.073 357.788 li
281.105 357.788 li
281.105 353.195 li
cp
.678431 .0941176 0 rgb
f
237.525 354.223 mo
237.525 354.223 236.425 353.233 236.314 352.759 cv
237.117 352.435 li
237.525 354.223 li
cp
.309804 .160784 .0588235 rgb
f
252.187 354.223 mo
252.187 354.223 253.285 353.233 253.396 352.759 cv
252.594 352.435 li
252.187 354.223 li
f
243.35 329.856 mo
242.568 332.955 244.801 334.34 247.794 335.095 cv
250.79 335.85 253.415 335.686 254.196 332.587 cv
254.963 329.537 252.822 327.78 249.825 327.026 cv
246.833 326.271 244.14 326.701 243.35 329.856 cv
.231373 .117647 .0431373 rgb
f
229.296 369.56 mo
229.764 366.463 232.392 365.265 233.947 364.797 cv
235.505 364.327 238.084 364.153 239.717 363.213 cv
241.35 362.273 241.092 357.569 241.092 357.569 cv
244.617 357.569 li
248.142 357.569 li
248.142 357.569 247.883 362.273 249.518 363.213 cv
251.146 364.153 253.73 364.327 255.284 364.797 cv
256.841 365.265 259.469 366.463 259.936 369.56 cv
260.309 372.04 260.322 375.358 260.322 375.358 cv
244.617 375.358 li
228.908 375.358 li
228.908 375.358 228.925 372.04 229.296 369.56 cv
.956863 .713726 .505882 rgb
f
248.437 361.397 mo
248.437 361.401 li
246.543 361.042 242.873 359.862 241.09 358.514 cv
241.092 358.374 241.092 358.245 241.092 358.13 cv
241.092 358.122 li
241.087 357.977 li
241.087 357.948 li
241.087 357.841 li
241.085 357.817 li
241.081 357.73 li
241.081 357.711 li
241.081 357.648 li
241.081 357.633 li
241.079 357.596 li
241.076 357.569 li
244.603 357.569 li
248.128 357.569 li
248.128 357.569 248.013 359.715 248.437 361.397 cv
.929412 .701961 .501961 rgb
f
235.451 347.372 mo
235.451 347.372 234.055 341.418 235.677 338.109 cv
237.426 334.54 240.048 332.501 244.855 332.501 cv
249.663 332.501 252.288 334.54 254.034 338.109 cv
255.652 341.418 254.261 347.372 254.261 347.372 cv
256.446 346.936 256.037 349.327 255.354 350.407 cv
254.787 351.303 254.772 351.401 254.433 352.386 cv
253.943 353.806 252.813 352.823 252.813 352.823 cv
252.158 354.644 251.693 355.075 249.081 357.483 cv
246.803 359.583 246.005 359.56 244.855 359.56 cv
243.705 359.56 242.927 359.583 240.633 357.483 cv
238.009 355.085 237.554 354.644 236.897 352.823 cv
236.897 352.823 235.769 353.806 235.278 352.386 cv
234.935 351.401 234.924 351.303 234.357 350.407 cv
233.675 349.327 233.265 346.936 235.451 347.372 cv
.956863 .713726 .505882 rgb
f
gsave
250.411 363.627 mo
250.41 363.627 250.41 363.627 250.409 363.627 cv
250.409 363.627 250.41 363.627 250.411 363.627 cv
250.394 363.621 mo
250.39 363.62 250.386 363.618 250.382 363.616 cv
250.386 363.618 250.39 363.62 250.394 363.621 cv
250.379 363.615 mo
250.072 363.498 249.782 363.366 249.518 363.213 cv
249.782 363.366 250.072 363.498 250.379 363.615 cv
249.518 363.213 mo
249.515 363.212 249.513 363.211 249.511 363.21 cv
249.513 363.211 249.515 363.212 249.518 363.213 cv
249.51 363.209 mo
249.505 363.206 249.501 363.204 249.497 363.201 cv
249.501 363.204 249.505 363.206 249.51 363.209 cv
249.496 363.2 mo
249.491 363.198 249.487 363.195 249.482 363.192 cv
249.487 363.195 249.491 363.198 249.496 363.2 cv
249.482 363.192 mo
249.477 363.189 249.473 363.186 249.468 363.183 cv
249.473 363.186 249.477 363.189 249.482 363.192 cv
249.467 363.183 mo
249.465 363.181 249.463 363.18 249.461 363.179 cv
249.463 363.18 249.465 363.181 249.467 363.183 cv
249.46 363.178 mo
249.459 363.177 249.457 363.176 249.455 363.175 cv
249.457 363.176 249.458 363.177 249.46 363.178 cv
249.453 363.174 mo
249.451 363.172 249.449 363.171 249.447 363.17 cv
249.449 363.171 249.451 363.172 249.453 363.174 cv
249.446 363.169 mo
249.444 363.168 249.442 363.167 249.441 363.166 cv
249.443 363.167 249.444 363.168 249.446 363.169 cv
249.439 363.164 mo
249.437 363.163 249.436 363.162 249.434 363.161 cv
249.435 363.162 249.437 363.163 249.439 363.164 cv
249.431 363.159 mo
249.43 363.158 249.429 363.157 249.427 363.156 cv
249.429 363.157 249.43 363.158 249.431 363.159 cv
249.425 363.154 mo
249.424 363.154 249.422 363.153 249.421 363.152 cv
249.422 363.153 249.424 363.154 249.425 363.154 cv
249.416 363.149 mo
249.416 363.148 249.415 363.148 249.414 363.147 cv
249.415 363.148 249.416 363.148 249.416 363.149 cv
249.411 363.145 mo
249.41 363.144 249.41 363.144 249.409 363.144 cv
249.41 363.144 249.41 363.144 249.411 363.145 cv
249.402 363.138 mo
249.401 363.138 249.401 363.138 249.401 363.138 cv
249.401 363.138 249.401 363.138 249.402 363.138 cv
249.015 357.543 mo
249.015 357.543 249.015 357.543 249.015 357.543 cv
249.015 357.543 249.015 357.543 249.015 357.543 cv
249.029 357.53 mo
249.047 357.515 249.064 357.499 249.081 357.483 cv
250.881 355.823 251.662 355.103 252.187 354.219 cv
252.187 354.219 li
251.662 355.103 250.881 355.823 249.081 357.483 cv
249.064 357.499 249.047 357.515 249.029 357.53 cv
clp
249.015 354.219 mo
252.187 354.219 li
252.187 363.627 li
249.015 363.627 li
cp
.909804 .839216 .772549 rgb
f
grestore
255.135 364.756 mo
244.674 364.756 li
244.674 360.31 li
246.067 360.827 247.479 361.219 248.437 361.401 cv
248.437 361.397 li
248.17 360.339 248.117 359.096 248.114 358.321 cv
248.118 358.317 248.122 358.314 248.126 358.311 cv
248.128 359.628 248.278 362.323 249.401 363.138 cv
249.401 363.138 249.401 363.138 249.402 363.138 cv
249.404 363.14 249.407 363.142 249.409 363.144 cv
249.41 363.144 249.41 363.144 249.411 363.145 cv
249.412 363.145 249.413 363.146 249.414 363.147 cv
249.415 363.148 249.416 363.148 249.416 363.149 cv
249.418 363.15 249.42 363.151 249.421 363.152 cv
249.422 363.153 249.424 363.154 249.425 363.154 cv
249.426 363.155 249.426 363.156 249.427 363.156 cv
249.429 363.157 249.43 363.158 249.431 363.159 cv
249.432 363.16 249.433 363.16 249.434 363.161 cv
249.436 363.162 249.437 363.163 249.439 363.164 cv
249.44 363.165 249.44 363.165 249.441 363.166 cv
249.442 363.167 249.444 363.168 249.446 363.169 cv
249.446 363.169 249.447 363.169 249.447 363.17 cv
249.449 363.171 249.451 363.172 249.453 363.174 cv
249.453 363.174 249.454 363.174 249.455 363.175 cv
249.457 363.176 249.459 363.177 249.46 363.178 cv
249.461 363.178 249.461 363.179 249.461 363.179 cv
249.463 363.18 249.465 363.181 249.467 363.183 cv
249.468 363.183 249.468 363.183 249.468 363.183 cv
249.473 363.186 249.477 363.189 249.482 363.192 cv
249.482 363.192 249.482 363.192 249.482 363.192 cv
249.487 363.195 249.491 363.198 249.496 363.2 cv
249.496 363.201 249.496 363.201 249.497 363.201 cv
249.501 363.204 249.505 363.206 249.51 363.209 cv
249.51 363.209 249.511 363.209 249.511 363.21 cv
249.513 363.211 249.515 363.212 249.518 363.213 cv
249.518 363.213 li
249.518 363.213 li
249.782 363.366 250.072 363.498 250.379 363.615 cv
250.38 363.616 250.381 363.616 250.382 363.616 cv
250.386 363.618 250.39 363.62 250.394 363.621 cv
250.399 363.623 250.404 363.625 250.409 363.627 cv
250.41 363.627 250.41 363.627 250.411 363.627 cv
251.927 364.198 253.838 364.393 255.135 364.756 cv
.870588 .6 .392157 rgb
f
248.437 361.401 mo
247.479 361.219 246.067 360.827 244.674 360.31 cv
244.674 359.56 li
244.709 359.56 244.745 359.56 244.781 359.56 cv
244.805 359.56 244.83 359.56 244.855 359.56 cv
244.881 359.56 244.906 359.56 244.93 359.56 cv
245.863 359.56 246.585 359.544 248.114 358.321 cv
248.117 359.096 248.17 360.339 248.437 361.397 cv
248.437 361.401 li
.847059 .588235 .388235 rgb
f
244.93 359.56 mo
244.906 359.56 244.881 359.56 244.855 359.56 cv
244.83 359.56 244.805 359.56 244.781 359.56 cv
244.745 359.56 244.709 359.56 244.674 359.56 cv
244.674 332.505 li
244.855 332.501 li
249.663 332.501 252.288 334.54 254.034 338.109 cv
254.628 339.324 254.817 340.896 254.817 342.398 cv
254.818 344.988 254.261 347.372 254.261 347.372 cv
254.261 347.372 li
254.261 347.372 li
254.44 347.336 254.602 347.319 254.747 347.319 cv
255.6 347.319 255.899 347.893 255.899 348.583 cv
255.899 349.211 255.653 349.934 255.354 350.407 cv
254.787 351.303 254.772 351.401 254.433 352.386 cv
254.227 352.982 253.91 353.154 253.61 353.154 cv
253.479 353.154 253.352 353.122 253.239 353.077 cv
252.993 352.979 252.813 352.823 252.813 352.823 cv
252.61 353.389 252.425 353.821 252.187 354.219 cv
251.662 355.103 250.881 355.823 249.081 357.483 cv
249.064 357.499 249.047 357.515 249.029 357.53 cv
249.025 357.535 249.02 357.539 249.015 357.543 cv
249.015 357.543 249.015 357.543 249.015 357.543 cv
248.689 357.842 248.397 358.092 248.126 358.308 cv
248.126 358.309 248.126 358.31 248.126 358.311 cv
248.122 358.314 248.118 358.317 248.114 358.321 cv
246.585 359.544 245.863 359.56 244.93 359.56 cv
.870588 .6 .392157 rgb
f
238.592 332.5 mo
243.947 329.705 248.447 332.5 248.447 332.5 cv
259.542 333.726 255.659 347.716 255.659 347.716 cv
255.652 347.715 li
255.414 347.393 254.977 347.23 254.261 347.372 cv
254.412 346.354 253.16 345.114 251.193 343.658 cv
249.229 342.2 248.447 340.087 248.447 340.087 cv
248.447 340.087 246.48 343.803 241.554 344.786 cv
236.627 345.769 235.588 346.462 235.451 347.372 cv
234.731 347.23 234.298 347.393 234.058 347.715 cv
234.053 347.716 li
234.053 347.716 231.072 336.432 238.592 332.5 cv
cp
.345098 .176471 .0666667 rgb
f
235.632 353.008 mo
235.632 353.284 235.857 353.506 236.134 353.506 cv
236.411 353.506 236.633 353.284 236.633 353.008 cv
236.633 352.73 236.411 352.506 236.134 352.506 cv
235.857 352.506 235.632 352.73 235.632 353.008 cv
cp
.921569 .294118 .192157 rgb
f
254.078 353.008 mo
254.078 353.284 253.852 353.506 253.574 353.506 cv
253.3 353.506 253.075 353.284 253.075 353.008 cv
253.075 352.73 253.3 352.506 253.574 352.506 cv
253.852 352.506 254.078 352.73 254.078 353.008 cv
cp
.760784 .14902 .0509804 rgb
f
228.672 375.358 mo
228.672 375.358 228.685 372.041 229.07 369.56 cv
229.114 369.274 229.185 369.009 229.265 368.754 cv
230.039 367.414 230.694 367.257 231.135 367.019 cv
231.556 366.786 234.132 365.461 236.515 364.238 cv
237.684 364.01 238.889 363.727 239.809 363.213 cv
240.183 363.004 240.458 362.6 240.664 362.109 cv
240.78 362.048 li
244.674 364.756 li
244.674 377.5 li
228.672 375.358 li
cp
.909804 .964706 .937255 rgb
f
244.674 364.76 mo
242.048 367.754 li
239.24 363.268 li
240.747 361.915 li
240.747 361.915 243.021 363.607 244.674 364.76 cv
cp
.811765 .909804 .866667 rgb
f
225.727 374.927 mo
227.493 366.634 229.888 366.096 230.747 365.667 cv
231.997 365.041 237.383 364.052 237.383 364.052 cv
243.694 375.358 li
244.674 377.112 li
244.674 394.987 li
234.34 394.987 li
234.461 391.871 235.213 389.541 233.388 386.652 cv
232.189 384.758 232.146 382.598 232.259 381.326 cv
232.026 382.364 231.732 393.057 231.93 394.987 cv
224.646 394.987 li
224.44 394.413 223.959 383.219 225.727 374.927 cv
cp
.137255 .34902 .509804 rgb
f
260.675 375.358 mo
260.675 375.358 260.658 372.041 260.274 369.56 cv
260.229 369.274 260.159 369.009 260.078 368.754 cv
259.305 367.414 258.649 367.257 258.21 367.019 cv
257.787 366.786 255.212 365.461 252.83 364.238 cv
251.66 364.01 250.454 363.727 249.534 363.213 cv
249.161 363.004 248.889 362.6 248.68 362.109 cv
248.563 362.048 li
244.674 364.756 li
244.674 377.5 li
260.675 375.358 li
cp
.811765 .909804 .866667 rgb
f
244.674 364.76 mo
247.296 367.754 li
250.104 363.268 li
248.597 361.915 li
248.597 361.915 246.322 363.607 244.674 364.76 cv
cp
.729412 .870588 .811765 rgb
f
276.642 379.358 mo
276.642 379.358 277.469 379.267 277.789 377.633 cv
278.112 376.002 279.986 373.651 279.986 373.651 cv
279.986 373.651 281.611 372.68 282.408 371.169 cv
282.765 370.493 283.418 370.236 283.954 370.732 cv
284.49 371.234 283.602 372.513 282.327 374.295 cv
282.327 374.295 282.182 374.591 283.157 373.901 cv
284.139 373.209 288.82 370.166 288.82 370.166 cv
288.82 370.166 289.883 369.301 290.432 370.147 cv
290.939 370.917 290.079 371.278 289.634 371.565 cv
289.193 371.855 285.792 374.092 285.792 374.092 cv
285.792 374.092 285.711 374.329 285.929 374.301 cv
287.977 372.96 li
287.977 372.96 288.628 372.491 288.994 373.033 cv
289.43 373.675 289.017 373.97 288.737 374.153 cv
288.456 374.335 286.672 375.501 286.672 375.501 cv
286.672 375.501 286.528 375.768 286.821 375.731 cv
288.635 374.543 li
288.635 374.543 289.079 374.227 289.456 374.808 cv
289.834 375.384 289.379 375.653 289.379 375.653 cv
287.505 376.878 li
287.505 376.878 287.39 377.055 287.633 377.072 cv
288.899 376.244 li
288.899 376.244 289.318 376.018 289.673 376.588 cv
290.022 377.157 289.577 377.437 289.577 377.437 cv
282.267 382.216 li
282.267 382.216 281.257 382.939 280.604 382.615 cv
279.948 382.295 279.131 383.168 279.131 383.168 cv
276.642 379.358 li
.956863 .713726 .505882 rgb
f
279.131 383.168 mo
276.642 379.358 li
276.642 379.358 277.469 379.267 277.789 377.633 cv
278.112 376.002 279.986 373.651 279.986 373.651 cv
279.986 373.651 281.611 372.68 282.408 371.169 cv
282.637 370.735 282.989 370.473 283.353 370.473 cv
283.556 370.473 283.762 370.554 283.954 370.732 cv
284.063 370.834 284.113 370.968 284.113 371.132 cv
284.114 371.769 283.355 372.858 282.351 374.262 cv
282.343 374.273 282.335 374.284 282.327 374.295 cv
282.327 374.295 282.319 374.311 282.319 374.327 cv
282.32 374.343 282.327 374.358 282.359 374.358 cv
282.432 374.358 282.632 374.273 283.157 373.901 cv
284.139 373.209 288.82 370.166 288.82 370.166 cv
288.82 370.166 289.299 369.776 289.78 369.776 cv
290.016 369.776 290.251 369.869 290.432 370.147 cv
290.542 370.314 290.587 370.462 290.587 370.594 cv
290.586 371.07 289.983 371.34 289.634 371.565 cv
289.193 371.855 285.792 374.092 285.792 374.092 cv
285.792 374.092 285.777 374.136 285.777 374.183 cv
285.777 374.24 285.799 374.303 285.896 374.303 cv
285.906 374.303 285.917 374.303 285.929 374.301 cv
287.977 372.96 li
287.977 372.96 288.238 372.771 288.523 372.771 cv
288.688 372.771 288.86 372.834 288.994 373.033 cv
289.13 373.233 289.183 373.4 289.184 373.54 cv
289.185 373.849 288.929 374.027 288.737 374.153 cv
288.702 374.175 288.644 374.213 288.569 374.262 cv
288.04 374.607 286.672 375.501 286.672 375.501 cv
286.672 375.501 286.637 375.566 286.637 375.628 cv
286.636 375.682 286.664 375.734 286.77 375.734 cv
286.785 375.734 286.802 375.733 286.821 375.731 cv
288.635 374.543 li
288.635 374.543 288.755 374.457 288.924 374.457 cv
289.08 374.457 289.276 374.53 289.456 374.808 cv
289.567 374.977 289.606 375.119 289.606 375.236 cv
289.606 375.519 289.379 375.653 289.379 375.653 cv
287.505 376.878 li
287.505 376.878 287.477 376.921 287.478 376.966 cv
287.478 377.013 287.508 377.063 287.633 377.072 cv
288.899 376.244 li
288.899 376.244 288.981 376.2 289.103 376.2 cv
289.257 376.2 289.475 376.27 289.673 376.588 cv
289.771 376.748 289.807 376.885 289.807 377 cv
289.807 377.292 289.577 377.437 289.577 377.437 cv
289.419 377.541 li
282.267 382.216 li
282.267 382.216 281.593 382.698 280.99 382.698 cv
280.855 382.698 280.723 382.674 280.604 382.615 cv
280.502 382.565 280.397 382.544 280.291 382.544 cv
279.715 382.544 279.131 383.168 279.131 383.168 cv
.870588 .6 .392157 rgb
f
245.651 375.358 mo
251.96 364.052 li
251.96 364.052 252.458 364.142 253.178 364.287 cv
253.609 364.372 254.119 364.477 254.657 364.592 cv
256.199 364.924 257.951 365.343 258.599 365.667 cv
259.287 366.01 260.956 366.429 262.504 370.836 cv
262.717 371.266 262.939 371.732 263.184 372.266 cv
263.188 372.26 li
263.188 372.26 268.229 382.002 268.867 382.002 cv
269.503 382.002 276.249 378.09 276.249 378.09 cv
280.311 383.88 li
280.311 383.88 268.469 391.242 266.96 391.242 cv
266.575 391.242 265.826 390.682 264.916 389.847 cv
262.611 387.733 257.021 380.33 257.021 380.33 cv
257.134 381.602 257.154 384.758 255.956 386.652 cv
254.131 389.541 254.997 391.255 255.003 394.987 cv
244.7 394.987 li
244.674 394.987 li
244.674 377.112 li
245.651 375.358 li
cp
.0627451 .207843 .309804 rgb
f
277.02 362.399 mo
279.709 362.399 li
279.709 360.077 li
277.02 360.077 li
277.02 362.399 li
cp
.678431 .0941176 0 rgb
f
15.3481 57.4004 mo
15.3481 58.3838 16.105 59.1851 17.0278 59.1851 cv
55.0835 59.1851 li
56.0083 59.1851 56.7651 58.3838 56.7651 57.4004 cv
56.7651 5.43018 li
56.7651 4.44922 56.0083 3.646 55.0835 3.646 cv
17.0278 3.646 li
16.105 3.646 15.3481 4.44922 15.3481 5.43018 cv
15.3481 57.4004 li
cp
.137255 .34902 .509804 rgb
f
55.0835 3.646 mo
36.0571 3.646 li
36.0571 59.1851 li
55.0835 59.1851 li
56.0083 59.1851 56.7651 58.3838 56.7651 57.4004 cv
56.7651 5.43018 li
56.7651 4.44922 56.0083 3.646 55.0835 3.646 cv
cp
.0627451 .207843 .309804 rgb
f
54.0059 52.2021 mo
54.0059 8.56348 li
18.106 8.56348 li
18.106 52.2021 li
54.0059 52.2021 li
cp
.643137 .847059 .901961 rgb
f
54.0059 52.2021 mo
54.0059 8.56348 li
36.0571 8.56348 li
36.0571 52.2021 li
54.0059 52.2021 li
cp
.372549 .690196 .811765 rgb
f
34.0854 57.0425 mo
34.0854 57.5542 34.5044 57.9712 35.0142 57.9712 cv
37.0991 57.9712 li
37.6084 57.9712 38.0283 57.5542 38.0283 57.0425 cv
38.0283 54.958 li
38.0283 54.4482 37.6084 54.0313 37.0991 54.0313 cv
35.0142 54.0313 li
34.5044 54.0313 34.0854 54.4482 34.0854 54.958 cv
34.0854 57.0425 li
cp
1 1 1 rgb
f
30.5566 6.26807 mo
30.5566 6.5708 30.8052 6.81738 31.1055 6.81738 cv
41.0063 6.81738 li
41.311 6.81738 41.5571 6.5708 41.5571 6.26807 cv
41.5571 5.96338 41.311 5.71875 41.0063 5.71875 cv
31.1055 5.71875 li
30.8052 5.71875 30.5566 5.96338 30.5566 6.26807 cv
cp
f
54.0059 14.2373 mo
18.106 14.2373 li
18.106 8.56348 li
54.0059 8.56348 li
54.0059 14.2373 li
cp
f
54.0059 14.2373 mo
36.0571 14.2373 li
36.0571 8.56348 li
54.0059 8.56348 li
54.0059 14.2373 li
cp
.901961 .94902 .941176 rgb
f
22.8057 11.4014 mo
22.8057 12.0845 22.2495 12.6367 21.5659 12.6367 cv
20.8843 12.6367 20.3286 12.0845 20.3286 11.4014 cv
20.3286 10.7168 20.8843 10.1621 21.5659 10.1621 cv
22.2495 10.1621 22.8057 10.7168 22.8057 11.4014 cv
cp
.85098 .192157 .0862745 rgb
f
26.2959 11.4014 mo
26.2959 12.0845 25.7407 12.6367 25.0581 12.6367 cv
24.375 12.6367 23.8213 12.0845 23.8213 11.4014 cv
23.8213 10.7168 24.375 10.1621 25.0581 10.1621 cv
25.7407 10.1621 26.2959 10.7168 26.2959 11.4014 cv
cp
f
29.7871 11.4014 mo
29.7871 12.0845 29.2329 12.6367 28.5488 12.6367 cv
27.8662 12.6367 27.311 12.0845 27.311 11.4014 cv
27.311 10.7168 27.8662 10.1621 28.5488 10.1621 cv
29.2329 10.1621 29.7871 10.7168 29.7871 11.4014 cv
cp
f
17.0957 70.6455 mo
17.0957 70.6455 17.0957 68.8228 20.5811 67.7339 cv
24.0708 66.6455 28.7471 61.9995 28.7471 61.9995 cv
28.7471 61.9995 30.481 58.2217 33.5874 56.1318 cv
34.9761 55.1948 35.3848 53.7075 34.1714 52.6533 cv
32.9561 51.6011 30.3735 53.8472 26.7866 57.0522 cv
26.7866 57.0522 26.1792 57.439 27.4526 55.1401 cv
28.7285 52.8374 34.2583 41.9092 34.2583 41.9092 cv
34.2583 41.9092 35.8882 39.3857 33.917 38.3862 cv
32.1187 37.4692 31.5347 39.4282 31.0078 40.4604 cv
30.4814 41.4961 26.4097 49.4443 26.4097 49.4443 cv
26.4097 49.4443 25.9111 49.6709 25.9248 49.1973 cv
28.3633 44.4058 li
28.3633 44.4058 29.2319 42.8784 27.959 42.2085 cv
26.4565 41.4136 25.9146 42.3828 25.5815 43.0361 cv
25.248 43.6899 23.127 47.8599 23.127 47.8599 cv
23.127 47.8599 22.5771 48.2324 22.5967 47.5889 cv
24.751 43.3516 li
24.751 43.3516 25.334 42.3037 23.9873 41.6196 cv
22.6357 40.9316 22.1533 41.9858 22.1533 41.9858 cv
19.9272 46.3647 li
19.9272 46.3647 19.5698 46.6582 19.4771 46.1318 cv
20.9839 43.1719 li
20.9839 43.1719 21.375 42.2065 20.0483 41.5713 cv
18.7241 40.9438 18.2158 41.978 18.2158 41.978 cv
9.53076 59.0537 li
9.53076 59.0537 8.19531 61.4312 9.05566 62.7808 cv
9.91211 64.1284 8.20264 66.1211 8.20264 66.1211 cv
17.0957 70.6455 li
cp
.956863 .713726 .505882 rgb
f
66.1455 33.9038 mo
66.1455 35.2881 64.7998 36.4102 63.1396 36.4102 cv
8.97461 36.4102 li
7.31494 36.4102 5.96924 35.2881 5.96924 33.9038 cv
5.96924 23.3599 li
5.96924 21.9771 7.31494 20.854 8.97461 20.854 cv
63.1396 20.854 li
64.7998 20.854 66.1455 21.9771 66.1455 23.3599 cv
66.1455 33.9038 li
cp
1 .756863 .188235 rgb
f
36.0571 20.854 mo
8.97461 20.854 li
7.31494 20.854 5.96924 21.9771 5.96924 23.3599 cv
5.96924 33.9038 li
5.96924 35.2881 7.31494 36.4102 8.97461 36.4102 cv
36.0571 36.4102 li
36.0571 20.854 li
cp
1 .827451 .360784 rgb
f
63.1396 20.854 mo
49.7476 20.854 li
49.7476 36.4102 li
63.1396 36.4102 li
64.7998 36.4102 66.1455 35.2881 66.1455 33.9038 cv
66.1455 23.3599 li
66.1455 21.9771 64.7998 20.854 63.1396 20.854 cv
cp
.678431 .0941176 0 rgb
f
34.6025 29.085 mo
27.209 29.085 li
28.1133 28.1797 li
34.6025 28.1797 li
34.6025 29.085 li
cp
.137255 .34902 .509804 rgb
f
32.5786 31.1724 mo
32.0161 30.4644 li
34.3267 28.6318 li
32.0161 26.8008 li
32.5786 26.0913 li
35.7837 28.6318 li
32.5786 31.1724 li
cp
f
25.5874 29.085 mo
32.981 29.085 li
32.0767 28.1797 li
25.5874 28.1797 li
25.5874 29.085 li
cp
f
27.6113 31.1724 mo
28.1733 30.4644 li
25.8633 28.6318 li
28.1733 26.8008 li
27.6113 26.0913 li
24.4063 28.6318 li
27.6113 31.1724 li
cp
f
14.1152 28.7988 mo
13.5869 27.0757 li
13.0688 28.7988 li
14.1152 28.7988 li
cp
13.8198 31.3472 mo
13.8198 30.3013 li
14.5757 30.3013 li
14.4111 29.7578 li
12.7729 29.7578 li
12.605 30.3013 li
13.228 30.3013 li
13.228 31.3472 li
10.6875 31.3472 li
10.6875 30.3013 li
11.2314 30.3013 li
12.3096 26.7944 li
11.9824 26.7944 li
11.9824 25.7656 li
15.0498 25.7656 li
16.4609 30.3013 li
17.021 30.3013 li
17.021 31.3472 li
13.8198 31.3472 li
cp
f
19.7163 29.8936 mo
19.6919 29.854 19.5791 29.6616 19.2451 29.6616 cv
18.9238 29.6616 18.7808 29.8379 18.7808 30.085 cv
18.7808 30.3071 18.9629 30.46 19.2031 30.46 cv
19.4443 30.46 19.644 30.3154 19.7163 30.1973 cv
19.7163 29.8936 li
cp
17.4326 27.6899 mo
17.751 27.4966 18.437 27.1226 19.1714 27.1226 cv
20.1299 27.1226 21.3359 27.4824 21.3359 28.7686 cv
21.3359 30.3237 li
21.814 30.3237 li
21.814 31.3472 li
20.1055 31.3472 li
19.9136 30.9873 li
19.6191 31.395 19.1255 31.499 18.8364 31.499 cv
18.0776 31.499 17.2632 31.0933 17.2632 30.1646 cv
17.2632 29.2632 18.022 28.6968 18.9238 28.6968 cv
19.395 28.6968 19.6763 28.9253 19.7163 28.9741 cv
19.7163 28.6968 li
19.7163 28.3354 19.3872 28.2485 18.9561 28.2485 cv
18.4858 28.2485 18.0698 28.4487 17.7661 28.6147 cv
17.4326 27.6899 li
cp
f
41.6216 31.4038 mo
41.6924 31.062 41.5854 30.8628 41.4497 30.8457 cv
41.3159 30.8252 40.708 31.3555 40.6191 31.4595 cv
40.5288 31.564 39.8755 32.0566 39.7603 32.1235 cv
39.6436 32.189 39.3667 32.3882 39.3574 32.5005 cv
39.3516 32.5825 39.5459 32.6729 39.769 32.5674 cv
39.9927 32.4634 40.4946 32.103 40.6729 32.019 cv
40.8506 31.9331 41.5488 31.7441 41.6216 31.4038 cv
cp
.0627451 .207843 .309804 rgb
f
43.7056 30.4468 mo
43.812 30.4551 44.0356 30.4751 44.1084 30.2476 cv
44.1792 30.021 44.2236 29.8604 44.1084 29.7832 cv
43.9912 29.7085 43.625 29.8604 43.2939 29.8701 cv
43.2119 29.8701 43.0078 29.8701 42.7466 29.8672 cv
42.8193 29.6802 li
42.9722 29.4253 43.0156 29.0459 42.9004 28.9517 cv
42.7842 28.8555 41.9717 28.7622 41.9878 29.8569 cv
41.3223 29.8481 40.6484 29.8438 40.5918 29.8701 cv
40.5918 29.8701 40.5747 30.4468 40.7251 30.4946 cv
40.8364 30.5298 41.6045 30.4873 42.0039 30.4619 cv
42.0313 31.3755 42.0464 32.2021 41.8076 32.3315 cv
41.6431 32.4209 41.6431 32.4351 41.3345 32.3965 cv
41.3345 32.3965 41.3706 32.9468 41.8979 32.9468 cv
42.4258 32.9468 42.5425 32.1509 42.5786 31.4595 cv
42.5947 31.1279 42.6172 30.7637 42.6504 30.4438 cv
43.0581 30.4429 43.6362 30.4419 43.7056 30.4468 cv
cp
f
45.207 29.2925 mo
43.9648 28.7798 42.3188 26.5469 42.3188 26.5469 cv
42.354 27.7295 40.4307 29.3008 39.6973 29.5093 cv
38.9629 29.7173 38.6147 29.9927 38.6714 30.1353 cv
38.728 30.2778 39.2319 30.1831 40.0635 29.7632 cv
40.8965 29.3452 42.5688 27.938 42.5688 27.938 cv
44.3584 29.9634 45.0474 30.1343 45.4683 30.1973 cv
45.8882 30.2598 46.5327 30.002 46.5327 30.002 cv
46.5327 30.002 46.4517 29.8022 45.207 29.2925 cv
cp
f
40.8428 26.1108 mo
40.8428 26.1108 40.9854 27.0771 41.1201 27.1812 cv
41.2534 27.2842 41.6924 26.9907 41.6924 26.9907 cv
41.4414 26.8198 41.397 26.1582 41.397 26.1582 cv
43.5073 26.0259 li
43.1948 26.9819 li
43.5703 27.2026 li
44.0723 26.0449 li
44.0723 26.0449 46.1025 26.0347 46.2554 26.0542 cv
46.4072 26.0713 46.5728 25.5996 46.5728 25.3057 cv
46.5728 25.0122 46.1382 25.1729 45.8608 25.2681 cv
45.5845 25.3623 44.1611 25.4561 44.1611 25.4561 cv
44.6084 24.4072 li
43.8931 24.2451 43.4731 24.6055 43.4731 24.6055 cv
43.625 24.8228 43.5894 25.5137 43.5894 25.5137 cv
41.3872 25.5513 li
41.4326 24.3462 li
41.3262 24.2007 40.0454 24.6426 40.3042 24.8047 cv
40.5654 24.9644 40.7354 25.5693 40.7354 25.5693 cv
40.7354 25.5693 38.9902 25.4756 38.793 25.4946 cv
38.5967 25.5137 38.6147 25.7212 38.793 26.1108 cv
38.9731 26.4971 40.8428 26.1108 40.8428 26.1108 cv
cp
f
42.8916 30.9224 mo
42.8916 30.9224 42.9351 31.2603 43.4004 31.4595 cv
43.8667 31.6592 44.3047 32.3408 44.3755 32.5674 cv
44.4482 32.7949 44.752 32.9751 44.9302 32.7578 cv
45.1099 32.5391 45.3325 31.8521 42.8916 30.9224 cv
cp
f
56.8491 24.6577 mo
55.2373 24.6577 53.9263 25.9702 53.9263 27.5806 cv
53.9263 29.1934 55.2373 30.5034 56.8491 30.5034 cv
58.4604 30.5034 59.772 29.1934 59.772 27.5806 cv
59.772 25.9702 58.4604 24.6577 56.8491 24.6577 cv
cp
56.8491 31.8955 mo
54.4702 31.8955 52.5352 29.9604 52.5352 27.5806 cv
52.5352 25.2021 54.4702 23.2671 56.8491 23.2671 cv
59.2275 23.2671 61.1631 25.2021 61.1631 27.5806 cv
61.1631 29.9604 59.2275 31.8955 56.8491 31.8955 cv
cp
1 1 1 rgb
f
63.5898 34.5283 mo
63.4121 34.5283 63.2339 34.4595 63.0981 34.3237 cv
59.1567 30.3813 li
58.8833 30.1089 58.8833 29.6689 59.1567 29.397 cv
59.4277 29.1245 59.8687 29.1245 60.1401 29.397 cv
64.0825 33.3394 li
64.355 33.6113 64.355 34.0518 64.0825 34.3237 cv
63.9463 34.4595 63.7681 34.5283 63.5898 34.5283 cv
cp
f
111.768 64.9375 mo
145.713 64.9375 li
145.713 14.1851 li
111.768 14.1851 li
111.768 64.9375 li
cp
.137255 .34902 .509804 rgb
f
113.733 14.8198 mo
145.713 14.8198 li
145.713 63.1299 li
113.733 63.1299 li
113.733 14.8198 li
cp
.643137 .847059 .901961 rgb
f
179.661 64.9375 mo
145.713 64.9375 li
145.713 14.1851 li
179.661 14.1851 li
179.661 64.9375 li
cp
.0627451 .207843 .309804 rgb
f
177.694 14.8198 mo
145.713 14.8198 li
145.713 63.1299 li
177.694 63.1299 li
177.694 14.8198 li
cp
.372549 .690196 .811765 rgb
f
130.657 9.35449 mo
118.48 9.35449 114.649 14.0547 114.649 14.0547 cv
114.649 62.2676 li
114.649 62.2676 118.48 57.5703 130.657 57.5703 cv
142.834 57.5703 145.713 62.2676 145.713 62.2676 cv
145.713 14.0547 li
145.713 14.0547 142.834 9.35449 130.657 9.35449 cv
cp
.901961 .94902 .941176 rgb
f
160.771 9.35449 mo
172.947 9.35449 176.779 14.0547 176.779 14.0547 cv
176.779 62.2676 li
176.779 62.2676 172.947 57.5703 160.771 57.5703 cv
148.593 57.5703 145.713 62.2676 145.713 62.2676 cv
145.713 14.0547 li
145.713 14.0547 148.593 9.35449 160.771 9.35449 cv
cp
.811765 .909804 .866667 rgb
f
142.005 19.624 mo
142.005 17.0786 li
134.574 15.2153 126.472 15.2153 119.041 17.0786 cv
119.041 19.624 li
126.441 17.6172 134.606 17.6172 142.005 19.624 cv
cp
1 1 1 rgb
f
119.041 22.0522 mo
119.041 24.5967 li
126.441 22.5884 134.606 22.5884 142.005 24.5967 cv
142.005 22.0522 li
134.574 20.1875 126.472 20.1875 119.041 22.0522 cv
cp
f
119.041 27.0259 mo
119.041 29.5703 li
126.441 27.563 134.606 27.563 142.005 29.5703 cv
142.005 27.0259 li
134.574 25.1611 126.472 25.1611 119.041 27.0259 cv
cp
f
119.041 31.9985 mo
119.041 34.5449 li
126.441 32.5356 134.606 32.5356 142.005 34.5449 cv
142.005 31.9985 li
134.574 30.1338 126.472 30.1338 119.041 31.9985 cv
cp
f
119.041 36.9731 mo
119.041 39.5176 li
126.441 37.5093 134.606 37.5093 142.005 39.5176 cv
142.005 36.9731 li
134.574 35.1084 126.472 35.1084 119.041 36.9731 cv
cp
f
119.041 41.9453 mo
119.041 44.4897 li
126.441 42.4849 134.606 42.4849 142.005 44.4897 cv
142.005 41.9453 li
134.574 40.082 126.472 40.082 119.041 41.9453 cv
cp
f
119.041 46.9189 mo
119.041 49.4634 li
126.441 47.4561 134.606 47.4561 142.005 49.4634 cv
142.005 46.9189 li
134.574 45.0537 126.472 45.0537 119.041 46.9189 cv
cp
f
119.041 51.8916 mo
119.041 54.437 li
126.441 52.4297 134.606 52.4297 142.005 54.437 cv
142.005 51.8916 li
134.574 50.0278 126.472 50.0278 119.041 51.8916 cv
cp
f
138.646 10.209 mo
138.646 41.6875 li
140.784 39.9624 li
142.987 41.6875 li
142.987 11.835 li
141.936 11.2554 140.52 10.6675 138.646 10.209 cv
cp
1 .827451 .360784 rgb
f
162.168 26.6484 mo
163.196 26.6484 163.785 27.5347 163.785 28.2539 cv
163.785 29.0967 163.223 29.7725 162.168 29.7725 cv
161.24 29.7725 160.579 28.9985 160.579 28.2539 cv
160.579 27.5347 161.141 26.6484 162.168 26.6484 cv
cp
.678431 .0941176 0 rgb
f
162.168 31.3408 mo
163.196 31.3408 163.785 32.2261 163.785 32.9453 cv
163.785 33.7891 163.223 34.4639 162.168 34.4639 cv
161.24 34.4639 160.579 33.6899 160.579 32.9453 cv
160.579 32.2261 161.141 31.3408 162.168 31.3408 cv
cp
f
162.168 36.0332 mo
163.196 36.0332 163.785 36.9194 163.785 37.6357 cv
163.785 38.4805 163.223 39.1563 162.168 39.1563 cv
161.24 39.1563 160.579 38.3823 160.579 37.6357 cv
160.579 36.9194 161.141 36.0332 162.168 36.0332 cv
cp
f
162.638 19.3955 mo
161.709 16.3584 li
160.794 19.3955 li
162.638 19.3955 li
cp
162.117 23.8857 mo
162.117 22.041 li
163.454 22.041 li
163.158 21.085 li
160.274 21.085 li
159.979 22.041 li
161.078 22.041 li
161.078 23.8857 li
156.603 23.8857 li
156.603 22.041 li
157.56 22.041 li
159.459 15.8657 li
158.882 15.8657 li
158.882 14.0488 li
164.284 14.0488 li
166.774 22.041 li
167.758 22.041 li
167.758 23.8857 li
162.117 23.8857 li
cp
f
157.594 41.9224 mo
166.822 41.9224 li
166.851 43.7939 li
161.703 49.8984 li
164.318 49.8984 li
164.318 48.0977 li
166.808 48.0977 li
166.808 51.7549 li
157.51 51.7549 li
157.51 49.9268 li
162.63 43.7939 li
159.987 43.7939 li
159.987 45.6221 li
157.594 45.6221 li
157.594 41.9224 li
cp
f
370.066 68.5483 mo
367.616 68.5483 li
367.616 10.7871 li
370.066 10.7871 li
370.066 68.5483 li
cp
1 .827451 .360784 rgb
f
368.853 68.5483 mo
370.066 68.5483 li
370.066 10.7871 li
368.853 10.7871 li
368.853 68.5483 li
cp
1 .756863 .188235 rgb
f
380.746 70.8862 mo
377.805 67.6499 373.56 66.4917 368.843 66.4917 cv
364.124 66.4917 359.879 67.6499 356.935 70.8862 cv
380.746 70.8862 li
cp
.85098 .192157 .0862745 rgb
f
369.271 8.1084 mo
368.167 8.11182 367.076 8.18604 366.004 8.31348 cv
366.02 11.9707 li
367.086 11.8218 368.175 11.7417 369.279 11.7368 cv
382.531 11.6914 393.345 22.4321 393.389 35.6787 cv
393.436 48.9282 382.693 59.7437 369.443 59.7871 cv
368.339 59.792 367.25 59.7173 366.184 59.5757 cv
366.192 63.2339 li
367.267 63.3564 368.355 63.4199 369.458 63.4141 cv
384.704 63.3652 397.069 50.9131 397.017 35.667 cv
396.964 20.4214 384.516 8.05713 369.271 8.1084 cv
cp
.678431 .0941176 0 rgb
f
347.868 35.4023 mo
347.87 47.0708 357.334 56.5332 369.005 56.5303 cv
380.676 56.5303 390.137 47.0649 390.133 35.3955 cv
390.131 23.7231 380.67 14.2622 368.998 14.2656 cv
357.327 14.2656 347.868 23.7285 347.868 35.4023 cv
cp
.643137 .847059 .901961 rgb
f
368.875 15.1216 mo
368.998 15.1206 li
374.415 15.1206 379.506 17.23 383.339 21.0571 cv
387.167 24.8882 389.275 29.9775 389.275 35.3955 cv
389.277 46.5103 380.238 55.6074 369.124 55.6733 cv
369.003 55.6733 li
363.588 55.6763 358.495 53.5679 354.665 49.7378 cv
350.834 45.9082 348.724 40.8145 348.724 35.4014 cv
348.722 24.2856 357.765 15.189 368.875 15.1216 cv
cp
369.136 57.3853 mo
381.189 57.3135 390.995 47.4492 390.991 35.394 cv
390.987 29.5229 388.698 23.9995 384.547 19.8477 cv
380.396 15.6934 374.87 13.4072 368.996 13.4082 cv
368.865 13.4092 li
356.815 13.481 347.008 23.3467 347.014 35.3999 cv
347.01 41.2729 349.299 46.7944 353.452 50.9468 cv
357.608 55.1016 363.131 57.3872 369.005 57.3843 cv
369.136 57.3853 li
cp
.137255 .34902 .509804 rgb
f
390.991 35.394 mo
390.995 47.4492 381.189 57.3135 369.136 57.3853 cv
369.13 57.3853 li
368.865 13.4092 li
368.996 13.4082 li
374.87 13.4072 380.396 15.6934 384.547 19.8477 cv
388.698 23.9995 390.987 29.5229 390.991 35.394 cv
cp
f
368.871 14.2666 mo
368.998 14.2656 li
380.67 14.2622 390.131 23.7231 390.133 35.3955 cv
390.137 47.0254 380.74 56.4604 369.126 56.5283 cv
368.871 14.2666 li
cp
.372549 .690196 .811765 rgb
f
369.573 56.5303 mo
369.569 14.2632 li
368.428 14.2646 li
368.432 56.5303 li
369.573 56.5303 li
cp
.137255 .34902 .509804 rgb
f
368.871 14.2622 mo
369.569 14.2632 li
369.573 56.5303 li
369.126 56.5303 li
368.871 14.2622 li
cp
.0627451 .207843 .309804 rgb
f
390.131 35.9668 mo
390.133 34.8257 li
347.868 34.8296 li
347.868 35.9712 li
390.131 35.9668 li
cp
.137255 .34902 .509804 rgb
f
390.131 35.9668 mo
390.133 34.8257 li
347.868 34.8296 li
347.868 35.9712 li
390.131 35.9668 li
cp
f
390.133 35.3799 mo
390.133 35.4126 li
390.131 35.5981 390.125 35.7813 390.121 35.9644 cv
369.003 35.9668 li
368.996 34.8276 li
390.119 34.8223 li
390.123 35.0078 390.131 35.1909 390.133 35.3799 cv
cp
.0627451 .207843 .309804 rgb
f
369.326 27.6221 mo
381.728 27.5493 385.427 23.3364 385.578 23.1558 cv
384.706 22.4155 li
384.674 22.457 381.11 26.4082 369.316 26.4785 cv
369.209 26.48 369.105 26.48 369.003 26.4775 cv
356.953 26.4819 353.325 22.46 353.287 22.4199 cv
352.419 23.1602 li
352.57 23.3423 356.336 27.6245 369.001 27.623 cv
369.107 27.623 369.217 27.623 369.326 27.6221 cv
cp
.137255 .34902 .509804 rgb
f
368.943 26.4785 mo
369.003 26.4775 li
369.105 26.48 369.209 26.48 369.316 26.4785 cv
381.11 26.4082 384.674 22.457 384.706 22.4155 cv
385.578 23.1558 li
385.427 23.3364 381.728 27.5493 369.326 27.6221 cv
369.217 27.623 369.107 27.623 369.001 27.623 cv
368.952 27.623 li
368.943 26.4785 li
cp
.0627451 .207843 .309804 rgb
f
384.71 48.3779 mo
385.584 47.6362 li
385.429 47.4551 381.665 43.1738 369.003 43.1719 cv
368.892 43.1719 368.782 43.1738 368.675 43.1738 cv
356.271 43.2505 352.572 47.4595 352.421 47.6426 cv
353.293 48.376 li
353.325 48.3394 356.961 44.3027 369.001 44.313 cv
381.05 44.3149 384.672 48.3374 384.71 48.3779 cv
cp
.137255 .34902 .509804 rgb
f
369.045 43.1738 mo
381.671 43.1816 385.429 47.4551 385.584 47.6362 cv
384.71 48.3779 li
384.672 48.3374 381.061 44.3252 369.053 44.3149 cv
369.045 43.1738 li
cp
.0627451 .207843 .309804 rgb
f
371.787 57.0049 mo
372.068 56.7183 378.643 49.8296 378.64 35.3955 cv
378.64 20.9463 372.042 14.7271 371.761 14.4692 cv
370.985 15.3096 li
371.053 15.3691 377.497 21.4844 377.497 35.3955 cv
377.499 49.3652 371.036 56.1406 370.97 56.2056 cv
371.787 57.0049 li
cp
f
366.221 57.0059 mo
367.034 56.2085 li
366.971 56.1416 360.504 49.333 360.502 35.3965 cv
360.5 21.4878 366.944 15.3711 367.01 15.3105 cv
366.236 14.4692 li
365.955 14.7261 359.359 20.9453 359.361 35.3989 cv
359.363 49.8315 365.938 56.7207 366.221 57.0059 cv
cp
.137255 .34902 .509804 rgb
f
357.973 54.1084 mo
358.79 53.3062 li
358.733 53.2461 353.042 47.2612 353.042 35.0181 cv
353.04 22.752 358.707 17.4233 358.762 17.3696 cv
357.993 16.5278 li
357.742 16.7539 351.9 22.2559 351.9 35.019 cv
351.9 47.7617 357.726 53.8535 357.973 54.1084 cv
cp
f
380.03 54.1001 mo
380.279 53.8481 386.103 47.7568 386.101 35.0132 cv
386.099 22.25 380.253 16.7549 380.004 16.5259 cv
379.233 17.3652 li
379.619 16.9453 li
379.233 17.3652 li
379.292 17.4204 384.955 22.791 384.959 35.0151 cv
384.959 47.2568 379.273 53.2441 379.217 53.3042 cv
380.03 54.1001 li
cp
.0627451 .207843 .309804 rgb
f
390.991 35.394 mo
390.995 47.4492 381.189 57.3135 369.136 57.3853 cv
369.13 57.3853 li
369.12 55.6733 li
369.124 55.6733 li
380.238 55.6074 389.277 46.5103 389.275 35.3955 cv
389.275 29.9775 387.167 24.8882 383.339 21.0571 cv
379.506 17.23 374.415 15.1206 368.998 15.1206 cv
368.875 15.1216 li
368.865 13.4092 li
368.996 13.4082 li
374.87 13.4072 380.396 15.6934 384.547 19.8477 cv
388.698 23.9995 390.987 29.5229 390.991 35.394 cv
cp
f
380.746 74.292 mo
356.935 74.292 li
356.935 70.8862 li
380.746 70.8862 li
380.746 74.292 li
cp
.85098 .192157 .0862745 rgb
f
368.843 66.4917 mo
364.124 66.4917 359.879 67.6499 356.935 70.8862 cv
356.935 74.292 li
380.746 74.292 li
380.746 70.8862 li
377.805 67.6499 373.56 66.4917 368.843 66.4917 cv
cp
f
368.869 74.292 mo
380.746 74.292 li
380.746 70.8862 li
377.809 67.6572 373.575 66.4956 368.869 66.4917 cv
368.869 74.292 li
cp
.678431 .0941176 0 rgb
f
351.636 11.2231 mo
350.735 11.2231 350.005 10.4941 350.005 9.59326 cv
353.267 9.59326 li
353.267 10.4941 352.536 11.2231 351.636 11.2231 cv
cp
.909804 .0980392 .0980392 rgb
f
351.998 0 mo
358.303 0 363.416 3.80615 363.416 8.50635 cv
363.416 11.5503 361.261 14.2139 358.038 15.7163 cv
357.44 20.0581 li
353.805 16.8965 li
353.214 16.9658 352.615 17.0132 351.998 17.0132 cv
345.694 17.0132 340.584 13.2021 340.584 8.50635 cv
340.584 3.80615 345.694 0 351.998 0 cv
cp
.137255 .34902 .509804 rgb
f
351.998 0 mo
351.998 17.0132 li
352.615 17.0132 353.214 16.9658 353.805 16.8965 cv
357.44 20.0581 li
358.038 15.7163 li
361.261 14.2139 363.416 11.5503 363.416 8.50635 cv
363.416 3.80615 358.305 0 351.998 0 cv
cp
.0627451 .207843 .309804 rgb
f
358.841 8.97412 mo
358.788 8.29883 358.646 7.7085 358.424 7.19971 cv
358.418 7.17676 li
358.365 7.02441 358.305 6.92188 358.242 6.83691 cv
358.229 6.81445 li
358.212 6.79883 li
358.099 6.66211 357.981 6.60205 357.906 6.58545 cv
357.772 6.55713 357.643 6.59375 357.552 6.68555 cv
357.442 6.79443 357.4 6.95605 357.435 7.12842 cv
357.487 7.38867 357.716 7.62793 357.935 7.85596 cv
358.148 8.08154 358.35 8.29297 358.365 8.49072 cv
358.369 8.65723 358.365 8.81982 358.355 8.98389 cv
358.319 9.63672 358.114 10.4043 357.665 10.5864 cv
357.495 10.6318 li
357.423 10.6392 li
357.297 10.6372 li
357.188 10.6289 357.066 10.5864 356.991 10.5347 cv
356.808 10.4136 356.568 10.104 356.504 9.81299 cv
356.421 9.42334 356.389 9.02979 356.407 8.61182 cv
356.429 8.37061 li
356.549 7.83594 356.555 7.49365 356.449 7.33398 cv
356.387 7.23682 356.289 7.19629 356.162 7.22119 cv
355.887 7.27393 355.903 7.73682 355.917 8.14355 cv
355.919 8.29736 li
355.853 8.74121 355.755 9.14697 355.547 9.5083 cv
355.399 9.75293 355.039 9.97314 354.833 10.0356 cv
354.592 10.105 354.399 10.0659 354.183 9.91064 cv
353.756 9.57275 353.491 8.91309 353.287 8.3125 cv
353.256 8.21729 li
353.25 7.90674 353.252 7.60547 353.254 7.34619 cv
353.265 6.40283 353.269 5.78027 352.88 5.63818 cv
352.637 5.55127 352.449 5.55908 352.308 5.66699 cv
352.162 5.77588 352.081 5.98145 352.063 6.29248 cv
352.046 6.56055 352.196 6.89355 352.357 7.24609 cv
352.538 7.6416 352.734 8.08301 352.732 8.50635 cv
352.708 8.72656 li
352.587 9.56738 352.338 10.2729 351.968 10.8247 cv
351.235 11.9795 350.037 12.5317 348.68 12.3447 cv
348.283 12.3003 348.036 12.2544 347.712 12.1685 cv
347.398 12.0889 347.111 11.9761 346.858 11.8242 cv
346.409 11.5742 345.845 11.0234 345.737 10.2964 cv
345.63 9.57275 345.692 8.78174 345.907 8.06494 cv
346.002 7.73096 346.134 7.36426 346.312 6.95605 cv
346.354 6.8623 li
346.504 6.53711 346.658 6.20166 346.883 5.93115 cv
346.879 5.83398 li
346.783 5.82617 li
346.472 6.0542 346.239 6.37842 345.988 6.75293 cv
345.771 7.08154 345.577 7.44385 345.39 7.85596 cv
345.039 8.67773 344.882 9.5752 344.938 10.4478 cv
344.967 11.4976 345.739 12.4424 346.49 12.9131 cv
346.794 13.1162 347.136 13.2671 347.568 13.3843 cv
347.708 13.4258 347.857 13.4653 348.02 13.499 cv
348.232 13.5459 348.455 13.5811 348.661 13.606 cv
349.473 13.6846 350.247 13.5532 350.964 13.2168 cv
351.881 12.6221 352.247 12.2466 352.663 11.4565 cv
352.866 11.0864 352.989 10.5566 353.088 10.1284 cv
353.104 10.0469 li
353.147 9.86035 353.167 9.69141 353.191 9.52295 cv
353.329 9.84814 353.516 10.1577 353.795 10.4258 cv
353.956 10.5688 354.146 10.6743 354.343 10.7275 cv
354.45 10.7534 354.545 10.77 354.669 10.771 cv
354.758 10.7739 354.871 10.7637 354.98 10.7397 cv
355.397 10.6519 355.702 10.3521 355.883 10.1172 cv
355.972 10.4761 356.164 10.9399 356.599 11.2046 cv
356.723 11.2764 356.852 11.3311 356.985 11.3604 cv
357.08 11.3804 357.176 11.3872 357.281 11.3892 cv
357.421 11.3848 li
357.599 11.3613 li
357.712 11.3359 357.821 11.2988 357.933 11.2432 cv
358.43 10.9858 358.646 10.4595 358.728 10.168 cv
358.851 9.72705 358.854 9.30029 358.841 8.97412 cv
cp
1 .827451 .360784 rgb
f
355.019 5.49072 mo
355.383 5.56982 355.743 5.33789 355.822 4.97314 cv
355.898 4.60889 355.664 4.24756 355.302 4.1709 cv
354.936 4.09326 354.577 4.32471 354.501 4.68848 cv
354.422 5.05273 354.654 5.41357 355.019 5.49072 cv
cp
f
356.73 5.24365 mo
357.057 5.31396 357.374 5.10889 357.442 4.78564 cv
357.514 4.46387 357.308 4.14404 356.983 4.07471 cv
356.662 4.00635 356.342 4.21094 356.273 4.53516 cv
356.204 4.85693 356.409 5.17432 356.73 5.24365 cv
cp
f
355.911 3.70557 mo
356.275 3.78369 356.636 3.55127 356.714 3.18799 cv
356.791 2.82031 356.559 2.46143 356.194 2.38428 cv
355.83 2.30469 355.468 2.53662 355.393 2.90088 cv
355.313 3.26758 355.545 3.62598 355.911 3.70557 cv
cp
f
352.663 11.4565 mo
352.866 11.0864 352.989 10.5566 353.088 10.1284 cv
353.104 10.0469 li
353.147 9.86035 353.167 9.69141 353.191 9.52295 cv
353.329 9.84814 353.516 10.1577 353.795 10.4258 cv
353.956 10.5688 354.146 10.6743 354.343 10.7275 cv
354.45 10.7534 354.545 10.77 354.669 10.771 cv
354.758 10.7739 354.871 10.7637 354.98 10.7397 cv
355.397 10.6519 355.702 10.3521 355.883 10.1172 cv
355.972 10.4761 356.164 10.9399 356.599 11.2046 cv
356.723 11.2764 356.852 11.3311 356.985 11.3604 cv
357.08 11.3804 357.176 11.3872 357.281 11.3892 cv
357.421 11.3848 li
357.599 11.3613 li
357.712 11.3359 357.821 11.2988 357.933 11.2432 cv
358.43 10.9858 358.646 10.4595 358.728 10.168 cv
358.851 9.72705 358.854 9.30029 358.841 8.97412 cv
358.788 8.29883 358.646 7.7085 358.424 7.19971 cv
358.418 7.17676 li
358.365 7.02441 358.305 6.92188 358.242 6.83691 cv
358.229 6.81445 li
358.212 6.79883 li
358.099 6.66211 357.981 6.60205 357.906 6.58545 cv
357.772 6.55713 357.643 6.59375 357.552 6.68555 cv
357.442 6.79443 357.4 6.95605 357.435 7.12842 cv
357.487 7.38867 357.716 7.62793 357.935 7.85596 cv
358.148 8.08154 358.35 8.29297 358.365 8.49072 cv
358.369 8.65723 358.365 8.81982 358.355 8.98389 cv
358.319 9.63672 358.114 10.4043 357.665 10.5864 cv
357.495 10.6318 li
357.423 10.6392 li
357.297 10.6372 li
357.188 10.6289 357.066 10.5864 356.991 10.5347 cv
356.808 10.4136 356.568 10.104 356.504 9.81299 cv
356.421 9.42334 356.389 9.02979 356.407 8.61182 cv
356.429 8.37061 li
356.549 7.83594 356.555 7.49365 356.449 7.33398 cv
356.387 7.23682 356.289 7.19629 356.162 7.22119 cv
355.887 7.27393 355.903 7.73682 355.917 8.14355 cv
355.919 8.29736 li
355.853 8.74121 355.755 9.14697 355.547 9.5083 cv
355.399 9.75293 355.039 9.97314 354.833 10.0356 cv
354.592 10.105 354.399 10.0659 354.183 9.91064 cv
353.756 9.57275 353.491 8.91309 353.287 8.3125 cv
353.256 8.21729 li
353.25 7.90674 353.252 7.60547 353.254 7.34619 cv
353.265 6.40283 353.269 5.78027 352.88 5.63818 cv
352.637 5.55127 352.449 5.55908 352.308 5.66699 cv
352.162 5.77588 352.081 5.98145 352.063 6.29248 cv
352.046 6.56055 352.196 6.89355 352.357 7.24609 cv
352.538 7.6416 352.734 8.08301 352.732 8.50635 cv
352.708 8.72656 li
352.591 9.54053 352.352 10.2251 351.998 10.7676 cv
351.998 12.4121 li
352.259 12.144 352.455 11.853 352.663 11.4565 cv
cp
1 .756863 .188235 rgb
f
355.302 4.1709 mo
354.936 4.09326 354.577 4.32471 354.501 4.68848 cv
354.422 5.05273 354.654 5.41357 355.019 5.49072 cv
355.383 5.56982 355.743 5.33789 355.822 4.97314 cv
355.898 4.60889 355.664 4.24756 355.302 4.1709 cv
cp
f
356.983 4.07471 mo
356.662 4.00635 356.342 4.21094 356.273 4.53516 cv
356.204 4.85693 356.409 5.17432 356.73 5.24365 cv
357.057 5.31396 357.374 5.10889 357.442 4.78564 cv
357.514 4.46387 357.308 4.14404 356.983 4.07471 cv
cp
f
356.714 3.18799 mo
356.791 2.82031 356.559 2.46143 356.194 2.38428 cv
355.83 2.30469 355.468 2.53662 355.393 2.90088 cv
355.313 3.26758 355.545 3.62598 355.911 3.70557 cv
356.275 3.78369 356.636 3.55127 356.714 3.18799 cv
cp
f
341.024 23.6582 mo
346.449 23.6582 350.851 26.936 350.851 30.9839 cv
350.851 33.605 348.997 35.895 346.219 37.1885 cv
349.936 40.8833 li
342.574 38.2061 li
342.068 38.2651 341.553 38.3066 341.024 38.3066 cv
335.596 38.3066 331.197 35.0264 331.197 30.9839 cv
331.197 26.936 335.596 23.6582 341.024 23.6582 cv
cp
.678431 .0941176 0 rgb
f
331.197 30.9839 mo
331.197 35.0264 335.596 38.3066 341.024 38.3066 cv
341.024 23.6582 li
335.596 23.6582 331.197 26.936 331.197 30.9839 cv
cp
.85098 .192157 .0862745 rgb
f
338.018 30.8057 mo
337.439 28.918 li
336.871 30.8057 li
338.018 30.8057 li
cp
337.694 33.5991 mo
337.694 32.4512 li
338.521 32.4512 li
338.342 31.8564 li
336.547 31.8564 li
336.363 32.4512 li
337.047 32.4512 li
337.047 33.5991 li
334.263 33.5991 li
334.263 32.4512 li
334.857 32.4512 li
336.039 28.6104 li
335.681 28.6104 li
335.681 27.4824 li
339.042 27.4824 li
340.588 32.4512 li
341.203 32.4512 li
341.203 33.5991 li
337.694 33.5991 li
cp
1 .827451 .360784 rgb
f
344.155 32.0049 mo
344.129 31.9614 344.005 31.7524 343.639 31.7524 cv
343.287 31.7524 343.129 31.9438 343.129 32.2153 cv
343.129 32.4595 343.329 32.6255 343.593 32.6255 cv
343.857 32.6255 344.076 32.4678 344.155 32.3374 cv
344.155 32.0049 li
cp
341.654 29.5903 mo
342.002 29.3794 342.753 28.9692 343.561 28.9692 cv
344.608 28.9692 345.93 29.3638 345.93 30.772 cv
345.93 32.4771 li
346.453 32.4771 li
346.453 33.5991 li
344.582 33.5991 li
344.371 33.2031 li
344.05 33.6504 343.508 33.7632 343.191 33.7632 cv
342.36 33.7632 341.468 33.3188 341.468 32.3022 cv
341.468 31.3154 342.3 30.6938 343.287 30.6938 cv
343.803 30.6938 344.11 30.9458 344.155 30.998 cv
344.155 30.6938 li
344.155 30.2983 343.795 30.2031 343.321 30.2031 cv
342.808 30.2031 342.353 30.4224 342.019 30.605 cv
341.654 29.5903 li
cp
1 .756863 .188235 rgb
f
392.43 12.6895 mo
386.596 12.6895 381.863 16.2139 381.863 20.5674 cv
381.863 23.3838 383.856 25.8506 386.841 27.2397 cv
383.917 32.2856 li
390.763 28.332 li
391.309 28.3965 391.865 28.4419 392.43 28.4419 cv
398.271 28.4419 403 24.915 403 20.5674 cv
403 16.2139 398.271 12.6895 392.43 12.6895 cv
cp
1 .827451 .360784 rgb
f
403 20.5674 mo
403 24.915 398.271 28.4419 392.43 28.4419 cv
392.43 12.6895 li
398.271 12.6895 403 16.2139 403 20.5674 cv
cp
1 .756863 .188235 rgb
f
391.569 24.0825 mo
391.656 23.6538 391.521 23.4033 391.354 23.3838 cv
391.188 23.3579 390.423 24.0215 390.313 24.1514 cv
390.2 24.2822 389.383 24.8994 389.236 24.9824 cv
389.091 25.0645 388.745 25.3149 388.732 25.4546 cv
388.723 25.5591 388.97 25.6719 389.249 25.5386 cv
389.528 25.4092 390.155 24.9575 390.378 24.8521 cv
390.603 24.7451 391.475 24.5068 391.569 24.0825 cv
cp
.137255 .34902 .509804 rgb
f
394.176 22.8838 mo
394.312 22.894 394.591 22.9199 394.682 22.6333 cv
394.771 22.3506 394.825 22.1484 394.682 22.0532 cv
394.536 21.958 394.077 22.1484 393.662 22.1616 cv
393.559 22.1616 393.306 22.1616 392.979 22.1587 cv
393.004 22.0591 393.032 21.9805 393.069 21.9248 cv
393.262 21.604 393.313 21.1289 393.17 21.0093 cv
393.022 20.8931 392.007 20.7744 392.029 22.146 cv
391.193 22.1338 390.35 22.1309 390.278 22.1616 cv
390.278 22.1616 390.257 22.8838 390.446 22.9429 cv
390.586 22.9868 391.548 22.9355 392.047 22.9028 cv
392.082 24.0464 392.102 25.0815 391.803 25.2446 cv
391.594 25.3564 391.594 25.373 391.21 25.3252 cv
391.21 25.3252 391.254 26.0137 391.914 26.0137 cv
392.575 26.0137 392.721 25.0176 392.766 24.1514 cv
392.786 23.7358 392.814 23.2803 392.854 22.8804 cv
393.366 22.8784 394.089 22.8774 394.176 22.8838 cv
cp
f
396.058 21.437 mo
394.5 20.7959 392.441 18.0005 392.441 18.0005 cv
392.486 19.481 390.076 21.4487 389.16 21.7104 cv
388.239 21.9707 387.804 22.3149 387.873 22.4951 cv
387.948 22.6724 388.575 22.5522 389.617 22.0273 cv
390.659 21.5044 392.754 19.7417 392.754 19.7417 cv
394.995 22.2769 395.857 22.4922 396.386 22.5708 cv
396.909 22.6479 397.715 22.3271 397.715 22.3271 cv
397.715 22.3271 397.613 22.0767 396.058 21.437 cv
cp
f
390.593 17.4546 mo
390.593 17.4546 390.771 18.6641 390.94 18.7935 cv
391.108 18.9233 391.656 18.5557 391.656 18.5557 cv
391.343 18.3433 391.284 17.5137 391.284 17.5137 cv
393.929 17.3481 li
393.538 18.543 li
394.008 18.8228 li
394.637 17.3706 li
394.637 17.3706 397.179 17.3594 397.369 17.3833 cv
397.562 17.4053 397.768 16.8149 397.768 16.4463 cv
397.768 16.0786 397.223 16.2798 396.875 16.4004 cv
396.529 16.5166 394.748 16.6353 394.748 16.6353 cv
395.309 15.3218 li
394.413 15.1177 393.887 15.5688 393.887 15.5688 cv
394.077 15.8413 394.03 16.7061 394.03 16.7061 cv
391.274 16.7549 li
391.333 15.2461 li
391.197 15.0625 389.597 15.6157 389.919 15.8184 cv
390.244 16.0195 390.457 16.7773 390.457 16.7773 cv
390.457 16.7773 388.273 16.6577 388.028 16.6831 cv
387.78 16.7061 387.804 16.9673 388.028 17.4546 cv
388.253 17.9385 390.593 17.4546 390.593 17.4546 cv
cp
f
393.158 23.48 mo
393.158 23.48 393.213 23.9023 393.796 24.1514 cv
394.378 24.4004 394.927 25.2549 395.016 25.5386 cv
395.108 25.8237 395.489 26.0508 395.712 25.7769 cv
395.935 25.5029 396.218 24.6431 393.158 23.48 cv
cp
f
392.854 22.8804 mo
393.366 22.8784 394.089 22.8774 394.176 22.8838 cv
394.312 22.894 394.591 22.9199 394.682 22.6333 cv
394.771 22.3506 394.825 22.1484 394.682 22.0532 cv
394.536 21.958 394.077 22.1484 393.662 22.1616 cv
393.559 22.1616 393.306 22.1616 392.979 22.1587 cv
393.004 22.0591 393.032 21.9805 393.069 21.9248 cv
393.262 21.604 393.313 21.1289 393.17 21.0093 cv
393.085 20.9424 392.725 20.8872 392.43 21.0908 cv
392.43 25.6938 li
392.66 25.3306 392.735 24.7173 392.766 24.1514 cv
392.786 23.7358 392.814 23.2803 392.854 22.8804 cv
cp
.0627451 .207843 .309804 rgb
f
396.386 22.5708 mo
396.909 22.6479 397.715 22.3271 397.715 22.3271 cv
397.715 22.3271 397.613 22.0767 396.058 21.437 cv
394.5 20.7959 392.441 18.0005 392.441 18.0005 cv
392.43 18.1318 li
392.43 20.0088 li
392.63 19.8467 392.754 19.7417 392.754 19.7417 cv
394.995 22.2769 395.857 22.4922 396.386 22.5708 cv
cp
f
393.538 18.543 mo
394.008 18.8228 li
394.637 17.3706 li
394.637 17.3706 397.179 17.3594 397.369 17.3833 cv
397.562 17.4053 397.768 16.8149 397.768 16.4463 cv
397.768 16.0786 397.223 16.2798 396.875 16.4004 cv
396.529 16.5166 394.748 16.6353 394.748 16.6353 cv
395.309 15.3218 li
394.413 15.1177 393.887 15.5688 393.887 15.5688 cv
394.077 15.8413 394.03 16.7061 394.03 16.7061 cv
392.43 16.7339 li
392.43 17.4424 li
393.929 17.3481 li
393.538 18.543 li
cp
f
393.158 23.48 mo
393.158 23.48 393.213 23.9023 393.796 24.1514 cv
394.378 24.4004 394.927 25.2549 395.016 25.5386 cv
395.108 25.8237 395.489 26.0508 395.712 25.7769 cv
395.935 25.5029 396.218 24.6431 393.158 23.48 cv
cp
f
229.929 55.1958 mo
229.929 59.4067 233.34 62.8203 237.549 62.8203 cv
278.671 62.8203 li
278.671 49.5396 li
229.929 49.5396 li
229.929 55.1958 li
.85098 .192157 .0862745 rgb
f
237.549 7.22458 mo
233.34 7.22458 229.929 10.6353 229.929 14.8501 cv
229.929 49.5396 li
279.327 49.5396 li
279.327 7.22458 li
237.549 7.22458 li
f
255.714 62.8203 mo
278.671 62.8203 li
278.671 49.5396 li
279.327 49.5396 li
279.327 7.22458 li
255.714 7.22458 li
255.714 62.8203 li
.678431 .0941176 0 rgb
f
231.583 55.3618 mo
231.673 58.584 234.308 61.1821 237.549 61.1821 cv
277.688 61.1821 li
277.688 49.5396 li
237.549 49.5396 li
234.308 49.5396 231.673 52.1363 231.583 55.3618 cv
.901961 .94902 .941176 rgb
f
278.671 62.8203 mo
255.714 62.8203 li
255.714 61.1821 li
277.688 61.1821 li
277.688 49.5396 li
278.671 49.5396 li
278.671 62.8203 li
.54902 .0862745 0 rgb
f
277.688 61.1821 mo
255.714 61.1821 li
255.714 49.5396 li
277.688 49.5396 li
277.688 61.1821 li
.733333 .862745 .815686 rgb
f
255.714 61.1821 mo
277.688 61.1821 li
277.688 49.5396 li
255.714 49.5396 li
255.714 61.1821 li
cp
.811765 .909804 .866667 rgb
f
239.781 43.79 mo
240.28 43.79 240.741 43.4116 240.741 42.772 cv
240.741 42.168 240.397 41.73 239.747 41.73 cv
238.835 41.73 li
238.835 43.79 li
239.781 43.79 li
cp
238.835 40.3936 mo
239.557 40.3936 li
240.185 40.3936 240.362 40.0498 240.362 39.481 cv
240.362 38.9365 240.03 38.6182 239.58 38.6182 cv
238.835 38.6182 li
238.835 40.3936 li
cp
235.698 43.79 mo
236.384 43.79 li
236.384 38.5815 li
235.698 38.5815 li
235.698 37.0547 li
240.113 37.0547 li
242.078 37.0547 243.014 37.7896 243.014 39.0796 cv
243.014 40.0728 242.741 40.5596 241.853 40.9136 cv
242.706 41.1514 243.416 41.7773 243.416 42.9258 cv
243.416 44.5962 242.48 45.3296 240.197 45.3296 cv
235.698 45.3296 li
235.698 43.79 li
cp
1 .827451 .360784 rgb
f
243.834 45.3296 mo
243.834 43.7788 li
244.355 43.7788 li
244.355 40.9492 li
243.846 40.9492 li
243.846 39.4102 li
246.072 39.4102 li
246.428 40.168 li
246.735 39.6006 247.042 39.1138 248.261 39.1138 cv
248.261 41.2456 li
247.197 41.2456 246.593 41.5176 246.593 42.5586 cv
246.593 43.7788 li
247.185 43.7788 li
247.185 45.3296 li
243.834 45.3296 li
cp
f
252.254 43.1758 mo
252.219 43.1152 252.053 42.8315 251.556 42.8315 cv
251.082 42.8315 250.869 43.0918 250.869 43.459 cv
250.869 43.79 251.141 44.0156 251.497 44.0156 cv
251.852 44.0156 252.147 43.8022 252.254 43.626 cv
252.254 43.1758 li
cp
248.868 39.9067 mo
249.341 39.6226 250.36 39.0674 251.448 39.0674 cv
252.869 39.0674 254.657 39.6006 254.657 41.5054 cv
254.657 43.814 li
255.367 43.814 li
255.367 45.3296 li
252.833 45.3296 li
252.55 44.7964 li
252.111 45.4004 251.378 45.5542 250.952 45.5542 cv
249.827 45.5542 248.619 44.9502 248.619 43.5762 cv
248.619 42.2397 249.744 41.3994 251.082 41.3994 cv
251.78 41.3994 252.194 41.7432 252.254 41.813 cv
252.254 41.3994 li
252.254 40.8672 251.769 40.7363 251.129 40.7363 cv
250.432 40.7363 249.816 41.0317 249.366 41.2808 cv
248.868 39.9067 li
cp
f
257.454 36.4751 mo
258.272 36.4751 258.757 37.1377 258.757 37.6812 cv
258.757 38.3325 258.295 38.8779 257.454 38.8779 cv
256.709 38.8779 256.176 38.251 256.176 37.6812 cv
256.176 37.1377 256.626 36.4751 257.454 36.4751 cv
cp
255.844 45.3296 mo
255.844 43.7788 li
256.342 43.7788 li
256.342 40.9492 li
255.844 40.9492 li
255.844 39.4102 li
258.591 39.4102 li
258.591 43.7788 li
259.159 43.7788 li
259.159 45.3296 li
255.844 45.3296 li
cp
1 .756863 .188235 rgb
f
259.752 45.3296 mo
259.752 43.7788 li
260.261 43.7788 li
260.261 37.9775 li
259.764 37.9775 li
259.764 36.4507 li
262.511 36.4507 li
262.511 43.7788 li
263.209 43.7788 li
263.209 45.3296 li
259.752 45.3296 li
cp
f
263.685 45.3296 mo
263.685 43.7788 li
264.193 43.7788 li
264.193 37.9775 li
263.697 37.9775 li
263.697 36.4507 li
266.443 36.4507 li
266.443 43.7788 li
267.142 43.7788 li
267.142 45.3296 li
263.685 45.3296 li
cp
f
271.512 41.7896 mo
271.498 41.3394 271.392 40.8428 270.635 40.8428 cv
269.913 40.8428 269.747 41.4941 269.724 41.7896 cv
271.512 41.7896 li
cp
273.558 44.5132 mo
272.682 45.271 271.736 45.542 270.505 45.542 cv
269.037 45.542 267.379 44.6074 267.379 42.335 cv
267.379 40.3936 268.776 39.2441 270.563 39.2441 cv
271.973 39.2441 273.049 39.9678 273.393 40.96 cv
273.536 41.376 273.665 42.2876 273.416 42.9624 cv
269.688 42.9624 li
269.759 43.2808 269.913 43.9326 270.907 43.9326 cv
271.31 43.9326 271.924 43.897 272.565 43.3638 cv
273.558 44.5132 li
cp
f
288.03 45.2925 mo
273.804 45.2925 li
272.069 45.2925 270.663 46.6997 270.663 48.4346 cv
270.663 59.7686 li
270.663 61.5039 272.069 62.9092 273.804 62.9092 cv
277.237 62.9092 li
275.58 67.0674 li
283.155 62.9092 li
288.03 62.9092 li
289.764 62.9092 291.17 61.5039 291.17 59.7686 cv
291.17 48.4346 li
291.17 46.6997 289.764 45.2925 288.03 45.2925 cv
cp
.137255 .34902 .509804 rgb
f
288.03 45.2925 mo
280.917 45.2925 li
280.917 64.1372 li
283.155 62.9092 li
288.03 62.9092 li
289.764 62.9092 291.17 61.5039 291.17 59.7686 cv
291.17 48.4346 li
291.17 46.6997 289.764 45.2925 288.03 45.2925 cv
cp
.0627451 .207843 .309804 rgb
f
286.078 56.3906 mo
280.989 59.2822 li
280.989 48.9185 li
286.078 51.8105 li
286.078 56.3906 li
cp
1 .756863 .188235 rgb
f
286.078 56.3906 mo
287.896 56.3906 li
287.896 51.8105 li
286.078 51.8105 li
286.078 56.3906 li
cp
.678431 .0941176 0 rgb
f
278.455 56.4038 mo
278.316 56.3765 li
277.473 56.0273 276.902 55.104 276.902 54.0781 cv
276.902 53.1025 277.41 52.2227 278.194 51.835 cv
278.376 51.748 278.591 51.8208 278.681 52 cv
278.769 52.1792 278.695 52.3945 278.516 52.4834 cv
277.977 52.7495 277.627 53.376 277.627 54.0781 cv
277.627 54.8154 278.016 55.4702 278.592 55.708 cv
278.777 55.7847 278.864 55.9961 278.787 56.1812 cv
278.73 56.3198 278.597 56.4038 278.455 56.4038 cv
cp
1 .827451 .360784 rgb
f
277.955 58.1479 mo
277.816 58.1206 li
276.333 57.5078 275.336 55.8755 275.336 54.0586 cv
275.336 52.3286 276.228 50.7705 277.607 50.0908 cv
277.784 50.0039 278.004 50.0757 278.092 50.2559 cv
278.181 50.4346 278.106 50.6504 277.928 50.7393 cv
276.793 51.2988 276.06 52.603 276.06 54.0586 cv
276.06 55.5864 276.876 56.9502 278.094 57.4531 cv
278.277 57.5288 278.364 57.7402 278.288 57.9253 cv
278.231 58.064 278.097 58.1479 277.955 58.1479 cv
cp
f
277.955 58.1479 mo
277.816 58.1206 li
276.333 57.5078 275.336 55.8755 275.336 54.0586 cv
275.336 52.3286 276.228 50.7705 277.607 50.0908 cv
277.784 50.0039 278.004 50.0757 278.092 50.2559 cv
278.181 50.4346 278.106 50.6504 277.928 50.7393 cv
276.793 51.2988 276.06 52.603 276.06 54.0586 cv
276.06 55.5864 276.876 56.9502 278.094 57.4531 cv
278.277 57.5288 278.364 57.7402 278.288 57.9253 cv
278.231 58.064 278.097 58.1479 277.955 58.1479 cv
cp
f
279.48 59.2822 mo
280.989 59.2822 li
280.989 48.9185 li
279.48 48.9185 li
279.48 59.2822 li
cp
.85098 .192157 .0862745 rgb
f
276.528 59.2783 mo
276.347 59.2305 li
274.671 58.2896 273.587 56.2793 273.587 54.1104 cv
273.587 51.9219 274.684 49.9048 276.382 48.9707 cv
276.562 48.8696 276.787 48.9365 276.887 49.1167 cv
276.985 49.2964 276.92 49.522 276.74 49.6216 cv
275.275 50.4268 274.331 52.189 274.331 54.1104 cv
274.331 56.0151 275.265 57.7705 276.71 58.583 cv
276.89 58.6831 276.952 58.9097 276.852 59.0889 cv
276.784 59.2104 276.658 59.2783 276.528 59.2783 cv
cp
1 .827451 .360784 rgb
f
240.34 14.7871 mo
240.34 15.2778 239.939 15.6777 239.448 15.6777 cv
238.957 15.6777 238.558 15.2778 238.558 14.7871 cv
238.558 14.2964 238.957 13.895 239.448 13.895 cv
239.939 13.895 240.34 14.2964 240.34 14.7871 cv
cp
.643137 .847059 .901961 rgb
f
243.261 14.7871 mo
243.261 15.2778 242.86 15.6777 242.367 15.6777 cv
241.874 15.6777 241.476 15.2778 241.476 14.7871 cv
241.476 14.2964 241.874 13.895 242.367 13.895 cv
242.86 13.895 243.261 14.2964 243.261 14.7871 cv
cp
f
249.096 14.7871 mo
249.096 15.2778 248.696 15.6777 248.204 15.6777 cv
247.714 15.6777 247.313 15.2778 247.313 14.7871 cv
247.313 14.2964 247.714 13.895 248.204 13.895 cv
248.696 13.895 249.096 14.2964 249.096 14.7871 cv
cp
f
254.935 14.7871 mo
254.935 15.2778 254.535 15.6777 254.042 15.6777 cv
253.551 15.6777 253.152 15.2778 253.152 14.7871 cv
253.152 14.2964 253.551 13.895 254.042 13.895 cv
254.535 13.895 254.935 14.2964 254.935 14.7871 cv
cp
f
257.854 14.7871 mo
257.854 15.2778 257.454 15.6777 256.961 15.6777 cv
256.471 15.6777 256.07 15.2778 256.07 14.7871 cv
256.07 14.2964 256.471 13.895 256.961 13.895 cv
257.454 13.895 257.854 14.2964 257.854 14.7871 cv
cp
f
260.771 14.7871 mo
260.771 15.2778 260.373 15.6777 259.88 15.6777 cv
259.388 15.6777 258.988 15.2778 258.988 14.7871 cv
258.988 14.2964 259.388 13.895 259.88 13.895 cv
260.373 13.895 260.771 14.2964 260.771 14.7871 cv
cp
f
266.609 14.7871 mo
266.609 15.2778 266.211 15.6777 265.719 15.6777 cv
265.226 15.6777 264.827 15.2778 264.827 14.7871 cv
264.827 14.2964 265.226 13.895 265.719 13.895 cv
266.211 13.895 266.609 14.2964 266.609 14.7871 cv
cp
f
240.34 17.7051 mo
240.34 18.1978 239.939 18.5962 239.448 18.5962 cv
238.957 18.5962 238.558 18.1978 238.558 17.7051 cv
238.558 17.2124 238.957 16.8169 239.448 16.8169 cv
239.939 16.8169 240.34 17.2124 240.34 17.7051 cv
cp
f
249.096 17.7051 mo
249.096 18.1978 248.696 18.5962 248.204 18.5962 cv
247.714 18.5962 247.313 18.1978 247.313 17.7051 cv
247.313 17.2124 247.714 16.8169 248.204 16.8169 cv
248.696 16.8169 249.096 17.2124 249.096 17.7051 cv
cp
f
257.854 17.7051 mo
257.854 18.1978 257.454 18.5962 256.961 18.5962 cv
256.471 18.5962 256.07 18.1978 256.07 17.7051 cv
256.07 17.2124 256.471 16.8169 256.961 16.8169 cv
257.454 16.8169 257.854 17.2124 257.854 17.7051 cv
cp
f
260.771 17.7051 mo
260.771 18.1978 260.373 18.5962 259.88 18.5962 cv
259.388 18.5962 258.988 18.1978 258.988 17.7051 cv
258.988 17.2124 259.388 16.8169 259.88 16.8169 cv
260.373 16.8169 260.771 17.2124 260.771 17.7051 cv
cp
f
266.609 17.7051 mo
266.609 18.1978 266.211 18.5962 265.719 18.5962 cv
265.226 18.5962 264.827 18.1978 264.827 17.7051 cv
264.827 17.2124 265.226 16.8169 265.719 16.8169 cv
266.211 16.8169 266.609 17.2124 266.609 17.7051 cv
cp
f
269.527 17.7051 mo
269.527 18.1978 269.13 18.5962 268.637 18.5962 cv
268.146 18.5962 267.746 18.1978 267.746 17.7051 cv
267.746 17.2124 268.146 16.8169 268.637 16.8169 cv
269.13 16.8169 269.527 17.2124 269.527 17.7051 cv
cp
f
269.527 14.7842 mo
269.527 15.2769 269.13 15.6753 268.637 15.6753 cv
268.146 15.6753 267.746 15.2769 267.746 14.7842 cv
267.746 14.2905 268.146 13.896 268.637 13.896 cv
269.13 13.896 269.527 14.2905 269.527 14.7842 cv
cp
f
272.448 17.7051 mo
272.448 18.1978 272.05 18.5962 271.557 18.5962 cv
271.064 18.5962 270.663 18.1978 270.663 17.7051 cv
270.663 17.2124 271.064 16.8169 271.557 16.8169 cv
272.05 16.8169 272.448 17.2124 272.448 17.7051 cv
cp
f
240.34 23.5454 mo
240.34 24.0342 239.939 24.4351 239.448 24.4351 cv
238.957 24.4351 238.558 24.0342 238.558 23.5454 cv
238.558 23.0527 238.957 22.6543 239.448 22.6543 cv
239.939 22.6543 240.34 23.0527 240.34 23.5454 cv
cp
f
246.176 23.5454 mo
246.176 24.0342 245.776 24.4351 245.287 24.4351 cv
244.794 24.4351 244.395 24.0342 244.395 23.5454 cv
244.395 23.0527 244.794 22.6543 245.287 22.6543 cv
245.776 22.6543 246.176 23.0527 246.176 23.5454 cv
cp
f
252.016 23.5454 mo
252.016 24.0342 251.616 24.4351 251.125 24.4351 cv
250.633 24.4351 250.234 24.0342 250.234 23.5454 cv
250.234 23.0527 250.633 22.6543 251.125 22.6543 cv
251.616 22.6543 252.016 23.0527 252.016 23.5454 cv
cp
f
254.935 23.5454 mo
254.935 24.0342 254.535 24.4351 254.042 24.4351 cv
253.551 24.4351 253.152 24.0342 253.152 23.5454 cv
253.152 23.0527 253.551 22.6543 254.042 22.6543 cv
254.535 22.6543 254.935 23.0527 254.935 23.5454 cv
cp
f
263.687 23.5454 mo
263.687 24.0342 263.291 24.4351 262.799 24.4351 cv
262.307 24.4351 261.908 24.0342 261.908 23.5454 cv
261.908 23.0527 262.307 22.6543 262.799 22.6543 cv
263.291 22.6543 263.687 23.0527 263.687 23.5454 cv
cp
f
266.609 23.5454 mo
266.609 24.0342 266.211 24.4351 265.719 24.4351 cv
265.226 24.4351 264.827 24.0342 264.827 23.5454 cv
264.827 23.0527 265.226 22.6543 265.719 22.6543 cv
266.211 22.6543 266.609 23.0527 266.609 23.5454 cv
cp
f
269.527 23.5454 mo
269.527 24.0342 269.13 24.4351 268.637 24.4351 cv
268.146 24.4351 267.746 24.0342 267.746 23.5454 cv
267.746 23.0527 268.146 22.6543 268.637 22.6543 cv
269.13 22.6543 269.527 23.0527 269.527 23.5454 cv
cp
f
272.448 23.5454 mo
272.448 24.0342 272.05 24.4351 271.557 24.4351 cv
271.064 24.4351 270.663 24.0342 270.663 23.5454 cv
270.663 23.0527 271.064 22.6543 271.557 22.6543 cv
272.05 22.6543 272.448 23.0527 272.448 23.5454 cv
cp
f
243.261 26.4624 mo
243.261 26.9551 242.86 27.3516 242.367 27.3516 cv
241.874 27.3516 241.476 26.9551 241.476 26.4624 cv
241.476 25.9678 241.874 25.5698 242.367 25.5698 cv
242.86 25.5698 243.261 25.9678 243.261 26.4624 cv
cp
f
246.176 26.4624 mo
246.176 26.9551 245.776 27.3516 245.287 27.3516 cv
244.794 27.3516 244.395 26.9551 244.395 26.4624 cv
244.395 25.9678 244.794 25.5698 245.287 25.5698 cv
245.776 25.5698 246.176 25.9678 246.176 26.4624 cv
cp
f
252.016 26.4624 mo
252.016 26.9551 251.616 27.3516 251.125 27.3516 cv
250.633 27.3516 250.234 26.9551 250.234 26.4624 cv
250.234 25.9678 250.633 25.5698 251.125 25.5698 cv
251.616 25.5698 252.016 25.9678 252.016 26.4624 cv
cp
f
254.935 26.4624 mo
254.935 26.9551 254.535 27.3516 254.042 27.3516 cv
253.551 27.3516 253.152 26.9551 253.152 26.4624 cv
253.152 25.9678 253.551 25.5698 254.042 25.5698 cv
254.535 25.5698 254.935 25.9678 254.935 26.4624 cv
cp
f
257.854 26.4624 mo
257.854 26.9551 257.454 27.3516 256.961 27.3516 cv
256.471 27.3516 256.07 26.9551 256.07 26.4624 cv
256.07 25.9678 256.471 25.5698 256.961 25.5698 cv
257.454 25.5698 257.854 25.9678 257.854 26.4624 cv
cp
f
266.609 26.4624 mo
266.609 26.9551 266.211 27.3516 265.719 27.3516 cv
265.226 27.3516 264.827 26.9551 264.827 26.4624 cv
264.827 25.9678 265.226 25.5698 265.719 25.5698 cv
266.211 25.5698 266.609 25.9678 266.609 26.4624 cv
cp
f
269.527 26.4624 mo
269.527 26.9551 269.13 27.3516 268.637 27.3516 cv
268.146 27.3516 267.746 26.9551 267.746 26.4624 cv
267.746 25.9678 268.146 25.5698 268.637 25.5698 cv
269.13 25.5698 269.527 25.9678 269.527 26.4624 cv
cp
f
240.34 29.3779 mo
240.34 29.8716 239.939 30.2725 239.448 30.2725 cv
238.957 30.2725 238.558 29.8716 238.558 29.3779 cv
238.558 28.8882 238.957 28.4897 239.448 28.4897 cv
239.939 28.4897 240.34 28.8882 240.34 29.3779 cv
cp
f
243.261 29.3779 mo
243.261 29.8716 242.86 30.2725 242.367 30.2725 cv
241.874 30.2725 241.476 29.8716 241.476 29.3779 cv
241.476 28.8882 241.874 28.4897 242.367 28.4897 cv
242.86 28.4897 243.261 28.8882 243.261 29.3779 cv
cp
f
257.854 29.3779 mo
257.854 29.8716 257.454 30.2725 256.961 30.2725 cv
256.471 30.2725 256.07 29.8716 256.07 29.3779 cv
256.07 28.8882 256.471 28.4897 256.961 28.4897 cv
257.454 28.4897 257.854 28.8882 257.854 29.3779 cv
cp
f
260.771 29.3779 mo
260.771 29.8716 260.373 30.2725 259.88 30.2725 cv
259.388 30.2725 258.988 29.8716 258.988 29.3779 cv
258.988 28.8882 259.388 28.4897 259.88 28.4897 cv
260.373 28.4897 260.771 28.8882 260.771 29.3779 cv
cp
f
269.527 29.3779 mo
269.527 29.8716 269.13 30.2725 268.637 30.2725 cv
268.146 30.2725 267.746 29.8716 267.746 29.3779 cv
267.746 28.8882 268.146 28.4897 268.637 28.4897 cv
269.13 28.4897 269.527 28.8882 269.527 29.3779 cv
cp
f
43.3862 266.787 mo
41.6563 266.787 40.252 265.382 40.252 263.65 cv
46.5225 263.65 li
46.5205 265.382 45.1182 266.787 43.3862 266.787 cv
cp
.909804 .0980392 .0980392 rgb
f
42.6416 221.008 mo
10.2554 221.008 li
6.30566 221.008 3.10449 224.209 3.10449 228.16 cv
3.10449 253.963 li
3.10449 257.913 6.30566 261.114 10.2554 261.114 cv
18.0708 261.114 li
14.2979 270.581 li
31.5425 261.114 li
42.6416 261.114 li
46.5913 261.114 49.7925 257.913 49.7925 253.963 cv
49.7925 228.16 li
49.7925 224.209 46.5913 221.008 42.6416 221.008 cv
cp
.137255 .34902 .509804 rgb
f
42.6416 221.008 mo
26.4487 221.008 li
26.4487 263.911 li
31.5425 261.114 li
42.6416 261.114 li
46.5913 261.114 49.7925 257.913 49.7925 253.963 cv
49.7925 228.16 li
49.7925 224.209 46.5913 221.008 42.6416 221.008 cv
cp
.0627451 .207843 .309804 rgb
f
66.8882 246.923 mo
65.8843 246.923 li
65.8843 224.089 li
53.6528 224.089 li
53.6528 223.085 li
66.8882 223.085 li
66.8882 246.923 li
cp
.372549 .690196 .811765 rgb
f
32.0747 282.805 mo
5.22607 282.805 li
5.22607 265.994 li
6.22949 265.994 li
6.22949 281.801 li
32.0747 281.801 li
32.0747 282.805 li
cp
.643137 .847059 .901961 rgb
f
7.76025 269.233 mo
5.72754 266.669 li
3.69629 269.233 li
2.91016 268.609 li
5.72754 265.054 li
8.54639 268.609 li
7.76025 269.233 li
cp
f
66.3862 248.609 mo
63.5679 245.054 li
64.355 244.431 li
66.3862 246.994 li
68.418 244.431 li
69.2051 245.054 li
66.3862 248.609 li
cp
.372549 .690196 .811765 rgb
f
29.8296 285.121 mo
29.2065 284.334 li
31.769 282.303 li
29.2065 280.271 li
29.8296 279.485 li
33.3848 282.303 li
29.8296 285.121 li
cp
.643137 .847059 .901961 rgb
f
55.8745 226.407 mo
52.3193 223.587 li
55.8745 220.77 li
56.498 221.556 li
53.9341 223.587 li
56.498 225.621 li
55.8745 226.407 li
cp
.372549 .690196 .811765 rgb
f
18.6108 240.905 mo
17.0962 235.966 li
15.6094 240.905 li
18.6108 240.905 li
cp
17.7612 248.208 mo
17.7612 245.209 li
19.9321 245.209 li
19.4575 243.652 li
14.7622 243.652 li
14.2808 245.209 li
16.0645 245.209 li
16.0645 248.208 li
8.79004 248.208 li
8.79004 245.209 li
10.3462 245.209 li
13.4341 235.163 li
12.499 235.163 li
12.499 232.211 li
21.2891 232.211 li
25.3345 245.209 li
26.9414 245.209 li
26.9414 248.208 li
17.7612 248.208 li
cp
.85098 .192157 .0862745 rgb
f
34.6646 244.045 mo
34.5947 243.926 34.2754 243.38 33.312 243.38 cv
32.3955 243.38 31.9868 243.883 31.9868 244.595 cv
31.9868 245.232 32.5088 245.669 33.1968 245.669 cv
33.8828 245.669 34.4551 245.256 34.6646 244.913 cv
34.6646 244.045 li
cp
28.1191 237.725 mo
29.0303 237.177 31.0015 236.101 33.1074 236.101 cv
35.8535 236.101 39.3091 237.133 39.3091 240.816 cv
39.3091 245.279 li
40.6807 245.279 li
40.6807 248.208 li
35.7847 248.208 li
35.2334 247.176 li
34.3862 248.346 32.9722 248.641 32.1445 248.641 cv
29.9692 248.641 27.6362 247.477 27.6362 244.82 cv
27.6362 242.239 29.8115 240.612 32.3955 240.612 cv
33.7471 240.612 34.5493 241.272 34.6646 241.408 cv
34.6646 240.612 li
34.6646 239.58 33.7256 239.328 32.4893 239.328 cv
31.1396 239.328 29.9492 239.901 29.0771 240.38 cv
28.1191 237.725 li
cp
.678431 .0941176 0 rgb
f
44.084 245.209 mo
56.2046 245.209 66.0303 252.529 66.0303 261.563 cv
66.0303 267.416 61.8901 272.534 55.6904 275.423 cv
58.0762 283.769 li
47.5542 277.692 li
46.4214 277.827 45.2681 277.915 44.084 277.915 cv
31.9663 277.915 22.1426 270.592 22.1426 261.563 cv
22.1426 252.529 31.9663 245.209 44.084 245.209 cv
cp
1 .827451 .360784 rgb
f
44.0864 245.209 mo
44.0864 277.915 li
45.27 277.915 46.4214 277.827 47.5542 277.692 cv
58.0762 283.769 li
55.6904 275.423 li
61.8901 272.534 66.0303 267.416 66.0303 261.563 cv
66.0303 252.529 56.2046 245.209 44.0864 245.209 cv
cp
1 .756863 .188235 rgb
f
57.2363 262.46 mo
57.1372 261.164 56.8662 260.031 56.4331 259.052 cv
56.4229 259.006 li
56.3257 258.714 56.2065 258.513 56.085 258.352 cv
56.0649 258.309 li
56.0283 258.28 li
55.8101 258.017 55.5854 257.901 55.4375 257.87 cv
55.1846 257.816 54.9355 257.887 54.7598 258.064 cv
54.5474 258.271 54.4663 258.582 54.5352 258.914 cv
54.6382 259.417 55.0713 259.874 55.4941 260.313 cv
55.9072 260.746 56.2915 261.154 56.3198 261.534 cv
56.3301 261.851 56.3257 262.167 56.2993 262.48 cv
56.231 263.738 55.8442 265.211 54.9741 265.564 cv
54.875 265.603 54.7656 265.629 54.6523 265.646 cv
54.5088 265.662 li
54.2681 265.66 li
54.0596 265.642 53.8247 265.564 53.6812 265.463 cv
53.3271 265.227 52.8677 264.633 52.7422 264.076 cv
52.5864 263.326 52.5259 262.569 52.5562 261.764 cv
52.5742 261.616 52.5884 261.457 52.6025 261.3 cv
52.8271 260.272 52.8413 259.617 52.6372 259.307 cv
52.5176 259.122 52.3315 259.046 52.0908 259.09 cv
51.5586 259.192 51.5869 260.083 51.6133 260.867 cv
51.6172 260.969 51.6172 261.067 51.6216 261.162 cv
51.4941 262.013 51.3018 262.794 50.9033 263.488 cv
50.6221 263.958 49.9258 264.381 49.5313 264.503 cv
49.064 264.638 48.6997 264.56 48.2847 264.26 cv
47.4634 263.615 46.9536 262.345 46.561 261.191 cv
46.5044 261.007 li
46.4902 260.408 46.4941 259.833 46.498 259.333 cv
46.5161 257.518 46.5264 256.324 45.7798 256.05 cv
45.3105 255.88 44.9482 255.898 44.6792 256.103 cv
44.3999 256.312 44.2461 256.706 44.2056 257.307 cv
44.1733 257.821 44.4644 258.462 44.7764 259.14 cv
45.1201 259.901 45.5024 260.751 45.4946 261.563 cv
45.4761 261.7 45.4663 261.842 45.4458 261.985 cv
45.2153 263.602 44.7378 264.958 44.0215 266.02 cv
42.6172 268.24 40.3125 269.3 37.7021 268.943 cv
36.9399 268.856 36.4653 268.769 35.8442 268.604 cv
35.2422 268.451 34.6909 268.232 34.2012 267.942 cv
33.3394 267.461 32.2495 266.402 32.0435 265.004 cv
31.8418 263.615 31.9604 262.093 32.373 260.716 cv
32.5562 260.071 32.811 259.368 33.1523 258.582 cv
33.2339 258.402 li
33.5195 257.778 33.8149 257.131 34.249 256.613 cv
34.2417 256.426 li
34.0576 256.41 li
33.4619 256.846 33.0127 257.473 32.5308 258.193 cv
32.1162 258.825 31.7397 259.521 31.3809 260.314 cv
30.7051 261.892 30.4033 263.617 30.5127 265.294 cv
30.5664 267.314 32.0503 269.129 33.4951 270.035 cv
34.0776 270.424 34.7373 270.713 35.5669 270.942 cv
35.8354 271.021 36.1245 271.095 36.4312 271.16 cv
36.8438 271.249 37.2715 271.318 37.6641 271.366 cv
39.23 271.515 40.7173 271.264 42.0952 270.618 cv
43.8574 269.475 44.5576 268.752 45.3652 267.235 cv
45.7495 266.522 45.9863 265.501 46.1743 264.678 cv
46.2109 264.522 li
46.2915 264.165 46.332 263.84 46.3789 263.515 cv
46.6416 264.144 47 264.737 47.5322 265.254 cv
47.8477 265.53 48.2139 265.728 48.5884 265.833 cv
48.7988 265.883 48.979 265.912 49.2153 265.916 cv
49.3857 265.921 49.604 265.901 49.8164 265.858 cv
50.6196 265.686 51.2026 265.111 51.5527 264.66 cv
51.7207 265.348 52.0928 266.24 52.9268 266.751 cv
53.165 266.89 53.4102 266.992 53.6689 267.049 cv
53.8491 267.085 54.0332 267.101 54.2378 267.103 cv
54.5068 267.095 li
54.8486 267.05 li
55.0674 267 55.2759 266.929 55.4883 266.823 cv
56.4492 266.329 56.8623 265.319 57.02 264.758 cv
57.2544 263.91 57.2588 263.088 57.2363 262.46 cv
cp
.137255 .34902 .509804 rgb
f
49.8892 255.767 mo
50.5894 255.919 51.2813 255.471 51.4331 254.77 cv
51.583 254.07 51.1318 253.378 50.4336 253.227 cv
49.7334 253.079 49.0415 253.525 48.8916 254.222 cv
48.7402 254.923 49.187 255.618 49.8892 255.767 cv
cp
f
53.1836 255.292 mo
53.8047 255.425 54.4136 255.032 54.5474 254.412 cv
54.6826 253.792 54.2881 253.179 53.665 253.043 cv
53.0479 252.912 52.4351 253.307 52.2993 253.928 cv
52.168 254.547 52.5645 255.158 53.1836 255.292 cv
cp
f
51.603 252.333 mo
52.3032 252.485 52.9976 252.038 53.147 251.337 cv
53.2988 250.634 52.8516 249.945 52.1494 249.793 cv
51.4517 249.642 50.7573 250.088 50.6055 250.79 cv
50.4541 251.493 50.9009 252.18 51.603 252.333 cv
cp
f
45.3652 267.235 mo
45.7495 266.522 45.9863 265.501 46.1743 264.678 cv
46.2109 264.522 li
46.2915 264.165 46.332 263.84 46.3789 263.515 cv
46.6416 264.144 47 264.737 47.5322 265.254 cv
47.8477 265.53 48.2139 265.728 48.5884 265.833 cv
48.7988 265.883 48.979 265.912 49.2153 265.916 cv
49.3857 265.921 49.604 265.901 49.8164 265.858 cv
50.6196 265.686 51.2026 265.111 51.5527 264.66 cv
51.7207 265.348 52.0928 266.24 52.9268 266.751 cv
53.165 266.89 53.4102 266.992 53.6689 267.049 cv
53.8491 267.085 54.0332 267.101 54.2378 267.103 cv
54.5068 267.095 li
54.8486 267.05 li
55.0674 267 55.2759 266.929 55.4883 266.823 cv
56.4492 266.329 56.8623 265.319 57.02 264.758 cv
57.2544 263.91 57.2588 263.088 57.2363 262.46 cv
57.1372 261.164 56.8662 260.031 56.4331 259.052 cv
56.4229 259.006 li
56.3257 258.714 56.2065 258.513 56.085 258.352 cv
56.0649 258.309 li
56.0283 258.28 li
55.8101 258.017 55.5854 257.901 55.4375 257.87 cv
55.1846 257.816 54.9355 257.887 54.7598 258.064 cv
54.5474 258.271 54.4663 258.582 54.5352 258.914 cv
54.6382 259.417 55.0713 259.874 55.4941 260.313 cv
55.9072 260.746 56.2915 261.154 56.3198 261.534 cv
56.3301 261.851 56.3257 262.167 56.2993 262.48 cv
56.231 263.738 55.8442 265.211 54.9741 265.564 cv
54.875 265.603 54.7656 265.629 54.6523 265.646 cv
54.5088 265.662 li
54.2681 265.66 li
54.0596 265.642 53.8247 265.564 53.6812 265.463 cv
53.3271 265.227 52.8677 264.633 52.7422 264.076 cv
52.5864 263.326 52.5259 262.569 52.5562 261.764 cv
52.5742 261.616 52.5884 261.457 52.6025 261.3 cv
52.8271 260.272 52.8413 259.617 52.6372 259.307 cv
52.5176 259.122 52.3315 259.046 52.0908 259.09 cv
51.5586 259.192 51.5869 260.083 51.6133 260.867 cv
51.6172 260.969 51.6172 261.067 51.6216 261.162 cv
51.4941 262.013 51.3018 262.794 50.9033 263.488 cv
50.6221 263.958 49.9258 264.381 49.5313 264.503 cv
49.064 264.638 48.6997 264.56 48.2847 264.26 cv
47.4634 263.615 46.9536 262.345 46.561 261.191 cv
46.5044 261.007 li
46.4902 260.408 46.4941 259.833 46.498 259.333 cv
46.5161 257.518 46.5264 256.324 45.7798 256.05 cv
45.3105 255.88 44.9482 255.898 44.6792 256.103 cv
44.3999 256.312 44.2461 256.706 44.2056 257.307 cv
44.1733 257.821 44.4644 258.462 44.7764 259.14 cv
45.1201 259.901 45.5024 260.751 45.4946 261.563 cv
45.4761 261.7 45.4663 261.842 45.4458 261.985 cv
45.2212 263.55 44.7622 264.865 44.0864 265.911 cv
44.0864 269.07 li
44.584 268.555 44.9604 267.996 45.3652 267.235 cv
cp
.0627451 .207843 .309804 rgb
f
50.4336 253.227 mo
49.7334 253.079 49.0415 253.525 48.8916 254.222 cv
48.7402 254.923 49.187 255.618 49.8892 255.767 cv
50.5894 255.919 51.2813 255.471 51.4331 254.77 cv
51.583 254.07 51.1318 253.378 50.4336 253.227 cv
cp
f
53.665 253.043 mo
53.0479 252.912 52.4351 253.307 52.2993 253.928 cv
52.168 254.547 52.5645 255.158 53.1836 255.292 cv
53.8047 255.425 54.4136 255.032 54.5474 254.412 cv
54.6826 253.792 54.2881 253.179 53.665 253.043 cv
cp
f
53.147 251.337 mo
53.2988 250.634 52.8516 249.945 52.1494 249.793 cv
51.4517 249.642 50.7573 250.088 50.6055 250.79 cv
50.4541 251.493 50.9009 252.18 51.603 252.333 cv
52.3032 252.485 52.9976 252.038 53.147 251.337 cv
cp
f
146.29 256.058 mo
147.502 255.861 147.676 259.708 148.079 261.699 cv
148.633 264.45 147.42 264.875 144.529 267.683 cv
142.162 269.983 138.447 272.305 138.447 272.305 cv
136.113 273.253 132.72 274.083 130.572 275.625 cv
128.988 276.761 126.936 278.58 126.936 278.58 cv
116.002 268.523 li
116.002 268.523 118.315 264.736 117.919 261.888 cv
116.855 254.255 116.803 252.241 117.25 249.922 cv
118.121 245.441 118.573 242.402 119.906 240.077 cv
121.239 237.75 122.548 233.462 123.614 234.401 cv
124.679 235.334 124.603 238.241 122.972 240.883 cv
122.972 240.883 122.093 246.576 121.247 248.405 cv
121.247 248.405 125.226 240.724 126.255 238.899 cv
127.285 237.074 133.564 234.406 135.33 233.582 cv
137.094 232.753 137.348 235.592 135.352 236.885 cv
133.358 238.176 129.749 240.043 129.749 240.043 cv
129.749 240.043 128.762 244.449 126.146 247.285 cv
126.146 247.285 133.555 240.325 134.756 240.213 cv
135.958 240.096 143.388 240.655 143.605 242.078 cv
143.822 243.5 140.754 245.562 135.343 244.149 cv
135.343 244.149 131.715 249.611 129.082 251.65 cv
129.082 251.65 135.18 247.632 136.346 247.445 cv
137.514 247.256 142.526 248.841 143.812 249.673 cv
145.097 250.507 146.141 253.439 146.678 255.161 cv
147.212 256.879 144.466 256.373 142.343 252.794 cv
142.343 252.794 140.058 252.832 136.704 252.042 cv
136.704 252.042 133.955 257.256 132.451 258.855 cv
132.451 258.855 134.804 263.785 137.851 265.318 cv
137.851 265.318 140.858 263.268 144.076 261.957 cv
144.076 261.957 143.956 256.434 146.29 256.058 cv
cp
.956863 .713726 .505882 rgb
f
129.997 278.25 mo
127.285 281.482 li
112.839 269.347 li
115.553 266.118 li
129.997 278.25 li
cp
.721569 .901961 .909804 rgb
f
129.198 280.496 mo
122.241 288.781 li
106.462 275.534 li
113.427 267.247 li
129.198 280.496 li
cp
.137255 .34902 .509804 rgb
f
147.209 249.833 mo
145.996 250.028 145.824 246.182 145.42 244.192 cv
144.867 241.441 146.079 241.016 148.971 238.207 cv
151.337 235.909 155.053 233.585 155.053 233.585 cv
157.387 232.637 160.78 231.809 162.927 230.266 cv
164.511 229.128 166.564 227.312 166.564 227.312 cv
177.499 237.371 li
177.499 237.371 175.185 241.155 175.581 244.003 cv
176.645 251.635 176.698 253.651 176.249 255.968 cv
175.379 260.451 174.926 263.49 173.594 265.814 cv
172.261 268.14 170.952 272.429 169.886 271.49 cv
168.82 270.556 168.898 267.653 170.527 265.008 cv
170.527 265.008 171.407 259.315 172.253 257.486 cv
172.253 257.486 168.273 265.166 167.245 266.992 cv
166.215 268.817 159.936 271.485 158.17 272.309 cv
156.406 273.137 156.153 270.297 158.148 269.005 cv
160.141 267.714 163.75 265.848 163.75 265.848 cv
163.75 265.848 164.738 261.442 167.354 258.605 cv
167.354 258.605 159.944 265.567 158.745 265.68 cv
157.543 265.794 150.112 265.236 149.894 263.813 cv
149.678 262.392 152.745 260.329 158.156 261.743 cv
158.156 261.743 161.785 256.28 164.418 254.242 cv
164.418 254.242 158.32 258.259 157.154 258.446 cv
155.986 258.634 150.973 257.05 149.688 256.217 cv
148.403 255.383 147.358 252.452 146.822 250.73 cv
146.288 249.012 149.033 249.519 151.157 253.096 cv
151.157 253.096 153.442 253.06 156.795 253.847 cv
156.795 253.847 159.544 248.634 161.048 247.036 cv
161.048 247.036 158.696 242.108 155.649 240.574 cv
155.649 240.574 152.642 242.622 149.423 243.934 cv
149.423 243.934 149.544 249.46 147.209 249.833 cv
.956863 .713726 .505882 rgb
f
157.586 272.458 mo
157.043 272.458 156.749 271.99 156.747 271.371 cv
156.746 270.613 157.185 269.629 158.148 269.005 cv
160.141 267.714 163.75 265.848 163.75 265.848 cv
163.75 265.848 164.738 261.442 167.354 258.605 cv
167.354 258.605 li
167.354 258.605 li
167.354 258.605 159.944 265.567 158.745 265.68 cv
158.644 265.69 158.499 265.695 158.318 265.695 cv
156.347 265.695 150.094 265.116 149.894 263.813 cv
149.887 263.766 149.883 263.719 149.883 263.671 cv
149.882 262.605 151.618 261.268 154.723 261.268 cv
155.728 261.268 156.876 261.408 158.156 261.743 cv
158.156 261.743 161.785 256.28 164.418 254.242 cv
164.418 254.242 li
164.418 254.242 li
164.418 254.242 158.32 258.259 157.154 258.446 cv
157.09 258.456 157.013 258.461 156.926 258.461 cv
155.443 258.461 150.902 257.004 149.688 256.217 cv
148.403 255.383 147.358 252.452 146.822 250.73 cv
146.776 250.582 146.754 250.451 146.754 250.336 cv
146.755 250.084 146.861 249.915 147.046 249.834 cv
147.046 249.834 li
147.046 249.834 li
145.98 249.673 145.805 246.089 145.42 244.192 cv
145.333 243.757 145.29 243.38 145.29 243.042 cv
145.293 241.247 146.537 240.572 148.971 238.207 cv
151.337 235.909 155.053 233.585 155.053 233.585 cv
157.387 232.637 160.78 231.809 162.927 230.266 cv
164.511 229.128 166.564 227.312 166.564 227.312 cv
177.499 237.371 li
177.499 237.371 175.533 240.587 175.535 243.321 cv
175.535 243.553 175.55 243.781 175.581 244.003 cv
176.245 248.766 176.515 251.341 176.516 253.168 cv
176.516 254.268 176.418 255.097 176.249 255.968 cv
175.379 260.451 174.926 263.49 173.594 265.814 cv
172.389 267.916 171.204 271.622 170.2 271.622 cv
170.093 271.622 169.988 271.58 169.886 271.49 cv
169.426 271.087 169.179 270.317 169.178 269.359 cv
169.176 268.098 169.601 266.511 170.527 265.008 cv
170.527 265.008 171.407 259.315 172.253 257.486 cv
172.253 257.486 li
172.253 257.486 li
172.253 257.486 168.273 265.166 167.245 266.992 cv
166.215 268.817 159.936 271.485 158.17 272.309 cv
157.952 272.411 157.756 272.458 157.586 272.458 cv
151.204 253.096 mo
151.548 253.096 153.724 253.126 156.795 253.847 cv
156.795 253.847 159.544 248.634 161.048 247.036 cv
161.048 247.036 li
161.048 247.036 li
161.048 247.036 158.696 242.108 155.649 240.574 cv
155.649 240.574 152.642 242.622 149.423 243.934 cv
149.423 243.934 149.423 243.934 149.423 243.934 cv
149.423 243.935 149.424 243.984 149.424 244.071 cv
149.424 244.895 149.332 249.181 147.423 249.782 cv
147.423 249.782 li
147.423 249.782 li
148.289 249.844 149.842 250.882 151.157 253.096 cv
151.157 253.096 151.173 253.096 151.204 253.096 cv
.870588 .6 .392157 rgb
f
163.503 227.64 mo
166.215 224.41 li
180.66 236.543 li
177.947 239.773 li
163.503 227.64 li
cp
.372549 .690196 .811765 rgb
f
164.301 225.396 mo
171.258 217.11 li
187.037 230.357 li
180.074 238.644 li
164.301 225.396 li
cp
.0627451 .207843 .309804 rgb
f
340.693 234.85 mo
340.693 230.17 344.48 226.379 349.159 226.379 cv
394.848 226.379 li
394.848 241.136 li
340.693 241.136 li
340.693 234.85 li
1 .827451 .360784 rgb
f
349.159 288.148 mo
344.48 288.148 340.693 284.36 340.693 279.677 cv
340.693 241.136 li
395.576 241.136 li
395.576 288.148 li
349.159 288.148 li
f
369.341 226.379 mo
394.848 226.379 li
394.848 241.136 li
395.576 241.136 li
395.576 288.148 li
369.341 288.148 li
369.341 226.379 li
1 .756863 .188235 rgb
f
342.53 234.665 mo
342.631 231.087 345.559 228.201 349.159 228.201 cv
393.754 228.201 li
393.754 241.136 li
349.159 241.136 li
345.559 241.136 342.631 238.249 342.53 234.665 cv
1 1 1 rgb
f
394.848 241.136 mo
369.341 241.136 li
393.754 241.136 li
393.754 228.201 li
369.341 228.201 li
369.341 226.379 li
394.848 226.379 li
394.848 241.136 li
1 .662745 .0980392 rgb
f
393.754 241.136 mo
369.341 241.136 li
369.341 228.201 li
393.754 228.201 li
393.754 241.136 li
1 .87451 .529412 rgb
f
369.341 228.201 mo
393.754 228.201 li
393.754 241.136 li
369.341 241.136 li
369.341 228.201 li
cp
.901961 .94902 .941176 rgb
f
356.784 260.911 mo
358.543 260.878 359.273 259.235 359.273 257.161 cv
359.273 255.384 358.543 253.708 356.784 253.708 cv
356.152 253.708 li
356.152 260.911 li
356.784 260.911 li
cp
351.722 260.911 mo
352.752 260.911 li
352.752 253.708 li
351.722 253.708 li
351.722 251.517 li
356.784 251.517 li
360.8 251.517 363.091 253.99 363.091 257.161 cv
363.091 260.945 360.8 263.119 356.719 263.119 cv
351.722 263.119 li
351.722 260.911 li
cp
.137255 .34902 .509804 rgb
f
369.184 251.517 mo
369.184 253.708 li
368.154 253.708 li
368.154 260.911 li
369.184 260.911 li
369.184 263.119 li
363.673 263.119 li
363.673 260.911 li
364.719 260.911 li
364.719 253.708 li
363.673 253.708 li
363.673 251.517 li
369.184 251.517 li
cp
f
380.735 261.044 mo
379.607 262.289 377.881 263.383 375.707 263.383 cv
372.188 263.383 369.848 261.127 369.848 257.425 cv
369.848 253.608 372.719 251.319 374.894 251.319 cv
376.553 251.319 377.301 252.248 377.449 252.447 cv
377.832 251.517 li
380.437 251.517 li
380.437 256.229 li
377.467 256.229 li
377.417 255.152 376.886 254.139 375.707 254.139 cv
374.513 254.139 373.732 255.618 373.732 257.425 cv
373.732 259.069 374.578 260.545 376.154 260.545 cv
377.55 260.545 378.645 259.086 378.793 258.919 cv
380.735 261.044 li
cp
.0627451 .207843 .309804 rgb
f
392.372 255.833 mo
389.933 255.833 li
389.933 253.708 li
388.538 253.708 li
388.538 260.911 li
389.916 260.911 li
389.916 263.119 li
383.742 263.119 li
383.742 260.911 li
385.103 260.911 li
385.103 253.708 li
383.676 253.708 li
383.676 255.833 li
381.235 255.833 li
381.235 251.517 li
392.372 251.517 li
392.372 255.833 li
cp
f
362.589 274.47 mo
361.789 271.849 li
361.001 274.47 li
362.589 274.47 li
cp
362.141 278.34 mo
362.141 276.75 li
363.292 276.75 li
363.037 275.926 li
360.552 275.926 li
360.297 276.75 li
361.243 276.75 li
361.243 278.34 li
357.385 278.34 li
357.385 276.75 li
358.21 276.75 li
359.848 271.424 li
359.35 271.424 li
359.35 269.859 li
364.008 269.859 li
366.156 276.75 li
367.005 276.75 li
367.005 278.34 li
362.141 278.34 li
cp
.643137 .847059 .901961 rgb
f
371.281 274.64 mo
371.281 276.254 li
367.762 276.254 li
367.762 274.64 li
371.281 274.64 li
cp
f
371.281 274.64 mo
371.281 276.254 li
369.341 276.254 li
369.341 274.64 li
371.281 274.64 li
cp
.372549 .690196 .811765 rgb
f
372.253 269.859 mo
380.211 269.859 li
380.234 271.474 li
375.795 276.739 li
378.051 276.739 li
378.051 275.187 li
380.199 275.187 li
380.199 278.34 li
372.181 278.34 li
372.181 276.762 li
376.596 271.474 li
374.315 271.474 li
374.315 273.05 li
372.253 273.05 li
372.253 269.859 li
cp
f
352.736 274.848 mo
350.437 272.545 li
348.138 274.848 li
348.138 241.136 li
352.736 241.136 li
352.736 274.848 li
cp
.85098 .192157 .0862745 rgb
f
288.186 228.961 mo
284.974 231.675 li
284.905 231.734 li
281.765 234.384 li
281.694 234.443 li
278.485 237.155 li
289.854 250.617 li
293.063 247.905 li
293.135 247.846 li
296.272 245.196 li
296.344 245.137 li
299.555 242.425 li
288.186 228.961 li
cp
.811765 .909804 .866667 rgb
f
291.52 242.75 mo
289.885 244.131 287.438 243.925 286.059 242.289 cv
284.677 240.653 284.883 238.208 286.518 236.829 cv
288.155 235.447 290.597 235.651 291.981 237.287 cv
293.361 238.921 293.157 241.37 291.52 242.75 cv
cp
.85098 .192157 .0862745 rgb
f
266.428 248.342 mo
265.932 247.755 li
288.186 228.961 li
288.681 229.548 li
266.428 248.342 li
.0627451 .207843 .309804 rgb
f
274.562 226.447 mo
257.071 228.553 li
255.574 216.129 li
273.066 214.021 li
274.562 226.447 li
cp
.137255 .34902 .509804 rgb
f
gsave
274.562 226.447 mo
257.071 228.553 li
255.574 216.129 li
273.066 214.021 li
274.562 226.447 li
clp
274.003 221.811 mo
273.623 218.655 li
268.979 219.215 li
275.25 213.76 li
273.726 212.449 li
266.6 218.651 li
266.145 214.853 li
262.496 215.293 li
262.941 218.997 li
254.807 214.421 li
253.579 216.014 li
260.986 220.178 li
256.132 220.765 li
256.511 223.919 li
261.197 223.355 li
254.922 228.812 li
256.448 230.124 li
263.538 223.95 li
263.991 227.719 li
267.642 227.281 li
267.206 223.676 li
275.304 228.231 li
276.532 226.639 li
269.016 222.41 li
274.003 221.811 li
cp
1 1 1 rgb
f
274.003 221.811 mo
273.623 218.655 li
268.979 219.215 li
275.25 213.76 li
273.726 212.449 li
266.6 218.651 li
266.145 214.853 li
262.496 215.293 li
262.941 218.997 li
254.807 214.421 li
253.579 216.014 li
260.986 220.178 li
256.132 220.765 li
256.511 223.919 li
261.197 223.355 li
254.922 228.812 li
256.448 230.124 li
263.538 223.95 li
263.991 227.719 li
267.642 227.281 li
267.206 223.676 li
275.304 228.231 li
276.532 226.639 li
269.016 222.41 li
274.003 221.811 li
cp
f
grestore
272.559 226.688 mo
274.562 226.447 li
274.446 225.467 li
269.016 222.41 li
274.003 221.811 li
273.623 218.655 li
268.979 219.215 li
273.242 215.504 li
273.066 214.021 li
271.734 214.179 li
266.6 218.651 li
266.145 214.853 li
262.496 215.293 li
262.941 218.997 li
257.441 215.903 li
255.574 216.129 li
255.703 217.208 li
260.986 220.178 li
256.132 220.765 li
256.511 223.919 li
261.197 223.355 li
256.896 227.098 li
257.071 228.553 li
258.441 228.387 li
263.538 223.95 li
263.991 227.719 li
267.642 227.281 li
267.206 223.676 li
272.559 226.688 li
cp
.811765 .909804 .866667 rgb
f
267.506 222.05 mo
273.938 221.273 li
273.688 219.191 li
266.638 220.041 li
273.11 214.408 li
273.066 214.021 li
272.563 214.082 li
266.1 219.707 li
265.523 214.927 li
263.115 215.219 li
263.738 220.391 li
263.429 220.427 li
255.744 216.107 li
255.574 216.129 li
255.648 216.75 li
262.407 220.55 li
256.195 221.299 li
256.446 223.381 li
263.613 222.517 li
257.035 228.246 li
257.071 228.553 li
257.692 228.48 li
264.046 222.946 li
264.612 227.645 li
267.021 227.355 li
266.397 222.181 li
266.605 222.157 li
266.617 222.249 li
274.167 226.494 li
274.562 226.447 li
274.505 225.988 li
267.506 222.05 li
cp
.85098 .192157 .0862745 rgb
f
259.809 244.875 mo
259.048 244.965 li
255.563 216.048 li
256.324 215.957 li
259.809 244.875 li
.0627451 .207843 .309804 rgb
f
286.123 234.674 mo
270.139 227.266 li
271.941 223.372 li
287.929 230.779 li
286.123 234.674 li
cp
.85098 .192157 .0862745 rgb
f
287.89 230.862 mo
271.902 223.455 li
273.71 219.559 li
289.692 226.967 li
287.89 230.862 li
cp
.137255 .34902 .509804 rgb
f
289.654 227.049 mo
273.669 219.642 li
275.475 215.749 li
291.461 223.157 li
289.654 227.049 li
cp
.811765 .909804 .866667 rgb
f
263.827 242.464 mo
263.129 242.14 li
275.377 215.714 li
276.073 216.039 li
263.827 242.464 li
cp
.0627451 .207843 .309804 rgb
f
229.833 287.726 mo
272.664 287.726 li
272.664 233.717 li
229.833 233.717 li
229.833 287.726 li
.643137 .847059 .901961 rgb
f
272.664 287.726 mo
251.386 287.726 li
251.386 233.717 li
272.664 233.717 li
272.664 287.726 li
.372549 .690196 .811765 rgb
f
233.013 284.533 mo
269.484 284.533 li
269.484 242.369 li
264.501 236.977 li
233.013 236.977 li
233.013 284.533 li
1 1 1 rgb
f
251.386 236.977 mo
264.501 236.977 li
269.484 242.369 li
269.484 284.533 li
251.386 284.533 li
251.386 236.977 li
.901961 .94902 .941176 rgb
f
264.501 236.979 mo
269.484 242.369 li
264.501 242.369 li
264.501 236.979 li
cp
.811765 .909804 .866667 rgb
f
252.64 235.048 mo
252.64 234.352 252.079 233.792 251.386 233.792 cv
250.693 233.792 250.133 234.352 250.133 235.048 cv
250.159 235.184 li
252.611 235.184 li
252.64 235.048 li
cp
248.364 235.184 mo
248.642 235.184 li
248.627 235.048 li
248.627 233.521 249.861 232.289 251.386 232.289 cv
252.909 232.289 254.146 233.521 254.146 235.048 cv
254.131 235.184 li
254.408 235.184 li
255.857 235.184 257.028 236.36 257.028 237.804 cv
257.028 239.25 255.857 240.424 254.408 240.424 cv
248.364 240.424 li
246.916 240.424 245.744 239.25 245.744 237.804 cv
245.744 236.36 246.916 235.184 248.364 235.184 cv
cp
1 .827451 .360784 rgb
f
254.146 235.048 mo
254.131 235.184 li
254.408 235.184 li
255.857 235.184 257.028 236.36 257.028 237.804 cv
257.028 239.25 255.857 240.424 254.408 240.424 cv
251.386 240.424 li
251.386 235.184 li
252.611 235.184 li
252.64 235.048 li
252.64 234.352 252.079 233.792 251.386 233.792 cv
251.386 232.289 li
252.909 232.289 254.146 233.521 254.146 235.048 cv
cp
1 .756863 .188235 rgb
f
265.242 245.953 mo
252.547 245.953 li
252.547 244.366 li
265.242 244.366 li
265.242 245.953 li
.733333 .862745 .815686 rgb
f
265.242 249.127 mo
252.547 249.127 li
252.547 247.539 li
265.242 247.539 li
265.242 249.127 li
f
265.242 252.298 mo
252.547 252.298 li
252.547 250.713 li
265.242 250.713 li
265.242 252.298 li
f
265.242 255.473 mo
252.547 255.473 li
252.547 253.886 li
265.242 253.886 li
265.242 255.473 li
f
265.242 258.645 mo
254.495 258.645 li
254.495 257.059 li
265.242 257.059 li
265.242 258.645 li
f
251.386 261.82 mo
236.251 261.82 li
236.251 260.234 li
251.386 260.234 li
251.386 261.82 li
.811765 .909804 .866667 rgb
f
265.242 261.82 mo
251.386 261.82 li
251.386 260.234 li
265.242 260.234 li
265.242 261.82 li
.733333 .862745 .815686 rgb
f
251.386 264.991 mo
241.575 264.991 li
241.575 263.407 li
251.386 263.407 li
251.386 264.991 li
.811765 .909804 .866667 rgb
f
265.242 264.991 mo
251.386 264.991 li
251.386 263.407 li
265.242 263.407 li
265.242 264.991 li
.733333 .862745 .815686 rgb
f
251.386 268.168 mo
236.251 268.168 li
236.251 266.58 li
251.386 266.58 li
251.386 268.168 li
.811765 .909804 .866667 rgb
f
265.242 268.168 mo
251.386 268.168 li
251.386 266.58 li
265.242 266.58 li
265.242 268.168 li
.733333 .862745 .815686 rgb
f
251.386 271.338 mo
236.251 271.338 li
236.251 269.754 li
251.386 269.754 li
251.386 271.338 li
.811765 .909804 .866667 rgb
f
265.242 271.338 mo
251.386 271.338 li
251.386 269.754 li
265.242 269.754 li
265.242 271.338 li
.733333 .862745 .815686 rgb
f
251.386 274.513 mo
236.251 274.513 li
236.251 272.926 li
251.386 272.926 li
251.386 274.513 li
.811765 .909804 .866667 rgb
f
265.242 274.513 mo
251.386 274.513 li
251.386 272.926 li
265.242 272.926 li
265.242 274.513 li
.733333 .862745 .815686 rgb
f
251.386 277.686 mo
244.086 277.686 li
244.086 276.099 li
251.386 276.099 li
251.386 277.686 li
.811765 .909804 .866667 rgb
f
265.242 277.686 mo
251.386 277.686 li
251.386 276.099 li
265.242 276.099 li
265.242 277.686 li
.733333 .862745 .815686 rgb
f
265.242 280.861 mo
253.613 280.861 li
253.613 279.272 li
265.242 279.272 li
265.242 280.861 li
f
242.599 280.861 mo
236.251 280.861 li
236.251 279.272 li
242.599 279.272 li
242.599 280.861 li
.811765 .909804 .866667 rgb
f
242.656 255.357 mo
244.882 255.315 245.806 253.235 245.806 250.613 cv
245.806 248.365 244.882 246.246 242.656 246.246 cv
241.857 246.246 li
241.857 255.357 li
242.656 255.357 li
cp
236.251 255.357 mo
237.551 255.357 li
237.551 246.246 li
236.251 246.246 li
236.251 243.472 li
242.656 243.472 li
247.737 243.472 250.637 246.6 250.637 250.613 cv
250.637 255.4 247.737 258.15 242.571 258.15 cv
236.251 258.15 li
236.251 255.357 li
cp
.85098 .192157 .0862745 rgb
f
277.495 254.289 mo
277.495 254.289 276.781 253.05 274.361 253.858 cv
272.478 254.485 262.919 261.885 263.133 265.163 cv
263.133 265.163 263.757 265.296 265.065 263.297 cv
266.375 261.298 267.17 260.161 269.459 258.227 cv
271.745 256.294 274.739 254.413 275.432 255.3 cv
277.495 254.289 li
cp
.0627451 .207843 .309804 rgb
f
268.157 270.108 mo
261.964 276.836 254.71 282.542 253.374 281.318 cv
252.039 280.089 257.126 272.392 263.323 265.665 cv
269.52 258.937 277.538 252.397 278.873 253.624 cv
280.209 254.849 274.354 263.38 268.157 270.108 cv
cp
f
258.255 276.016 mo
257.598 275.414 256.832 275.009 256.027 274.791 cv
253.819 278.081 252.65 280.652 253.374 281.318 cv
254.101 281.984 256.569 280.601 259.665 278.131 cv
259.38 277.348 258.912 276.62 258.255 276.016 cv
cp
.678431 .0941176 0 rgb
f
267.617 271.156 mo
267.055 271.765 266.517 272.184 265.946 271.66 cv
261.958 267.998 li
261.387 267.473 261.76 266.901 262.322 266.288 cv
262.885 265.681 263.425 265.262 263.993 265.786 cv
267.981 269.449 li
268.552 269.972 268.182 270.545 267.617 271.156 cv
cp
level3{
gsave
clp
[5.29431 4.86918 -4.86918 5.29431 262.322 266.288 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.866667 .247059 .0941176 ]
/C1 [.992157 .380392 .12549 ]
/N 2.17661 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.29431 4.86918 -4.86918 5.29431 262.322 266.288 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rVZTkqtp9fqYL'bq>'j^q"XXZp\4FVp@e4Rp%A"No^qeJo^h\GoCDJCo()>@naZ,<nF5r9n*f`6mdBN2
md9E/mHs9,m-O**lg*m&lg!d#lK[[!l07Hsl0.?pkih6okND$kkND!ik2tggk2tdejlPUcjlGL`jQ,C_
jQ#:\j5]1[j5].Yio8tWio8tViSibSiSibSiSi_Qi8EPOi8EPOi8EMMhr!>Khr!>Khr!>Khqm5HhVR,G
hVR,GhVR,GhVR,Gh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oC
~>
<~@:3JN?XI/I?=$rD?!U`@>[1N<>?b97>$>'3=]nj/=BJX+='&F'<`W7$<E3$u<)cgq;c?Un;GpCj;Gg:g
;,C(c:f'q`:JXb]:/4PZ:/+GW9he;T9MA,R91qoN91qlL8kM]J8P)KF8P)KE84Z9B84Q0?7n6'>7n,s;
7Rfj:7R]a777BX6779O36psF26psC06UO4.6UO4.6UF++6:+"*6:+"*6:!n'5s[e&5s[e&5s[e%5X7S"
5X7S"5X7S"5X7S"5X7Ou5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s
~>
<~+<M[I+!2RH+!2RH+!2RH*Zc@D*Zc@D*Zc@D*Zc@D*??.@*??.@*??.@*??.@*??+>*#oq<*#oq<*#oq<
*#oq<*#on:)]K_8)]K_8)]K_8)]K_8)]K_8)]BV5)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)AsD1)&X;0
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X8.(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),
(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
253.995 280.642 mo
253.765 280.427 253.494 280.284 253.208 280.209 cv
252.428 281.373 252.015 282.281 252.27 282.518 cv
252.528 282.752 253.4 282.263 254.495 281.388 cv
254.395 281.114 254.229 280.854 253.995 280.642 cv
cp
.0627451 .207843 .309804 rgb
f
267.617 271.156 mo
267.055 271.765 266.517 272.184 265.946 271.66 cv
261.958 267.998 li
261.387 267.473 261.76 266.901 262.322 266.288 cv
262.885 265.681 263.425 265.262 263.993 265.786 cv
267.981 269.449 li
268.552 269.972 268.182 270.545 267.617 271.156 cv
cp
.678431 .0941176 0 rgb
f
64.2514 111.956 mo
2.34665 111.956 li
1.05616 111.956 0 113.012 0 114.302 cv
0 156.136 li
0 157.426 1.05616 158.482 2.34665 158.482 cv
27.1948 158.482 li
27.1948 158.515 li
27.1948 159.806 28.2515 160.275 29.5415 160.275 cv
37.0581 160.275 li
38.3477 160.275 39.4053 159.806 39.4053 158.515 cv
39.4053 158.482 li
64.2514 158.482 li
65.5425 158.482 66.5987 157.426 66.5987 156.136 cv
66.5987 114.302 li
66.5987 113.012 65.5425 111.956 64.2514 111.956 cv
.85098 .192157 .0862745 rgb
f
64.2514 111.956 mo
33.2993 111.956 li
33.2993 160.275 li
37.0581 160.275 li
38.3477 160.275 39.4053 159.806 39.4053 158.515 cv
39.4053 158.482 li
64.2514 158.482 li
65.5425 158.482 66.5987 157.426 66.5987 156.136 cv
66.5987 114.302 li
66.5987 113.012 65.5425 111.956 64.2514 111.956 cv
.678431 .0941176 0 rgb
f
63.8276 153.146 mo
63.8276 154.435 62.7724 155.491 61.4815 155.491 cv
5.11722 155.491 li
3.82714 155.491 2.77098 154.435 2.77098 153.146 cv
2.77098 111.956 li
2.77098 110.665 3.82714 109.608 5.11722 109.608 cv
61.4815 109.608 li
62.7724 109.608 63.8276 110.665 63.8276 111.956 cv
63.8276 153.146 li
.643137 .847059 .901961 rgb
f
61.4815 109.608 mo
33.2993 109.608 li
33.2993 155.491 li
61.4815 155.491 li
62.7724 155.491 63.8276 154.435 63.8276 153.146 cv
63.8276 111.956 li
63.8276 110.665 62.7724 109.608 61.4815 109.608 cv
.372549 .690196 .811765 rgb
f
6.6636 153.944 mo
5.37301 153.944 4.31786 152.888 4.31786 151.598 cv
4.31786 113.502 li
4.31786 112.212 5.37301 111.155 6.6636 111.155 cv
59.9346 111.155 li
61.2256 111.155 62.2817 112.212 62.2817 113.502 cv
62.2817 151.598 li
62.2817 152.888 61.2256 153.944 59.9346 153.944 cv
6.6636 153.944 li
.901961 .94902 .941176 rgb
f
59.9346 111.155 mo
33.2993 111.155 li
33.2993 153.944 li
59.9346 153.944 li
61.2256 153.944 62.2817 152.888 62.2817 151.598 cv
62.2817 113.502 li
62.2817 112.212 61.2256 111.155 59.9346 111.155 cv
.811765 .909804 .866667 rgb
f
33.8491 154.994 mo
32.7495 154.994 li
32.7495 110.641 li
33.8491 110.641 li
33.8491 154.994 li
cp
.372549 .690196 .811765 rgb
f
33.3169 154.994 mo
32.7319 154.994 li
32.7319 110.641 li
33.3169 110.641 li
33.3169 154.994 li
cp
.643137 .847059 .901961 rgb
f
8.24951 114.274 mo
8.24951 114.622 7.96777 114.903 7.62061 114.903 cv
7.27441 114.903 6.99219 114.622 6.99219 114.274 cv
6.99219 113.929 7.27441 113.646 7.62061 113.646 cv
7.96777 113.646 8.24951 113.929 8.24951 114.274 cv
cp
.137255 .34902 .509804 rgb
f
10.3071 114.274 mo
10.3071 114.622 10.0254 114.903 9.6792 114.903 cv
9.33154 114.903 9.05029 114.622 9.05029 114.274 cv
9.05029 113.929 9.33154 113.646 9.6792 113.646 cv
10.0254 113.646 10.3071 113.929 10.3071 114.274 cv
cp
f
14.4233 114.274 mo
14.4233 114.622 14.1411 114.903 13.7949 114.903 cv
13.4487 114.903 13.1665 114.622 13.1665 114.274 cv
13.1665 113.929 13.4487 113.646 13.7949 113.646 cv
14.1411 113.646 14.4233 113.929 14.4233 114.274 cv
cp
f
18.5396 114.274 mo
18.5396 114.622 18.2588 114.903 17.9111 114.903 cv
17.564 114.903 17.2832 114.622 17.2832 114.274 cv
17.2832 113.929 17.564 113.646 17.9111 113.646 cv
18.2588 113.646 18.5396 113.929 18.5396 114.274 cv
cp
f
20.5972 114.274 mo
20.5972 114.622 20.3164 114.903 19.9692 114.903 cv
19.6216 114.903 19.3408 114.622 19.3408 114.274 cv
19.3408 113.929 19.6216 113.646 19.9692 113.646 cv
20.3164 113.646 20.5972 113.929 20.5972 114.274 cv
cp
f
22.6553 114.274 mo
22.6553 114.622 22.374 114.903 22.0269 114.903 cv
21.6797 114.903 21.3984 114.622 21.3984 114.274 cv
21.3984 113.929 21.6797 113.646 22.0269 113.646 cv
22.374 113.646 22.6553 113.929 22.6553 114.274 cv
cp
f
26.7715 114.274 mo
26.7715 114.622 26.4902 114.903 26.1426 114.903 cv
25.7949 114.903 25.5142 114.622 25.5142 114.274 cv
25.5142 113.929 25.7949 113.646 26.1426 113.646 cv
26.4902 113.646 26.7715 113.929 26.7715 114.274 cv
cp
f
8.24951 116.333 mo
8.24951 116.678 7.96777 116.96 7.62061 116.96 cv
7.27441 116.96 6.99219 116.678 6.99219 116.333 cv
6.99219 115.985 7.27441 115.704 7.62061 115.704 cv
7.96777 115.704 8.24951 115.985 8.24951 116.333 cv
cp
f
14.4233 116.333 mo
14.4233 116.678 14.1411 116.96 13.7949 116.96 cv
13.4487 116.96 13.1665 116.678 13.1665 116.333 cv
13.1665 115.985 13.4487 115.704 13.7949 115.704 cv
14.1411 115.704 14.4233 115.985 14.4233 116.333 cv
cp
f
20.5972 116.333 mo
20.5972 116.678 20.3164 116.96 19.9692 116.96 cv
19.6216 116.96 19.3408 116.678 19.3408 116.333 cv
19.3408 115.985 19.6216 115.704 19.9692 115.704 cv
20.3164 115.704 20.5972 115.985 20.5972 116.333 cv
cp
f
22.6553 116.333 mo
22.6553 116.678 22.374 116.96 22.0269 116.96 cv
21.6797 116.96 21.3984 116.678 21.3984 116.333 cv
21.3984 115.985 21.6797 115.704 22.0269 115.704 cv
22.374 115.704 22.6553 115.985 22.6553 116.333 cv
cp
f
26.7715 116.333 mo
26.7715 116.678 26.4902 116.96 26.1426 116.96 cv
25.7949 116.96 25.5142 116.678 25.5142 116.333 cv
25.5142 115.985 25.7949 115.704 26.1426 115.704 cv
26.4902 115.704 26.7715 115.985 26.7715 116.333 cv
cp
f
28.8291 116.333 mo
28.8291 116.678 28.5479 116.96 28.2002 116.96 cv
27.8545 116.96 27.5728 116.678 27.5728 116.333 cv
27.5728 115.985 27.8545 115.704 28.2002 115.704 cv
28.5479 115.704 28.8291 115.985 28.8291 116.333 cv
cp
f
30.8867 116.333 mo
30.8867 116.678 30.6055 116.96 30.2593 116.96 cv
29.9126 116.96 29.6304 116.678 29.6304 116.333 cv
29.6304 115.985 29.9126 115.704 30.2593 115.704 cv
30.6055 115.704 30.8867 115.985 30.8867 116.333 cv
cp
f
8.24951 120.449 mo
8.24951 120.795 7.96777 121.078 7.62061 121.078 cv
7.27441 121.078 6.99219 120.795 6.99219 120.449 cv
6.99219 120.101 7.27441 119.82 7.62061 119.82 cv
7.96777 119.82 8.24951 120.101 8.24951 120.449 cv
cp
f
12.3647 120.449 mo
12.3647 120.795 12.084 121.078 11.7363 121.078 cv
11.3896 121.078 11.1074 120.795 11.1074 120.449 cv
11.1074 120.101 11.3896 119.82 11.7363 119.82 cv
12.084 119.82 12.3647 120.101 12.3647 120.449 cv
cp
f
16.4819 120.449 mo
16.4819 120.795 16.2007 121.078 15.8535 121.078 cv
15.5063 121.078 15.2251 120.795 15.2251 120.449 cv
15.2251 120.101 15.5063 119.82 15.8535 119.82 cv
16.2007 119.82 16.4819 120.101 16.4819 120.449 cv
cp
f
18.5396 120.449 mo
18.5396 120.795 18.2588 121.078 17.9111 121.078 cv
17.564 121.078 17.2832 120.795 17.2832 120.449 cv
17.2832 120.101 17.564 119.82 17.9111 119.82 cv
18.2588 119.82 18.5396 120.101 18.5396 120.449 cv
cp
f
24.7129 120.449 mo
24.7129 120.795 24.4316 121.078 24.085 121.078 cv
23.7378 121.078 23.4565 120.795 23.4565 120.449 cv
23.4565 120.101 23.7378 119.82 24.085 119.82 cv
24.4316 119.82 24.7129 120.101 24.7129 120.449 cv
cp
f
26.7715 120.449 mo
26.7715 120.795 26.4902 121.078 26.1426 121.078 cv
25.7949 121.078 25.5142 120.795 25.5142 120.449 cv
25.5142 120.101 25.7949 119.82 26.1426 119.82 cv
26.4902 119.82 26.7715 120.101 26.7715 120.449 cv
cp
f
28.8291 120.449 mo
28.8291 120.795 28.5479 121.078 28.2002 121.078 cv
27.8545 121.078 27.5728 120.795 27.5728 120.449 cv
27.5728 120.101 27.8545 119.82 28.2002 119.82 cv
28.5479 119.82 28.8291 120.101 28.8291 120.449 cv
cp
f
30.8867 120.449 mo
30.8867 120.795 30.6055 121.078 30.2593 121.078 cv
29.9126 121.078 29.6304 120.795 29.6304 120.449 cv
29.6304 120.101 29.9126 119.82 30.2593 119.82 cv
30.6055 119.82 30.8867 120.101 30.8867 120.449 cv
cp
f
10.3071 122.507 mo
10.3071 122.854 10.0254 123.134 9.6792 123.134 cv
9.33154 123.134 9.05029 122.854 9.05029 122.507 cv
9.05029 122.16 9.33154 121.877 9.6792 121.877 cv
10.0254 121.877 10.3071 122.16 10.3071 122.507 cv
cp
f
12.3647 122.507 mo
12.3647 122.854 12.084 123.134 11.7363 123.134 cv
11.3896 123.134 11.1074 122.854 11.1074 122.507 cv
11.1074 122.16 11.3896 121.877 11.7363 121.877 cv
12.084 121.877 12.3647 122.16 12.3647 122.507 cv
cp
f
16.4819 122.507 mo
16.4819 122.854 16.2007 123.134 15.8535 123.134 cv
15.5063 123.134 15.2251 122.854 15.2251 122.507 cv
15.2251 122.16 15.5063 121.877 15.8535 121.877 cv
16.2007 121.877 16.4819 122.16 16.4819 122.507 cv
cp
f
18.5396 122.507 mo
18.5396 122.854 18.2588 123.134 17.9111 123.134 cv
17.564 123.134 17.2832 122.854 17.2832 122.507 cv
17.2832 122.16 17.564 121.877 17.9111 121.877 cv
18.2588 121.877 18.5396 122.16 18.5396 122.507 cv
cp
f
20.5972 122.507 mo
20.5972 122.854 20.3164 123.134 19.9692 123.134 cv
19.6216 123.134 19.3408 122.854 19.3408 122.507 cv
19.3408 122.16 19.6216 121.877 19.9692 121.877 cv
20.3164 121.877 20.5972 122.16 20.5972 122.507 cv
cp
f
26.7715 122.507 mo
26.7715 122.854 26.4902 123.134 26.1426 123.134 cv
25.7949 123.134 25.5142 122.854 25.5142 122.507 cv
25.5142 122.16 25.7949 121.877 26.1426 121.877 cv
26.4902 121.877 26.7715 122.16 26.7715 122.507 cv
cp
f
28.8291 122.507 mo
28.8291 122.854 28.5479 123.134 28.2002 123.134 cv
27.8545 123.134 27.5728 122.854 27.5728 122.507 cv
27.5728 122.16 27.8545 121.877 28.2002 121.877 cv
28.5479 121.877 28.8291 122.16 28.8291 122.507 cv
cp
f
8.24951 124.563 mo
8.24951 124.911 7.96777 125.194 7.62061 125.194 cv
7.27441 125.194 6.99219 124.911 6.99219 124.563 cv
6.99219 124.218 7.27441 123.937 7.62061 123.937 cv
7.96777 123.937 8.24951 124.218 8.24951 124.563 cv
cp
f
10.3071 124.563 mo
10.3071 124.911 10.0254 125.194 9.6792 125.194 cv
9.33154 125.194 9.05029 124.911 9.05029 124.563 cv
9.05029 124.218 9.33154 123.937 9.6792 123.937 cv
10.0254 123.937 10.3071 124.218 10.3071 124.563 cv
cp
f
20.5972 124.563 mo
20.5972 124.911 20.3164 125.194 19.9692 125.194 cv
19.6216 125.194 19.3408 124.911 19.3408 124.563 cv
19.3408 124.218 19.6216 123.937 19.9692 123.937 cv
20.3164 123.937 20.5972 124.218 20.5972 124.563 cv
cp
f
22.6553 124.563 mo
22.6553 124.911 22.374 125.194 22.0269 125.194 cv
21.6797 125.194 21.3984 124.911 21.3984 124.563 cv
21.3984 124.218 21.6797 123.937 22.0269 123.937 cv
22.374 123.937 22.6553 124.218 22.6553 124.563 cv
cp
f
28.8291 124.563 mo
28.8291 124.911 28.5479 125.194 28.2002 125.194 cv
27.8545 125.194 27.5728 124.911 27.5728 124.563 cv
27.5728 124.218 27.8545 123.937 28.2002 123.937 cv
28.5479 123.937 28.8291 124.218 28.8291 124.563 cv
cp
f
8.24951 128.681 mo
8.24951 129.028 7.96777 129.311 7.62061 129.311 cv
7.27441 129.311 6.99219 129.028 6.99219 128.681 cv
6.99219 128.334 7.27441 128.053 7.62061 128.053 cv
7.96777 128.053 8.24951 128.334 8.24951 128.681 cv
cp
f
10.3071 128.681 mo
10.3071 129.028 10.0254 129.311 9.6792 129.311 cv
9.33154 129.311 9.05029 129.028 9.05029 128.681 cv
9.05029 128.334 9.33154 128.053 9.6792 128.053 cv
10.0254 128.053 10.3071 128.334 10.3071 128.681 cv
cp
f
12.3647 128.681 mo
12.3647 129.028 12.084 129.311 11.7363 129.311 cv
11.3896 129.311 11.1074 129.028 11.1074 128.681 cv
11.1074 128.334 11.3896 128.053 11.7363 128.053 cv
12.084 128.053 12.3647 128.334 12.3647 128.681 cv
cp
f
14.4233 128.681 mo
14.4233 129.028 14.1411 129.311 13.7949 129.311 cv
13.4487 129.311 13.1665 129.028 13.1665 128.681 cv
13.1665 128.334 13.4487 128.053 13.7949 128.053 cv
14.1411 128.053 14.4233 128.334 14.4233 128.681 cv
cp
f
16.4819 128.681 mo
16.4819 129.028 16.2007 129.311 15.8535 129.311 cv
15.5063 129.311 15.2251 129.028 15.2251 128.681 cv
15.2251 128.334 15.5063 128.053 15.8535 128.053 cv
16.2007 128.053 16.4819 128.334 16.4819 128.681 cv
cp
f
22.6553 128.681 mo
22.6553 129.028 22.374 129.311 22.0269 129.311 cv
21.6797 129.311 21.3984 129.028 21.3984 128.681 cv
21.3984 128.334 21.6797 128.053 22.0269 128.053 cv
22.374 128.053 22.6553 128.334 22.6553 128.681 cv
cp
f
26.7715 128.681 mo
26.7715 129.028 26.4902 129.311 26.1426 129.311 cv
25.7949 129.311 25.5142 129.028 25.5142 128.681 cv
25.5142 128.334 25.7949 128.053 26.1426 128.053 cv
26.4902 128.053 26.7715 128.334 26.7715 128.681 cv
cp
f
8.24951 130.738 mo
8.24951 131.086 7.96777 131.367 7.62061 131.367 cv
7.27441 131.367 6.99219 131.086 6.99219 130.738 cv
6.99219 130.392 7.27441 130.112 7.62061 130.112 cv
7.96777 130.112 8.24951 130.392 8.24951 130.738 cv
cp
f
10.3071 130.738 mo
10.3071 131.086 10.0254 131.367 9.6792 131.367 cv
9.33154 131.367 9.05029 131.086 9.05029 130.738 cv
9.05029 130.392 9.33154 130.112 9.6792 130.112 cv
10.0254 130.112 10.3071 130.392 10.3071 130.738 cv
cp
f
14.4233 130.738 mo
14.4233 131.086 14.1411 131.367 13.7949 131.367 cv
13.4487 131.367 13.1665 131.086 13.1665 130.738 cv
13.1665 130.392 13.4487 130.112 13.7949 130.112 cv
14.1411 130.112 14.4233 130.392 14.4233 130.738 cv
cp
f
20.5972 130.738 mo
20.5972 131.086 20.3164 131.367 19.9692 131.367 cv
19.6216 131.367 19.3408 131.086 19.3408 130.738 cv
19.3408 130.392 19.6216 130.112 19.9692 130.112 cv
20.3164 130.112 20.5972 130.392 20.5972 130.738 cv
cp
f
22.6553 130.738 mo
22.6553 131.086 22.374 131.367 22.0269 131.367 cv
21.6797 131.367 21.3984 131.086 21.3984 130.738 cv
21.3984 130.392 21.6797 130.112 22.0269 130.112 cv
22.374 130.112 22.6553 130.392 22.6553 130.738 cv
cp
f
24.7129 130.738 mo
24.7129 131.086 24.4316 131.367 24.085 131.367 cv
23.7378 131.367 23.4565 131.086 23.4565 130.738 cv
23.4565 130.392 23.7378 130.112 24.085 130.112 cv
24.4316 130.112 24.7129 130.392 24.7129 130.738 cv
cp
f
26.7715 130.738 mo
26.7715 131.086 26.4902 131.367 26.1426 131.367 cv
25.7949 131.367 25.5142 131.086 25.5142 130.738 cv
25.5142 130.392 25.7949 130.112 26.1426 130.112 cv
26.4902 130.112 26.7715 130.392 26.7715 130.738 cv
cp
f
28.8291 130.738 mo
28.8291 131.086 28.5479 131.367 28.2002 131.367 cv
27.8545 131.367 27.5728 131.086 27.5728 130.738 cv
27.5728 130.392 27.8545 130.112 28.2002 130.112 cv
28.5479 130.112 28.8291 130.392 28.8291 130.738 cv
cp
f
14.4233 132.797 mo
14.4233 133.144 14.1411 133.424 13.7949 133.424 cv
13.4487 133.424 13.1665 133.144 13.1665 132.797 cv
13.1665 132.45 13.4487 132.168 13.7949 132.168 cv
14.1411 132.168 14.4233 132.45 14.4233 132.797 cv
cp
f
18.5396 132.797 mo
18.5396 133.144 18.2588 133.424 17.9111 133.424 cv
17.564 133.424 17.2832 133.144 17.2832 132.797 cv
17.2832 132.45 17.564 132.168 17.9111 132.168 cv
18.2588 132.168 18.5396 132.45 18.5396 132.797 cv
cp
f
20.5972 132.797 mo
20.5972 133.144 20.3164 133.424 19.9692 133.424 cv
19.6216 133.424 19.3408 133.144 19.3408 132.797 cv
19.3408 132.45 19.6216 132.168 19.9692 132.168 cv
20.3164 132.168 20.5972 132.45 20.5972 132.797 cv
cp
f
22.6553 132.797 mo
22.6553 133.144 22.374 133.424 22.0269 133.424 cv
21.6797 133.424 21.3984 133.144 21.3984 132.797 cv
21.3984 132.45 21.6797 132.168 22.0269 132.168 cv
22.374 132.168 22.6553 132.45 22.6553 132.797 cv
cp
f
26.7715 132.797 mo
26.7715 133.144 26.4902 133.424 26.1426 133.424 cv
25.7949 133.424 25.5142 133.144 25.5142 132.797 cv
25.5142 132.45 25.7949 132.168 26.1426 132.168 cv
26.4902 132.168 26.7715 132.45 26.7715 132.797 cv
cp
f
8.24951 136.914 mo
8.24951 137.26 7.96777 137.54 7.62061 137.54 cv
7.27441 137.54 6.99219 137.26 6.99219 136.914 cv
6.99219 136.566 7.27441 136.285 7.62061 136.285 cv
7.96777 136.285 8.24951 136.566 8.24951 136.914 cv
cp
f
10.3071 136.914 mo
10.3071 137.26 10.0254 137.54 9.6792 137.54 cv
9.33154 137.54 9.05029 137.26 9.05029 136.914 cv
9.05029 136.566 9.33154 136.285 9.6792 136.285 cv
10.0254 136.285 10.3071 136.566 10.3071 136.914 cv
cp
f
12.3647 136.914 mo
12.3647 137.26 12.084 137.54 11.7363 137.54 cv
11.3896 137.54 11.1074 137.26 11.1074 136.914 cv
11.1074 136.566 11.3896 136.285 11.7363 136.285 cv
12.084 136.285 12.3647 136.566 12.3647 136.914 cv
cp
f
16.4819 136.914 mo
16.4819 137.26 16.2007 137.54 15.8535 137.54 cv
15.5063 137.54 15.2251 137.26 15.2251 136.914 cv
15.2251 136.566 15.5063 136.285 15.8535 136.285 cv
16.2007 136.285 16.4819 136.566 16.4819 136.914 cv
cp
f
18.5396 136.914 mo
18.5396 137.26 18.2588 137.54 17.9111 137.54 cv
17.564 137.54 17.2832 137.26 17.2832 136.914 cv
17.2832 136.566 17.564 136.285 17.9111 136.285 cv
18.2588 136.285 18.5396 136.566 18.5396 136.914 cv
cp
f
20.5972 136.914 mo
20.5972 137.26 20.3164 137.54 19.9692 137.54 cv
19.6216 137.54 19.3408 137.26 19.3408 136.914 cv
19.3408 136.566 19.6216 136.285 19.9692 136.285 cv
20.3164 136.285 20.5972 136.566 20.5972 136.914 cv
cp
f
24.7129 136.914 mo
24.7129 137.26 24.4316 137.54 24.085 137.54 cv
23.7378 137.54 23.4565 137.26 23.4565 136.914 cv
23.4565 136.566 23.7378 136.285 24.085 136.285 cv
24.4316 136.285 24.7129 136.566 24.7129 136.914 cv
cp
f
26.7715 136.914 mo
26.7715 137.26 26.4902 137.54 26.1426 137.54 cv
25.7949 137.54 25.5142 137.26 25.5142 136.914 cv
25.5142 136.566 25.7949 136.285 26.1426 136.285 cv
26.4902 136.285 26.7715 136.566 26.7715 136.914 cv
cp
f
30.8867 136.914 mo
30.8867 137.26 30.6055 137.54 30.2593 137.54 cv
29.9126 137.54 29.6304 137.26 29.6304 136.914 cv
29.6304 136.566 29.9126 136.285 30.2593 136.285 cv
30.6055 136.285 30.8867 136.566 30.8867 136.914 cv
cp
f
8.24951 138.97 mo
8.24951 139.317 7.96777 139.599 7.62061 139.599 cv
7.27441 139.599 6.99219 139.317 6.99219 138.97 cv
6.99219 138.624 7.27441 138.342 7.62061 138.342 cv
7.96777 138.342 8.24951 138.624 8.24951 138.97 cv
cp
f
10.3071 138.97 mo
10.3071 139.317 10.0254 139.599 9.6792 139.599 cv
9.33154 139.599 9.05029 139.317 9.05029 138.97 cv
9.05029 138.624 9.33154 138.342 9.6792 138.342 cv
10.0254 138.342 10.3071 138.624 10.3071 138.97 cv
cp
f
18.5396 138.97 mo
18.5396 139.317 18.2588 139.599 17.9111 139.599 cv
17.564 139.599 17.2832 139.317 17.2832 138.97 cv
17.2832 138.624 17.564 138.342 17.9111 138.342 cv
18.2588 138.342 18.5396 138.624 18.5396 138.97 cv
cp
f
22.6553 138.97 mo
22.6553 139.317 22.374 139.599 22.0269 139.599 cv
21.6797 139.599 21.3984 139.317 21.3984 138.97 cv
21.3984 138.624 21.6797 138.342 22.0269 138.342 cv
22.374 138.342 22.6553 138.624 22.6553 138.97 cv
cp
f
24.7129 138.97 mo
24.7129 139.317 24.4316 139.599 24.085 139.599 cv
23.7378 139.599 23.4565 139.317 23.4565 138.97 cv
23.4565 138.624 23.7378 138.342 24.085 138.342 cv
24.4316 138.342 24.7129 138.624 24.7129 138.97 cv
cp
f
30.8867 138.97 mo
30.8867 139.317 30.6055 139.599 30.2593 139.599 cv
29.9126 139.599 29.6304 139.317 29.6304 138.97 cv
29.6304 138.624 29.9126 138.342 30.2593 138.342 cv
30.6055 138.342 30.8867 138.624 30.8867 138.97 cv
cp
f
8.24951 143.089 mo
8.24951 143.433 7.96777 143.715 7.62061 143.715 cv
7.27441 143.715 6.99219 143.433 6.99219 143.089 cv
6.99219 142.741 7.27441 142.458 7.62061 142.458 cv
7.96777 142.458 8.24951 142.741 8.24951 143.089 cv
cp
f
10.3071 143.089 mo
10.3071 143.433 10.0254 143.715 9.6792 143.715 cv
9.33154 143.715 9.05029 143.433 9.05029 143.089 cv
9.05029 142.741 9.33154 142.458 9.6792 142.458 cv
10.0254 142.458 10.3071 142.741 10.3071 143.089 cv
cp
f
12.3647 143.089 mo
12.3647 143.433 12.084 143.715 11.7363 143.715 cv
11.3896 143.715 11.1074 143.433 11.1074 143.089 cv
11.1074 142.741 11.3896 142.458 11.7363 142.458 cv
12.084 142.458 12.3647 142.741 12.3647 143.089 cv
cp
f
16.4819 143.089 mo
16.4819 143.433 16.2007 143.715 15.8535 143.715 cv
15.5063 143.715 15.2251 143.433 15.2251 143.089 cv
15.2251 142.741 15.5063 142.458 15.8535 142.458 cv
16.2007 142.458 16.4819 142.741 16.4819 143.089 cv
cp
f
18.5396 143.089 mo
18.5396 143.433 18.2588 143.715 17.9111 143.715 cv
17.564 143.715 17.2832 143.433 17.2832 143.089 cv
17.2832 142.741 17.564 142.458 17.9111 142.458 cv
18.2588 142.458 18.5396 142.741 18.5396 143.089 cv
cp
f
24.7129 143.089 mo
24.7129 143.433 24.4316 143.715 24.085 143.715 cv
23.7378 143.715 23.4565 143.433 23.4565 143.089 cv
23.4565 142.741 23.7378 142.458 24.085 142.458 cv
24.4316 142.458 24.7129 142.741 24.7129 143.089 cv
cp
f
28.8291 143.089 mo
28.8291 143.433 28.5479 143.715 28.2002 143.715 cv
27.8545 143.715 27.5728 143.433 27.5728 143.089 cv
27.5728 142.741 27.8545 142.458 28.2002 142.458 cv
28.5479 142.458 28.8291 142.741 28.8291 143.089 cv
cp
f
30.8867 143.089 mo
30.8867 143.433 30.6055 143.715 30.2593 143.715 cv
29.9126 143.715 29.6304 143.433 29.6304 143.089 cv
29.6304 142.741 29.9126 142.458 30.2593 142.458 cv
30.6055 142.458 30.8867 142.741 30.8867 143.089 cv
cp
f
8.24951 145.145 mo
8.24951 145.492 7.96777 145.774 7.62061 145.774 cv
7.27441 145.774 6.99219 145.492 6.99219 145.145 cv
6.99219 144.798 7.27441 144.518 7.62061 144.518 cv
7.96777 144.518 8.24951 144.798 8.24951 145.145 cv
cp
f
10.3071 145.145 mo
10.3071 145.492 10.0254 145.774 9.6792 145.774 cv
9.33154 145.774 9.05029 145.492 9.05029 145.145 cv
9.05029 144.798 9.33154 144.518 9.6792 144.518 cv
10.0254 144.518 10.3071 144.798 10.3071 145.145 cv
cp
f
14.4233 145.145 mo
14.4233 145.492 14.1411 145.774 13.7949 145.774 cv
13.4487 145.774 13.1665 145.492 13.1665 145.145 cv
13.1665 144.798 13.4487 144.518 13.7949 144.518 cv
14.1411 144.518 14.4233 144.798 14.4233 145.145 cv
cp
f
18.5396 145.145 mo
18.5396 145.492 18.2588 145.774 17.9111 145.774 cv
17.564 145.774 17.2832 145.492 17.2832 145.145 cv
17.2832 144.798 17.564 144.518 17.9111 144.518 cv
18.2588 144.518 18.5396 144.798 18.5396 145.145 cv
cp
f
22.6553 145.145 mo
22.6553 145.492 22.374 145.774 22.0269 145.774 cv
21.6797 145.774 21.3984 145.492 21.3984 145.145 cv
21.3984 144.798 21.6797 144.518 22.0269 144.518 cv
22.374 144.518 22.6553 144.798 22.6553 145.145 cv
cp
f
26.7715 145.145 mo
26.7715 145.492 26.4902 145.774 26.1426 145.774 cv
25.7949 145.774 25.5142 145.492 25.5142 145.145 cv
25.5142 144.798 25.7949 144.518 26.1426 144.518 cv
26.4902 144.518 26.7715 144.798 26.7715 145.145 cv
cp
f
28.8291 145.145 mo
28.8291 145.492 28.5479 145.774 28.2002 145.774 cv
27.8545 145.774 27.5728 145.492 27.5728 145.145 cv
27.5728 144.798 27.8545 144.518 28.2002 144.518 cv
28.5479 144.518 28.8291 144.798 28.8291 145.145 cv
cp
f
30.8867 145.145 mo
30.8867 145.492 30.6055 145.774 30.2593 145.774 cv
29.9126 145.774 29.6304 145.492 29.6304 145.145 cv
29.6304 144.798 29.9126 144.518 30.2593 144.518 cv
30.6055 144.518 30.8867 144.798 30.8867 145.145 cv
cp
f
14.4233 147.203 mo
14.4233 147.551 14.1411 147.832 13.7949 147.832 cv
13.4487 147.832 13.1665 147.551 13.1665 147.203 cv
13.1665 146.856 13.4487 146.573 13.7949 146.573 cv
14.1411 146.573 14.4233 146.856 14.4233 147.203 cv
cp
f
22.6553 147.203 mo
22.6553 147.551 22.374 147.832 22.0269 147.832 cv
21.6797 147.832 21.3984 147.551 21.3984 147.203 cv
21.3984 146.856 21.6797 146.573 22.0269 146.573 cv
22.374 146.573 22.6553 146.856 22.6553 147.203 cv
cp
f
28.8291 147.203 mo
28.8291 147.551 28.5479 147.832 28.2002 147.832 cv
27.8545 147.832 27.5728 147.551 27.5728 147.203 cv
27.5728 146.856 27.8545 146.573 28.2002 146.573 cv
28.5479 146.573 28.8291 146.856 28.8291 147.203 cv
cp
f
8.24951 151.318 mo
8.24951 151.667 7.96777 151.948 7.62061 151.948 cv
7.27441 151.948 6.99219 151.667 6.99219 151.318 cv
6.99219 150.973 7.27441 150.691 7.62061 150.691 cv
7.96777 150.691 8.24951 150.973 8.24951 151.318 cv
cp
f
10.3071 151.318 mo
10.3071 151.667 10.0254 151.948 9.6792 151.948 cv
9.33154 151.948 9.05029 151.667 9.05029 151.318 cv
9.05029 150.973 9.33154 150.691 9.6792 150.691 cv
10.0254 150.691 10.3071 150.973 10.3071 151.318 cv
cp
f
14.4233 151.318 mo
14.4233 151.667 14.1411 151.948 13.7949 151.948 cv
13.4487 151.948 13.1665 151.667 13.1665 151.318 cv
13.1665 150.973 13.4487 150.691 13.7949 150.691 cv
14.1411 150.691 14.4233 150.973 14.4233 151.318 cv
cp
f
18.5396 151.318 mo
18.5396 151.667 18.2588 151.948 17.9111 151.948 cv
17.564 151.948 17.2832 151.667 17.2832 151.318 cv
17.2832 150.973 17.564 150.691 17.9111 150.691 cv
18.2588 150.691 18.5396 150.973 18.5396 151.318 cv
cp
f
20.5972 151.318 mo
20.5972 151.667 20.3164 151.948 19.9692 151.948 cv
19.6216 151.948 19.3408 151.667 19.3408 151.318 cv
19.3408 150.973 19.6216 150.691 19.9692 150.691 cv
20.3164 150.691 20.5972 150.973 20.5972 151.318 cv
cp
f
24.7129 151.318 mo
24.7129 151.667 24.4316 151.948 24.085 151.948 cv
23.7378 151.948 23.4565 151.667 23.4565 151.318 cv
23.4565 150.973 23.7378 150.691 24.085 150.691 cv
24.4316 150.691 24.7129 150.973 24.7129 151.318 cv
cp
f
26.7715 151.318 mo
26.7715 151.667 26.4902 151.948 26.1426 151.948 cv
25.7949 151.948 25.5142 151.667 25.5142 151.318 cv
25.5142 150.973 25.7949 150.691 26.1426 150.691 cv
26.4902 150.691 26.7715 150.973 26.7715 151.318 cv
cp
f
58.3501 151.316 mo
58.3501 150.971 58.6304 150.69 58.9775 150.69 cv
59.3247 150.69 59.6069 150.971 59.6069 151.316 cv
59.6069 151.665 59.3247 151.946 58.9775 151.946 cv
58.6304 151.946 58.3501 151.665 58.3501 151.316 cv
.0627451 .207843 .309804 rgb
f
56.2915 151.316 mo
56.2915 150.971 56.5728 150.69 56.9209 150.69 cv
57.2666 150.69 57.5478 150.971 57.5478 151.316 cv
57.5478 151.665 57.2666 151.946 56.9209 151.946 cv
56.5728 151.946 56.2915 151.665 56.2915 151.316 cv
f
52.1757 151.316 mo
52.1757 150.971 52.457 150.69 52.8032 150.69 cv
53.1509 150.69 53.4326 150.971 53.4326 151.316 cv
53.4326 151.665 53.1509 151.946 52.8032 151.946 cv
52.457 151.946 52.1757 151.665 52.1757 151.316 cv
f
48.06 151.316 mo
48.06 150.971 48.3403 150.69 48.6875 150.69 cv
49.0347 150.69 49.3159 150.971 49.3159 151.316 cv
49.3159 151.665 49.0347 151.946 48.6875 151.946 cv
48.3403 151.946 48.06 151.665 48.06 151.316 cv
f
46.0005 151.316 mo
46.0005 150.971 46.2817 150.69 46.6298 150.69 cv
46.9775 150.69 47.2578 150.971 47.2578 151.316 cv
47.2578 151.665 46.9775 151.946 46.6298 151.946 cv
46.2817 151.946 46.0005 151.665 46.0005 151.316 cv
f
43.9443 151.316 mo
43.9443 150.971 44.2237 150.69 44.5718 150.69 cv
44.9179 150.69 45.2002 150.971 45.2002 151.316 cv
45.2002 151.665 44.9179 151.946 44.5718 151.946 cv
44.2237 151.946 43.9443 151.665 43.9443 151.316 cv
f
39.8281 151.316 mo
39.8281 150.971 40.1094 150.69 40.4561 150.69 cv
40.8022 150.69 41.0845 150.971 41.0845 151.316 cv
41.0845 151.665 40.8022 151.946 40.4561 151.946 cv
40.1094 151.946 39.8281 151.665 39.8281 151.316 cv
cp
f
58.3501 149.259 mo
58.3501 148.912 58.6304 148.63 58.9775 148.63 cv
59.3247 148.63 59.6069 148.912 59.6069 149.259 cv
59.6069 149.607 59.3247 149.886 58.9775 149.886 cv
58.6304 149.886 58.3501 149.607 58.3501 149.259 cv
f
52.1757 149.259 mo
52.1757 148.912 52.457 148.63 52.8032 148.63 cv
53.1509 148.63 53.4326 148.912 53.4326 149.259 cv
53.4326 149.607 53.1509 149.886 52.8032 149.886 cv
52.457 149.886 52.1757 149.607 52.1757 149.259 cv
f
46.0005 149.259 mo
46.0005 148.912 46.2817 148.63 46.6298 148.63 cv
46.9775 148.63 47.2578 148.912 47.2578 149.259 cv
47.2578 149.607 46.9775 149.886 46.6298 149.886 cv
46.2817 149.886 46.0005 149.607 46.0005 149.259 cv
f
43.9443 149.259 mo
43.9443 148.912 44.2237 148.63 44.5718 148.63 cv
44.9179 148.63 45.2002 148.912 45.2002 149.259 cv
45.2002 149.607 44.9179 149.886 44.5718 149.886 cv
44.2237 149.886 43.9443 149.607 43.9443 149.259 cv
f
39.8281 149.259 mo
39.8281 148.912 40.1094 148.63 40.4561 148.63 cv
40.8022 148.63 41.0845 148.912 41.0845 149.259 cv
41.0845 149.607 40.8022 149.886 40.4561 149.886 cv
40.1094 149.886 39.8281 149.607 39.8281 149.259 cv
cp
f
37.769 149.259 mo
37.769 148.912 38.0503 148.63 38.3975 148.63 cv
38.7456 148.63 39.0269 148.912 39.0269 149.259 cv
39.0269 149.607 38.7456 149.886 38.3975 149.886 cv
38.0503 149.886 37.769 149.607 37.769 149.259 cv
cp
f
35.7114 149.259 mo
35.7114 148.912 35.9932 148.63 36.3398 148.63 cv
36.687 148.63 36.9683 148.912 36.9683 149.259 cv
36.9683 149.607 36.687 149.886 36.3398 149.886 cv
35.9932 149.886 35.7114 149.607 35.7114 149.259 cv
cp
f
58.3501 145.144 mo
58.3501 144.796 58.6304 144.515 58.9775 144.515 cv
59.3247 144.515 59.6069 144.796 59.6069 145.144 cv
59.6069 145.491 59.3247 145.772 58.9775 145.772 cv
58.6304 145.772 58.3501 145.491 58.3501 145.144 cv
cp
f
54.2334 145.144 mo
54.2334 144.796 54.5137 144.515 54.8618 144.515 cv
55.209 144.515 55.4902 144.796 55.4902 145.144 cv
55.4902 145.491 55.209 145.772 54.8618 145.772 cv
54.5137 145.772 54.2334 145.491 54.2334 145.144 cv
cp
f
50.1172 145.144 mo
50.1172 144.796 50.3994 144.515 50.7451 144.515 cv
51.0933 144.515 51.3735 144.796 51.3735 145.144 cv
51.3735 145.491 51.0933 145.772 50.7451 145.772 cv
50.3994 145.772 50.1172 145.491 50.1172 145.144 cv
cp
f
48.0601 145.144 mo
48.0601 144.796 48.3403 144.515 48.6875 144.515 cv
49.0347 144.515 49.3159 144.796 49.3159 145.144 cv
49.3159 145.491 49.0347 145.772 48.6875 145.772 cv
48.3403 145.772 48.0601 145.491 48.0601 145.144 cv
cp
f
41.8848 145.144 mo
41.8848 144.796 42.166 144.515 42.5141 144.515 cv
42.8608 144.515 43.1421 144.796 43.1421 145.144 cv
43.1421 145.491 42.8608 145.772 42.5141 145.772 cv
42.166 145.772 41.8848 145.491 41.8848 145.144 cv
f
39.8281 145.144 mo
39.8281 144.796 40.1094 144.515 40.4561 144.515 cv
40.8022 144.515 41.0845 144.796 41.0845 145.144 cv
41.0845 145.491 40.8022 145.772 40.4561 145.772 cv
40.1094 145.772 39.8281 145.491 39.8281 145.144 cv
cp
f
37.769 145.144 mo
37.769 144.796 38.0503 144.515 38.3975 144.515 cv
38.7456 144.515 39.0269 144.796 39.0269 145.144 cv
39.0269 145.491 38.7456 145.772 38.3975 145.772 cv
38.0503 145.772 37.769 145.491 37.769 145.144 cv
cp
f
35.7114 145.144 mo
35.7114 144.796 35.9932 144.515 36.3398 144.515 cv
36.687 144.515 36.9683 144.796 36.9683 145.144 cv
36.9683 145.491 36.687 145.772 36.3398 145.772 cv
35.9932 145.772 35.7114 145.491 35.7114 145.144 cv
cp
f
56.2915 143.085 mo
56.2915 142.738 56.5728 142.458 56.9209 142.458 cv
57.2666 142.458 57.5479 142.738 57.5479 143.085 cv
57.5479 143.432 57.2666 143.713 56.9209 143.713 cv
56.5728 143.713 56.2915 143.432 56.2915 143.085 cv
cp
f
54.2334 143.085 mo
54.2334 142.738 54.5137 142.458 54.8618 142.458 cv
55.209 142.458 55.4902 142.738 55.4902 143.085 cv
55.4902 143.432 55.209 143.713 54.8618 143.713 cv
54.5137 143.713 54.2334 143.432 54.2334 143.085 cv
cp
f
50.1172 143.085 mo
50.1172 142.738 50.3994 142.458 50.7451 142.458 cv
51.0933 142.458 51.3735 142.738 51.3735 143.085 cv
51.3735 143.432 51.0933 143.713 50.7451 143.713 cv
50.3994 143.713 50.1172 143.432 50.1172 143.085 cv
cp
f
48.0601 143.085 mo
48.0601 142.738 48.3403 142.458 48.6875 142.458 cv
49.0347 142.458 49.3159 142.738 49.3159 143.085 cv
49.3159 143.432 49.0347 143.713 48.6875 143.713 cv
48.3403 143.713 48.0601 143.432 48.0601 143.085 cv
cp
f
46.0005 143.085 mo
46.0005 142.738 46.2817 142.458 46.6299 142.458 cv
46.9775 142.458 47.2578 142.738 47.2578 143.085 cv
47.2578 143.432 46.9775 143.713 46.6299 143.713 cv
46.2817 143.713 46.0005 143.432 46.0005 143.085 cv
cp
f
39.8281 143.085 mo
39.8281 142.738 40.1094 142.458 40.4561 142.458 cv
40.8022 142.458 41.0845 142.738 41.0845 143.085 cv
41.0845 143.432 40.8022 143.713 40.4561 143.713 cv
40.1094 143.713 39.8281 143.432 39.8281 143.085 cv
cp
f
37.769 143.085 mo
37.769 142.738 38.0503 142.458 38.3975 142.458 cv
38.7456 142.458 39.0269 142.738 39.0269 143.085 cv
39.0269 143.432 38.7456 143.713 38.3975 143.713 cv
38.0503 143.713 37.769 143.432 37.769 143.085 cv
cp
f
58.3501 141.027 mo
58.3501 140.681 58.6304 140.399 58.9775 140.399 cv
59.3247 140.399 59.6069 140.681 59.6069 141.027 cv
59.6069 141.375 59.3247 141.657 58.9775 141.657 cv
58.6304 141.657 58.3501 141.375 58.3501 141.027 cv
cp
f
56.2915 141.027 mo
56.2915 140.681 56.5728 140.399 56.9209 140.399 cv
57.2666 140.399 57.5479 140.681 57.5479 141.027 cv
57.5479 141.375 57.2666 141.657 56.9209 141.657 cv
56.5728 141.657 56.2915 141.375 56.2915 141.027 cv
cp
f
46.0005 141.027 mo
46.0005 140.681 46.2817 140.399 46.6299 140.399 cv
46.9775 140.399 47.2578 140.681 47.2578 141.027 cv
47.2578 141.375 46.9775 141.657 46.6299 141.657 cv
46.2817 141.657 46.0005 141.375 46.0005 141.027 cv
cp
f
43.9443 141.027 mo
43.9443 140.681 44.2236 140.399 44.5718 140.399 cv
44.918 140.399 45.2002 140.681 45.2002 141.027 cv
45.2002 141.375 44.918 141.657 44.5718 141.657 cv
44.2236 141.657 43.9443 141.375 43.9443 141.027 cv
cp
f
37.769 141.027 mo
37.769 140.681 38.0503 140.399 38.3975 140.399 cv
38.7456 140.399 39.0269 140.681 39.0269 141.027 cv
39.0269 141.375 38.7456 141.657 38.3975 141.657 cv
38.0503 141.657 37.769 141.375 37.769 141.027 cv
cp
f
58.3501 136.912 mo
58.3501 136.565 58.6304 136.282 58.9775 136.282 cv
59.3247 136.282 59.6069 136.565 59.6069 136.912 cv
59.6069 137.256 59.3247 137.54 58.9775 137.54 cv
58.6304 137.54 58.3501 137.256 58.3501 136.912 cv
cp
f
56.2915 136.912 mo
56.2915 136.565 56.5728 136.282 56.9209 136.282 cv
57.2666 136.282 57.5479 136.565 57.5479 136.912 cv
57.5479 137.256 57.2666 137.54 56.9209 137.54 cv
56.5728 137.54 56.2915 137.256 56.2915 136.912 cv
cp
f
54.2334 136.912 mo
54.2334 136.565 54.5137 136.282 54.8618 136.282 cv
55.209 136.282 55.4902 136.565 55.4902 136.912 cv
55.4902 137.256 55.209 137.54 54.8618 137.54 cv
54.5137 137.54 54.2334 137.256 54.2334 136.912 cv
cp
f
52.1758 136.912 mo
52.1758 136.565 52.457 136.282 52.8032 136.282 cv
53.1509 136.282 53.4326 136.565 53.4326 136.912 cv
53.4326 137.256 53.1509 137.54 52.8032 137.54 cv
52.457 137.54 52.1758 137.256 52.1758 136.912 cv
cp
f
50.1172 136.912 mo
50.1172 136.565 50.3994 136.282 50.7451 136.282 cv
51.0933 136.282 51.3735 136.565 51.3735 136.912 cv
51.3735 137.256 51.0933 137.54 50.7451 137.54 cv
50.3994 137.54 50.1172 137.256 50.1172 136.912 cv
cp
f
43.9443 136.912 mo
43.9443 136.565 44.2236 136.282 44.5718 136.282 cv
44.918 136.282 45.2002 136.565 45.2002 136.912 cv
45.2002 137.256 44.918 137.54 44.5718 137.54 cv
44.2236 137.54 43.9443 137.256 43.9443 136.912 cv
cp
f
39.8281 136.912 mo
39.8281 136.565 40.1094 136.282 40.4561 136.282 cv
40.8022 136.282 41.0845 136.565 41.0845 136.912 cv
41.0845 137.256 40.8022 137.54 40.4561 137.54 cv
40.1094 137.54 39.8281 137.256 39.8281 136.912 cv
cp
f
58.3501 134.853 mo
58.3501 134.507 58.6304 134.226 58.9775 134.226 cv
59.3247 134.226 59.6069 134.507 59.6069 134.853 cv
59.6069 135.201 59.3247 135.481 58.9775 135.481 cv
58.6304 135.481 58.3501 135.201 58.3501 134.853 cv
cp
f
56.2915 134.853 mo
56.2915 134.507 56.5728 134.226 56.9209 134.226 cv
57.2666 134.226 57.5479 134.507 57.5479 134.853 cv
57.5479 135.201 57.2666 135.481 56.9209 135.481 cv
56.5728 135.481 56.2915 135.201 56.2915 134.853 cv
cp
f
52.1758 134.853 mo
52.1758 134.507 52.457 134.226 52.8032 134.226 cv
53.1509 134.226 53.4326 134.507 53.4326 134.853 cv
53.4326 135.201 53.1509 135.481 52.8032 135.481 cv
52.457 135.481 52.1758 135.201 52.1758 134.853 cv
cp
f
46.0005 134.853 mo
46.0005 134.507 46.2817 134.226 46.6299 134.226 cv
46.9775 134.226 47.2578 134.507 47.2578 134.853 cv
47.2578 135.201 46.9775 135.481 46.6299 135.481 cv
46.2817 135.481 46.0005 135.201 46.0005 134.853 cv
cp
f
43.9443 134.853 mo
43.9443 134.507 44.2236 134.226 44.5718 134.226 cv
44.918 134.226 45.2002 134.507 45.2002 134.853 cv
45.2002 135.201 44.918 135.481 44.5718 135.481 cv
44.2236 135.481 43.9443 135.201 43.9443 134.853 cv
cp
f
41.8848 134.853 mo
41.8848 134.507 42.166 134.226 42.5142 134.226 cv
42.8608 134.226 43.1421 134.507 43.1421 134.853 cv
43.1421 135.201 42.8608 135.481 42.5142 135.481 cv
42.166 135.481 41.8848 135.201 41.8848 134.853 cv
cp
f
39.8281 134.853 mo
39.8281 134.507 40.1094 134.226 40.4561 134.226 cv
40.8022 134.226 41.0845 134.507 41.0845 134.853 cv
41.0845 135.201 40.8022 135.481 40.4561 135.481 cv
40.1094 135.481 39.8281 135.201 39.8281 134.853 cv
cp
f
37.769 134.853 mo
37.769 134.507 38.0503 134.226 38.3975 134.226 cv
38.7456 134.226 39.0269 134.507 39.0269 134.853 cv
39.0269 135.201 38.7456 135.481 38.3975 135.481 cv
38.0503 135.481 37.769 135.201 37.769 134.853 cv
cp
f
52.1758 132.795 mo
52.1758 132.448 52.457 132.167 52.8032 132.167 cv
53.1509 132.167 53.4326 132.448 53.4326 132.795 cv
53.4326 133.143 53.1509 133.424 52.8032 133.424 cv
52.457 133.424 52.1758 133.143 52.1758 132.795 cv
cp
f
48.0601 132.795 mo
48.0601 132.448 48.3403 132.167 48.6875 132.167 cv
49.0347 132.167 49.3159 132.448 49.3159 132.795 cv
49.3159 133.143 49.0347 133.424 48.6875 133.424 cv
48.3403 133.424 48.0601 133.143 48.0601 132.795 cv
cp
f
46.0005 132.795 mo
46.0005 132.448 46.2817 132.167 46.6299 132.167 cv
46.9775 132.167 47.2578 132.448 47.2578 132.795 cv
47.2578 133.143 46.9775 133.424 46.6299 133.424 cv
46.2817 133.424 46.0005 133.143 46.0005 132.795 cv
cp
f
43.9443 132.795 mo
43.9443 132.448 44.2236 132.167 44.5718 132.167 cv
44.918 132.167 45.2002 132.448 45.2002 132.795 cv
45.2002 133.143 44.918 133.424 44.5718 133.424 cv
44.2236 133.424 43.9443 133.143 43.9443 132.795 cv
cp
f
39.8281 132.795 mo
39.8281 132.448 40.1094 132.167 40.4561 132.167 cv
40.8022 132.167 41.0845 132.448 41.0845 132.795 cv
41.0845 133.143 40.8022 133.424 40.4561 133.424 cv
40.1094 133.424 39.8281 133.143 39.8281 132.795 cv
cp
f
58.3501 128.679 mo
58.3501 128.331 58.6304 128.053 58.9775 128.053 cv
59.3247 128.053 59.6069 128.331 59.6069 128.679 cv
59.6069 129.027 59.3247 129.309 58.9775 129.309 cv
58.6304 129.309 58.3501 129.027 58.3501 128.679 cv
cp
f
56.2915 128.679 mo
56.2915 128.331 56.5728 128.053 56.9209 128.053 cv
57.2666 128.053 57.5479 128.331 57.5479 128.679 cv
57.5479 129.027 57.2666 129.309 56.9209 129.309 cv
56.5728 129.309 56.2915 129.027 56.2915 128.679 cv
cp
f
54.2334 128.679 mo
54.2334 128.331 54.5137 128.053 54.8618 128.053 cv
55.209 128.053 55.4902 128.331 55.4902 128.679 cv
55.4902 129.027 55.209 129.309 54.8618 129.309 cv
54.5137 129.309 54.2334 129.027 54.2334 128.679 cv
cp
f
50.1172 128.679 mo
50.1172 128.331 50.3994 128.053 50.7451 128.053 cv
51.0933 128.053 51.3735 128.331 51.3735 128.679 cv
51.3735 129.027 51.0933 129.309 50.7451 129.309 cv
50.3994 129.309 50.1172 129.027 50.1172 128.679 cv
cp
f
48.0601 128.679 mo
48.0601 128.331 48.3403 128.053 48.6875 128.053 cv
49.0347 128.053 49.3159 128.331 49.3159 128.679 cv
49.3159 129.027 49.0347 129.309 48.6875 129.309 cv
48.3403 129.309 48.0601 129.027 48.0601 128.679 cv
cp
f
46.0005 128.679 mo
46.0005 128.331 46.2817 128.053 46.6299 128.053 cv
46.9775 128.053 47.2578 128.331 47.2578 128.679 cv
47.2578 129.027 46.9775 129.309 46.6299 129.309 cv
46.2817 129.309 46.0005 129.027 46.0005 128.679 cv
cp
f
41.8848 128.679 mo
41.8848 128.331 42.166 128.053 42.5142 128.053 cv
42.8608 128.053 43.1421 128.331 43.1421 128.679 cv
43.1421 129.027 42.8608 129.309 42.5142 129.309 cv
42.166 129.309 41.8848 129.027 41.8848 128.679 cv
cp
f
39.8281 128.679 mo
39.8281 128.331 40.1094 128.053 40.4561 128.053 cv
40.8022 128.053 41.0845 128.331 41.0845 128.679 cv
41.0845 129.027 40.8022 129.309 40.4561 129.309 cv
40.1094 129.309 39.8281 129.027 39.8281 128.679 cv
cp
f
35.7114 128.679 mo
35.7114 128.331 35.9932 128.053 36.3398 128.053 cv
36.687 128.053 36.9683 128.331 36.9683 128.679 cv
36.9683 129.027 36.687 129.309 36.3398 129.309 cv
35.9932 129.309 35.7114 129.027 35.7114 128.679 cv
cp
f
58.3501 126.623 mo
58.3501 126.274 58.6304 125.992 58.9775 125.992 cv
59.3247 125.992 59.6069 126.274 59.6069 126.623 cv
59.6069 126.967 59.3247 127.249 58.9775 127.249 cv
58.6304 127.249 58.3501 126.967 58.3501 126.623 cv
cp
f
56.2915 126.623 mo
56.2915 126.274 56.5728 125.992 56.9209 125.992 cv
57.2666 125.992 57.5479 126.274 57.5479 126.623 cv
57.5479 126.967 57.2666 127.249 56.9209 127.249 cv
56.5728 127.249 56.2915 126.967 56.2915 126.623 cv
cp
f
48.0601 126.623 mo
48.0601 126.274 48.3403 125.992 48.6875 125.992 cv
49.0347 125.992 49.3159 126.274 49.3159 126.623 cv
49.3159 126.967 49.0347 127.249 48.6875 127.249 cv
48.3403 127.249 48.0601 126.967 48.0601 126.623 cv
cp
f
43.9443 126.623 mo
43.9443 126.274 44.2236 125.992 44.5718 125.992 cv
44.918 125.992 45.2002 126.274 45.2002 126.623 cv
45.2002 126.967 44.918 127.249 44.5718 127.249 cv
44.2236 127.249 43.9443 126.967 43.9443 126.623 cv
cp
f
41.8848 126.623 mo
41.8848 126.274 42.166 125.992 42.5142 125.992 cv
42.8608 125.992 43.1421 126.274 43.1421 126.623 cv
43.1421 126.967 42.8608 127.249 42.5142 127.249 cv
42.166 127.249 41.8848 126.967 41.8848 126.623 cv
cp
f
35.7114 126.623 mo
35.7114 126.274 35.9932 125.992 36.3398 125.992 cv
36.687 125.992 36.9683 126.274 36.9683 126.623 cv
36.9683 126.967 36.687 127.249 36.3398 127.249 cv
35.9932 127.249 35.7114 126.967 35.7114 126.623 cv
cp
f
58.3501 122.504 mo
58.3501 122.159 58.6304 121.876 58.9775 121.876 cv
59.3247 121.876 59.6069 122.159 59.6069 122.504 cv
59.6069 122.852 59.3247 123.134 58.9775 123.134 cv
58.6304 123.134 58.3501 122.852 58.3501 122.504 cv
cp
f
56.2915 122.504 mo
56.2915 122.159 56.5728 121.876 56.9209 121.876 cv
57.2666 121.876 57.5479 122.159 57.5479 122.504 cv
57.5479 122.852 57.2666 123.134 56.9209 123.134 cv
56.5728 123.134 56.2915 122.852 56.2915 122.504 cv
cp
f
54.2334 122.504 mo
54.2334 122.159 54.5137 121.876 54.8618 121.876 cv
55.209 121.876 55.4902 122.159 55.4902 122.504 cv
55.4902 122.852 55.209 123.134 54.8618 123.134 cv
54.5137 123.134 54.2334 122.852 54.2334 122.504 cv
cp
f
50.1172 122.504 mo
50.1172 122.159 50.3994 121.876 50.7451 121.876 cv
51.0933 121.876 51.3735 122.159 51.3735 122.504 cv
51.3735 122.852 51.0933 123.134 50.7451 123.134 cv
50.3994 123.134 50.1172 122.852 50.1172 122.504 cv
cp
f
48.0601 122.504 mo
48.0601 122.159 48.3403 121.876 48.6875 121.876 cv
49.0347 121.876 49.3159 122.159 49.3159 122.504 cv
49.3159 122.852 49.0347 123.134 48.6875 123.134 cv
48.3403 123.134 48.0601 122.852 48.0601 122.504 cv
cp
f
41.8848 122.504 mo
41.8848 122.159 42.166 121.876 42.5142 121.876 cv
42.8608 121.876 43.1421 122.159 43.1421 122.504 cv
43.1421 122.852 42.8608 123.134 42.5142 123.134 cv
42.166 123.134 41.8848 122.852 41.8848 122.504 cv
cp
f
37.769 122.504 mo
37.769 122.159 38.0503 121.876 38.3975 121.876 cv
38.7456 121.876 39.0269 122.159 39.0269 122.504 cv
39.0269 122.852 38.7456 123.134 38.3975 123.134 cv
38.0503 123.134 37.769 122.852 37.769 122.504 cv
cp
f
35.7114 122.504 mo
35.7114 122.159 35.9932 121.876 36.3398 121.876 cv
36.687 121.876 36.9683 122.159 36.9683 122.504 cv
36.9683 122.852 36.687 123.134 36.3398 123.134 cv
35.9932 123.134 35.7114 122.852 35.7114 122.504 cv
cp
f
58.3501 120.447 mo
58.3501 120.1 58.6304 119.819 58.9775 119.819 cv
59.3247 119.819 59.6069 120.1 59.6069 120.447 cv
59.6069 120.795 59.3247 121.074 58.9775 121.074 cv
58.6304 121.074 58.3501 120.795 58.3501 120.447 cv
cp
f
56.2915 120.447 mo
56.2915 120.1 56.5728 119.819 56.9209 119.819 cv
57.2666 119.819 57.5479 120.1 57.5479 120.447 cv
57.5479 120.795 57.2666 121.074 56.9209 121.074 cv
56.5728 121.074 56.2915 120.795 56.2915 120.447 cv
cp
f
52.1758 120.447 mo
52.1758 120.1 52.457 119.819 52.8032 119.819 cv
53.1509 119.819 53.4326 120.1 53.4326 120.447 cv
53.4326 120.795 53.1509 121.074 52.8032 121.074 cv
52.457 121.074 52.1758 120.795 52.1758 120.447 cv
cp
f
48.0601 120.447 mo
48.0601 120.1 48.3403 119.819 48.6875 119.819 cv
49.0347 119.819 49.3159 120.1 49.3159 120.447 cv
49.3159 120.795 49.0347 121.074 48.6875 121.074 cv
48.3403 121.074 48.0601 120.795 48.0601 120.447 cv
cp
f
43.9443 120.447 mo
43.9443 120.1 44.2236 119.819 44.5718 119.819 cv
44.918 119.819 45.2002 120.1 45.2002 120.447 cv
45.2002 120.795 44.918 121.074 44.5718 121.074 cv
44.2236 121.074 43.9443 120.795 43.9443 120.447 cv
cp
f
39.8281 120.447 mo
39.8281 120.1 40.1094 119.819 40.4561 119.819 cv
40.8022 119.819 41.0845 120.1 41.0845 120.447 cv
41.0845 120.795 40.8022 121.074 40.4561 121.074 cv
40.1094 121.074 39.8281 120.795 39.8281 120.447 cv
cp
f
37.769 120.447 mo
37.769 120.1 38.0503 119.819 38.3975 119.819 cv
38.7456 119.819 39.0269 120.1 39.0269 120.447 cv
39.0269 120.795 38.7456 121.074 38.3975 121.074 cv
38.0503 121.074 37.769 120.795 37.769 120.447 cv
cp
f
35.7114 120.447 mo
35.7114 120.1 35.9932 119.819 36.3398 119.819 cv
36.687 119.819 36.9683 120.1 36.9683 120.447 cv
36.9683 120.795 36.687 121.074 36.3398 121.074 cv
35.9932 121.074 35.7114 120.795 35.7114 120.447 cv
cp
f
52.1758 118.388 mo
52.1758 118.042 52.457 117.761 52.8032 117.761 cv
53.1509 117.761 53.4326 118.042 53.4326 118.388 cv
53.4326 118.735 53.1509 119.018 52.8032 119.018 cv
52.457 119.018 52.1758 118.735 52.1758 118.388 cv
cp
f
43.9443 118.388 mo
43.9443 118.042 44.2236 117.761 44.5718 117.761 cv
44.918 117.761 45.2002 118.042 45.2002 118.388 cv
45.2002 118.735 44.918 119.018 44.5718 119.018 cv
44.2236 119.018 43.9443 118.735 43.9443 118.388 cv
cp
f
37.769 118.388 mo
37.769 118.042 38.0503 117.761 38.3975 117.761 cv
38.7456 117.761 39.0269 118.042 39.0269 118.388 cv
39.0269 118.735 38.7456 119.018 38.3975 119.018 cv
38.0503 119.018 37.769 118.735 37.769 118.388 cv
cp
f
58.3501 114.271 mo
58.3501 113.927 58.6304 113.646 58.9775 113.646 cv
59.3247 113.646 59.6069 113.927 59.6069 114.271 cv
59.6069 114.62 59.3247 114.902 58.9775 114.902 cv
58.6304 114.902 58.3501 114.62 58.3501 114.271 cv
cp
f
56.2915 114.271 mo
56.2915 113.927 56.5728 113.646 56.9209 113.646 cv
57.2666 113.646 57.5479 113.927 57.5479 114.271 cv
57.5479 114.62 57.2666 114.902 56.9209 114.902 cv
56.5728 114.902 56.2915 114.62 56.2915 114.271 cv
cp
f
52.1758 114.271 mo
52.1758 113.927 52.457 113.646 52.8032 113.646 cv
53.1509 113.646 53.4326 113.927 53.4326 114.271 cv
53.4326 114.62 53.1509 114.902 52.8032 114.902 cv
52.457 114.902 52.1758 114.62 52.1758 114.271 cv
cp
f
48.0601 114.271 mo
48.0601 113.927 48.3403 113.646 48.6875 113.646 cv
49.0347 113.646 49.3159 113.927 49.3159 114.271 cv
49.3159 114.62 49.0347 114.902 48.6875 114.902 cv
48.3403 114.902 48.0601 114.62 48.0601 114.271 cv
cp
f
46.0005 114.271 mo
46.0005 113.927 46.2817 113.646 46.6299 113.646 cv
46.9775 113.646 47.2578 113.927 47.2578 114.271 cv
47.2578 114.62 46.9775 114.902 46.6299 114.902 cv
46.2817 114.902 46.0005 114.62 46.0005 114.271 cv
cp
f
41.8848 114.271 mo
41.8848 113.927 42.166 113.646 42.5142 113.646 cv
42.8608 113.646 43.1421 113.927 43.1421 114.271 cv
43.1421 114.62 42.8608 114.902 42.5142 114.902 cv
42.166 114.902 41.8848 114.62 41.8848 114.271 cv
cp
f
39.8281 114.271 mo
39.8281 113.927 40.1094 113.646 40.4561 113.646 cv
40.8022 113.646 41.0845 113.927 41.0845 114.271 cv
41.0845 114.62 40.8022 114.902 40.4561 114.902 cv
40.1094 114.902 39.8281 114.62 39.8281 114.271 cv
cp
f
62.1562 180.483 mo
62.1562 180.483 62.1562 178.44 58.2519 177.219 cv
54.3491 176.003 49.1123 170.799 49.1123 170.799 cv
49.1123 170.799 47.17 166.57 43.6914 164.227 cv
42.1347 163.18 41.6782 161.514 43.0361 160.335 cv
44.398 159.157 47.2891 161.67 51.3056 165.259 cv
51.3056 165.259 51.9858 165.693 50.56 163.121 cv
49.1303 160.54 42.9389 148.306 42.9389 148.306 cv
42.9389 148.306 41.1138 145.479 43.3213 144.361 cv
45.3345 143.332 45.9902 145.526 46.5791 146.683 cv
47.17 147.84 51.7266 156.741 51.7266 156.741 cv
51.7266 156.741 52.2852 156.995 52.2691 156.465 cv
49.5415 151.1 li
49.5415 151.1 48.5669 149.39 49.9927 148.639 cv
51.6739 147.749 52.2832 148.833 52.6552 149.565 cv
53.0288 150.3 55.4023 154.968 55.4023 154.968 cv
55.4023 154.968 56.0181 155.386 55.998 154.664 cv
53.5839 149.919 li
53.5839 149.919 52.9307 148.747 54.4419 147.978 cv
55.9516 147.212 56.4937 148.39 56.4937 148.39 cv
58.9858 153.293 li
58.9858 153.293 59.3852 153.622 59.4917 153.034 cv
57.8027 149.718 li
57.8027 149.718 57.3647 148.636 58.8492 147.927 cv
60.3321 147.222 60.9048 148.381 60.9048 148.381 cv
70.6274 167.5 li
70.6274 167.5 72.1225 170.166 71.1607 171.676 cv
70.1983 173.185 72.1147 175.415 72.1147 175.415 cv
62.1562 180.483 li
.956863 .713726 .505882 rgb
f
62.1562 180.483 mo
62.1562 180.483 62.1562 180.483 62.1562 180.483 cv
62.1562 180.483 62.1562 180.483 62.1562 180.483 cv
62.1561 180.467 62.141 178.436 58.2519 177.219 cv
54.3491 176.003 49.1123 170.799 49.1123 170.799 cv
49.1123 170.799 47.17 166.57 43.6914 164.227 cv
42.7671 163.605 42.2307 162.765 42.2316 161.939 cv
42.2323 161.373 42.4845 160.814 43.0361 160.335 cv
43.2674 160.135 43.5428 160.042 43.8602 160.042 cv
45.4123 160.042 47.9711 162.279 51.3056 165.259 cv
51.3056 165.259 51.3489 165.286 51.3908 165.286 cv
51.43 165.286 51.468 165.262 51.4678 165.168 cv
51.4674 164.965 51.2888 164.436 50.56 163.121 cv
49.6348 161.451 46.7153 155.738 44.7703 151.914 cv
44.5714 151.523 44.3826 151.151 44.2073 150.806 cv
43.4476 149.311 42.9389 148.306 42.9389 148.306 cv
42.9389 148.306 42.2304 147.208 42.2302 146.11 cv
42.23 145.446 42.4891 144.782 43.3213 144.361 cv
43.6862 144.174 44.0068 144.094 44.2902 144.094 cv
45.5703 144.094 46.097 145.736 46.5791 146.683 cv
47.17 147.84 51.7266 156.741 51.7266 156.741 cv
51.7266 156.741 51.8603 156.802 51.995 156.802 cv
52.1312 156.802 52.2684 156.74 52.2694 156.49 cv
52.2694 156.482 52.2693 156.473 52.2691 156.465 cv
49.5415 151.1 li
49.5415 151.1 49.2158 150.528 49.2164 149.901 cv
49.2169 149.443 49.3912 148.956 49.9927 148.639 cv
50.4427 148.401 50.816 148.304 51.1285 148.304 cv
51.9832 148.304 52.3828 149.029 52.6552 149.565 cv
53.0288 150.3 55.4023 154.968 55.4023 154.968 cv
55.4023 154.968 55.5798 155.088 55.741 155.088 cv
55.8758 155.088 55.9993 155.004 55.9985 154.695 cv
55.9985 154.685 55.9983 154.675 55.998 154.664 cv
53.5839 149.919 li
53.5839 149.919 53.444 149.668 53.4435 149.322 cv
53.4429 148.92 53.6302 148.391 54.4419 147.978 cv
54.8122 147.79 55.1244 147.719 55.3845 147.719 cv
56.1851 147.719 56.4937 148.39 56.4937 148.39 cv
58.9858 153.293 li
58.9858 153.293 59.0973 153.385 59.2181 153.385 cv
59.3261 153.385 59.4415 153.312 59.4917 153.034 cv
59.4917 153.034 li
59.4917 153.034 li
57.8027 149.718 li
57.8027 149.718 57.7424 149.569 57.7424 149.345 cv
57.7424 148.966 57.9156 148.373 58.8492 147.927 cv
59.195 147.763 59.4914 147.7 59.7425 147.7 cv
60.5681 147.7 60.9048 148.381 60.9048 148.381 cv
70.6274 167.5 li
70.6274 167.5 71.4816 169.023 71.4833 170.419 cv
71.4839 170.87 71.3955 171.307 71.1607 171.676 cv
70.9671 171.979 70.89 172.312 70.8903 172.65 cv
70.8918 173.992 72.1147 175.415 72.1147 175.415 cv
62.1562 180.483 li
.870588 .6 .392157 rgb
f
181.53 109.902 mo
176.089 109.902 171.676 113.188 171.676 117.248 cv
171.676 119.876 173.534 122.173 176.32 123.47 cv
172.593 127.176 li
179.975 124.491 li
180.483 124.549 181 124.591 181.53 124.591 cv
186.975 124.591 191.384 121.303 191.384 117.248 cv
191.384 113.188 186.975 109.902 181.53 109.902 cv
cp
.85098 .192157 .0862745 rgb
f
191.384 117.248 mo
191.384 121.303 186.975 124.591 181.53 124.591 cv
181.53 109.902 li
186.975 109.902 191.384 113.188 191.384 117.248 cv
cp
.678431 .0941176 0 rgb
f
178.516 117.069 mo
177.935 115.176 li
177.365 117.069 li
178.516 117.069 li
cp
178.19 119.871 mo
178.19 118.719 li
179.021 118.719 li
178.84 118.123 li
177.041 118.123 li
176.855 118.719 li
177.54 118.719 li
177.54 119.871 li
174.748 119.871 li
174.748 118.719 li
175.347 118.719 li
176.529 114.868 li
176.17 114.868 li
176.17 113.736 li
179.543 113.736 li
181.093 118.719 li
181.709 118.719 li
181.709 119.871 li
178.19 119.871 li
cp
1 .756863 .188235 rgb
f
184.67 118.272 mo
184.645 118.229 184.519 118.019 184.153 118.019 cv
183.8 118.019 183.642 118.21 183.642 118.483 cv
183.642 118.728 183.843 118.894 184.106 118.894 cv
184.371 118.894 184.59 118.736 184.67 118.606 cv
184.67 118.272 li
cp
182.162 115.851 mo
182.51 115.639 183.265 115.228 184.073 115.228 cv
185.125 115.228 186.449 115.623 186.449 117.036 cv
186.449 118.745 li
186.976 118.745 li
186.976 119.871 li
185.098 119.871 li
184.887 119.474 li
184.563 119.923 184.021 120.035 183.704 120.035 cv
182.87 120.035 181.975 119.589 181.975 118.57 cv
181.975 117.581 182.809 116.958 183.8 116.958 cv
184.316 116.958 184.626 117.209 184.67 117.262 cv
184.67 116.958 li
184.67 116.56 184.309 116.465 183.835 116.465 cv
183.319 116.465 182.862 116.685 182.528 116.868 cv
182.162 115.851 li
cp
1 .827451 .360784 rgb
f
131.403 185.629 mo
137.238 185.629 141.971 182.104 141.971 177.752 cv
141.971 174.936 139.978 172.469 136.992 171.08 cv
139.916 166.035 li
133.072 169.988 li
132.525 169.924 131.969 169.878 131.403 169.878 cv
125.563 169.878 120.834 173.405 120.834 177.752 cv
120.834 182.104 125.563 185.629 131.403 185.629 cv
cp
1 .756863 .188235 rgb
f
120.834 177.752 mo
120.834 173.405 125.563 169.878 131.403 169.878 cv
131.403 185.629 li
125.563 185.629 120.834 182.104 120.834 177.752 cv
cp
1 .827451 .360784 rgb
f
132.264 181.052 mo
132.177 180.624 132.312 180.375 132.479 180.354 cv
132.646 180.328 133.411 180.992 133.521 181.121 cv
133.633 181.253 134.451 181.87 134.596 181.953 cv
134.742 182.036 135.088 182.285 135.1 182.424 cv
135.11 182.529 134.864 182.643 134.584 182.509 cv
134.306 182.38 133.678 181.929 133.455 181.823 cv
133.23 181.716 132.358 181.478 132.264 181.052 cv
cp
.0627451 .207843 .309804 rgb
f
129.658 179.854 mo
129.522 179.865 129.242 179.891 129.152 179.604 cv
129.063 179.321 129.007 179.119 129.152 179.024 cv
129.298 178.929 129.756 179.119 130.172 179.132 cv
130.275 179.132 130.528 179.132 130.856 179.129 cv
130.83 179.029 130.8 178.951 130.764 178.896 cv
130.572 178.575 130.519 178.1 130.664 177.98 cv
130.811 177.864 131.826 177.745 131.805 179.116 cv
132.64 179.104 133.484 179.102 133.555 179.132 cv
133.555 179.132 133.576 179.854 133.386 179.913 cv
133.248 179.958 132.287 179.906 131.786 179.873 cv
131.752 181.016 131.731 182.052 132.032 182.216 cv
132.239 182.327 132.239 182.343 132.625 182.295 cv
132.625 182.295 132.58 182.985 131.919 182.985 cv
131.259 182.985 131.113 181.987 131.068 181.121 cv
131.048 180.707 131.019 180.251 130.979 179.851 cv
130.467 179.849 129.744 179.849 129.658 179.854 cv
cp
f
127.775 178.408 mo
129.333 177.767 131.392 174.971 131.392 174.971 cv
131.348 176.451 133.757 178.42 134.674 178.681 cv
135.595 178.942 136.029 179.286 135.96 179.466 cv
135.886 179.643 135.258 179.523 134.216 178.999 cv
133.175 178.475 131.08 176.712 131.08 176.712 cv
128.837 179.248 127.977 179.463 127.448 179.541 cv
126.923 179.619 126.119 179.298 126.119 179.298 cv
126.119 179.298 126.219 179.047 127.775 178.408 cv
cp
f
133.242 174.426 mo
133.242 174.426 133.063 175.635 132.893 175.764 cv
132.725 175.895 132.177 175.526 132.177 175.526 cv
132.49 175.314 132.548 174.484 132.548 174.484 cv
129.904 174.319 li
130.294 175.514 li
129.825 175.793 li
129.197 174.342 li
129.197 174.342 126.655 174.331 126.465 174.354 cv
126.273 174.376 126.066 173.786 126.066 173.417 cv
126.066 173.05 126.61 173.251 126.958 173.372 cv
127.304 173.488 129.085 173.606 129.085 173.606 cv
128.524 172.293 li
129.42 172.089 129.947 172.54 129.947 172.54 cv
129.756 172.812 129.803 173.677 129.803 173.677 cv
132.559 173.726 li
132.501 172.217 li
132.637 172.033 134.237 172.586 133.914 172.789 cv
133.588 172.99 133.377 173.748 133.377 173.748 cv
133.377 173.748 135.561 173.628 135.805 173.654 cv
136.054 173.677 136.029 173.938 135.805 174.426 cv
135.58 174.909 133.242 174.426 133.242 174.426 cv
cp
f
130.676 180.451 mo
130.676 180.451 130.621 180.873 130.038 181.121 cv
129.456 181.37 128.906 182.226 128.817 182.509 cv
128.725 182.794 128.345 183.021 128.122 182.748 cv
127.898 182.473 127.616 181.613 130.676 180.451 cv
cp
f
130.979 179.851 mo
130.467 179.849 129.744 179.849 129.658 179.854 cv
129.522 179.865 129.242 179.891 129.152 179.604 cv
129.063 179.321 129.007 179.119 129.152 179.024 cv
129.298 178.929 129.756 179.119 130.172 179.132 cv
130.275 179.132 130.528 179.132 130.856 179.129 cv
130.83 179.029 130.8 178.951 130.764 178.896 cv
130.572 178.575 130.519 178.1 130.664 177.98 cv
130.748 177.913 131.109 177.857 131.403 178.062 cv
131.403 182.665 li
131.174 182.301 131.098 181.688 131.068 181.121 cv
131.048 180.707 131.019 180.251 130.979 179.851 cv
cp
.137255 .34902 .509804 rgb
f
127.448 179.541 mo
126.923 179.619 126.119 179.298 126.119 179.298 cv
126.119 179.298 126.219 179.047 127.775 178.408 cv
129.333 177.767 131.392 174.971 131.392 174.971 cv
131.403 175.103 li
131.403 176.979 li
131.203 176.817 131.08 176.712 131.08 176.712 cv
128.837 179.248 127.977 179.463 127.448 179.541 cv
cp
f
130.294 175.514 mo
129.825 175.793 li
129.197 174.342 li
129.197 174.342 126.655 174.331 126.465 174.354 cv
126.273 174.376 126.066 173.786 126.066 173.417 cv
126.066 173.05 126.61 173.251 126.958 173.372 cv
127.304 173.488 129.085 173.606 129.085 173.606 cv
128.524 172.293 li
129.42 172.089 129.947 172.54 129.947 172.54 cv
129.756 172.812 129.803 173.677 129.803 173.677 cv
131.403 173.705 li
131.403 174.414 li
129.904 174.319 li
130.294 175.514 li
cp
f
130.676 180.451 mo
130.676 180.451 130.621 180.873 130.038 181.121 cv
129.456 181.37 128.906 182.226 128.817 182.509 cv
128.725 182.794 128.345 183.021 128.122 182.748 cv
127.898 182.473 127.616 181.613 130.676 180.451 cv
cp
f
148.406 170.396 mo
148.146 167.91 li
148.244 167.899 158.006 166.813 162.648 161.408 cv
167.79 155.422 167.601 145.81 167.598 145.714 cv
170.097 145.648 li
170.108 146.082 170.308 156.329 164.545 163.037 cv
159.249 169.203 148.846 170.35 148.406 170.396 cv
cp
.0627451 .207843 .309804 rgb
f
120.602 138.879 mo
120.605 151.771 131.06 162.226 143.956 162.222 cv
156.85 162.223 167.302 151.765 167.298 138.872 cv
167.294 125.976 156.842 115.524 143.947 115.528 cv
131.054 115.528 120.602 125.983 120.602 138.879 cv
cp
1 .827451 .360784 rgb
f
143.813 116.473 mo
143.947 116.472 li
149.932 116.472 155.556 118.803 159.791 123.031 cv
164.02 127.264 166.351 132.886 166.351 138.872 cv
166.353 151.151 156.367 161.203 144.087 161.275 cv
143.952 161.275 li
137.97 161.277 132.344 158.949 128.111 154.717 cv
123.88 150.487 121.548 144.858 121.548 138.878 cv
121.546 126.598 131.536 116.548 143.813 116.473 cv
cp
144.101 163.167 mo
157.417 163.087 168.249 152.189 168.245 138.87 cv
168.241 132.384 165.713 126.282 161.126 121.694 cv
156.54 117.105 150.436 114.579 143.945 114.58 cv
143.801 114.582 li
130.488 114.661 119.653 125.56 119.659 138.877 cv
119.656 145.365 122.183 151.466 126.773 156.053 cv
131.364 160.643 137.464 163.168 143.954 163.165 cv
144.101 163.167 li
cp
.137255 .34902 .509804 rgb
f
168.245 138.87 mo
168.249 152.189 157.417 163.087 144.101 163.167 cv
144.094 163.167 li
143.801 114.582 li
143.945 114.58 li
150.436 114.579 156.54 117.105 161.126 121.694 cv
165.713 126.282 168.241 132.384 168.245 138.87 cv
cp
f
143.807 115.529 mo
143.947 115.528 li
156.842 115.524 167.294 125.976 167.298 138.872 cv
167.302 151.721 156.921 162.145 144.088 162.221 cv
143.807 115.529 li
cp
1 .756863 .188235 rgb
f
144.582 162.223 mo
144.578 115.525 li
143.318 115.527 li
143.322 162.223 li
144.582 162.223 li
cp
.137255 .34902 .509804 rgb
f
143.807 115.524 mo
144.578 115.525 li
144.582 162.223 li
144.088 162.223 li
143.807 115.524 li
cp
.0627451 .207843 .309804 rgb
f
167.295 139.503 mo
167.298 138.243 li
120.602 138.247 li
120.602 139.509 li
167.295 139.503 li
cp
.137255 .34902 .509804 rgb
f
167.295 139.503 mo
167.298 138.243 li
120.602 138.247 li
120.602 139.509 li
167.295 139.503 li
cp
f
167.298 138.855 mo
167.298 138.891 li
167.295 139.096 167.288 139.298 167.284 139.5 cv
143.952 139.503 li
143.945 138.245 li
167.281 138.239 li
167.288 138.443 167.294 138.646 167.298 138.855 cv
cp
.0627451 .207843 .309804 rgb
f
144.311 130.284 mo
158.012 130.204 162.099 125.549 162.266 125.35 cv
161.301 124.531 li
161.267 124.578 157.33 128.943 144.298 129.02 cv
144.18 129.022 144.066 129.022 143.952 129.019 cv
130.64 129.024 126.631 124.581 126.589 124.536 cv
125.63 125.355 li
125.799 125.555 129.958 130.287 143.949 130.285 cv
144.069 130.285 144.19 130.285 144.311 130.284 cv
cp
.137255 .34902 .509804 rgb
f
143.888 129.02 mo
143.952 129.019 li
144.066 129.022 144.18 129.022 144.298 129.02 cv
157.33 128.943 161.267 124.578 161.301 124.531 cv
162.266 125.35 li
162.099 125.549 158.012 130.204 144.311 130.284 cv
144.19 130.285 144.069 130.285 143.949 130.285 cv
143.896 130.285 li
143.888 129.02 li
cp
.0627451 .207843 .309804 rgb
f
161.306 153.215 mo
162.271 152.396 li
162.101 152.195 157.943 147.465 143.952 147.464 cv
143.829 147.464 143.708 147.465 143.59 147.466 cv
129.887 147.55 125.801 152.2 125.632 152.403 cv
126.597 153.213 li
126.631 153.173 130.649 148.713 143.949 148.724 cv
157.264 148.726 161.265 153.171 161.306 153.215 cv
cp
.137255 .34902 .509804 rgb
f
144 147.466 mo
157.948 147.475 162.101 152.195 162.271 152.396 cv
161.306 153.215 li
161.265 153.171 157.273 148.738 144.008 148.726 cv
144 147.466 li
cp
.0627451 .207843 .309804 rgb
f
147.028 162.747 mo
147.339 162.431 154.602 154.819 154.6 138.872 cv
154.6 122.909 147.31 116.038 146.999 115.753 cv
146.144 116.682 li
146.217 116.747 153.336 123.503 153.338 138.872 cv
153.34 154.307 146.198 161.792 146.126 161.863 cv
147.028 162.747 li
cp
f
140.879 162.748 mo
141.777 161.867 li
141.708 161.792 134.564 154.27 134.562 138.874 cv
134.56 123.506 141.68 116.749 141.75 116.683 cv
140.897 115.753 li
140.586 116.036 133.298 122.908 133.3 138.875 cv
133.302 154.822 140.566 162.432 140.879 162.748 cv
cp
.137255 .34902 .509804 rgb
f
131.767 159.545 mo
132.67 158.659 li
132.606 158.595 126.319 151.981 126.319 138.455 cv
126.317 124.904 132.578 119.017 132.638 118.957 cv
131.79 118.027 li
131.512 118.277 125.058 124.355 125.058 138.457 cv
125.058 152.534 131.495 159.264 131.767 159.545 cv
cp
f
156.137 159.538 mo
156.412 159.259 162.845 152.528 162.842 138.45 cv
162.84 124.349 156.381 118.278 156.107 118.025 cv
155.254 118.952 li
155.683 118.488 li
155.254 118.952 li
155.321 119.012 161.578 124.946 161.582 138.453 cv
161.582 151.977 155.299 158.592 155.238 158.657 cv
156.137 159.538 li
cp
.0627451 .207843 .309804 rgb
f
168.245 138.87 mo
168.249 152.189 157.417 163.087 144.101 163.167 cv
144.094 163.167 li
144.083 161.275 li
144.087 161.275 li
156.367 161.203 166.353 151.151 166.351 138.872 cv
166.351 132.886 164.02 127.264 159.791 123.031 cv
155.556 118.803 149.932 116.472 143.947 116.472 cv
143.813 116.473 li
143.801 114.582 li
143.945 114.58 li
150.436 114.579 156.54 117.105 161.126 121.694 cv
165.713 126.282 168.241 132.384 168.245 138.87 cv
cp
f
170.097 138.117 mo
167.176 138.117 li
167.176 131.313 li
167.176 118.116 156.721 107.382 143.866 107.382 cv
131.013 107.382 120.555 118.116 120.555 131.313 cv
120.555 138.117 li
117.638 138.117 li
117.638 131.313 li
117.638 116.507 129.404 104.462 143.866 104.462 cv
158.332 104.462 170.097 116.507 170.097 131.313 cv
170.097 138.117 li
cp
.137255 .34902 .509804 rgb
f
143.953 104.467 mo
143.953 107.388 li
156.766 107.434 167.176 118.147 167.176 131.313 cv
167.176 138.117 li
170.097 138.117 li
170.097 131.313 li
170.097 116.539 158.377 104.516 143.953 104.467 cv
cp
.0627451 .207843 .309804 rgb
f
170.167 150.527 mo
166.349 150.304 li
167.529 130.284 li
171.347 130.512 li
170.167 150.527 li
cp
.678431 .0941176 0 rgb
f
171.046 130.497 mo
169.862 150.512 li
172.593 150.672 175.067 146.328 175.394 140.797 cv
175.723 135.265 173.777 130.656 171.046 130.497 cv
cp
.372549 .690196 .811765 rgb
f
117.739 150.527 mo
121.555 150.304 li
120.375 130.284 li
116.559 130.512 li
117.739 150.527 li
cp
.85098 .192157 .0862745 rgb
f
116.859 130.497 mo
118.042 150.512 li
115.312 150.672 112.836 146.328 112.511 140.797 cv
112.18 135.265 114.128 130.656 116.859 130.497 cv
cp
.643137 .847059 .901961 rgb
f
161.859 164.872 mo
162.261 166.261 161.47 167.71 160.094 168.11 cv
149.118 171.286 li
147.742 171.684 146.299 170.88 145.898 169.491 cv
145.495 168.102 146.287 166.652 147.662 166.254 cv
158.637 163.076 li
160.016 162.679 161.457 163.482 161.859 164.872 cv
cp
.678431 .0941176 0 rgb
f
381.048 119.087 mo
365.353 120.617 li
364.266 109.465 li
379.964 107.936 li
381.048 119.087 li
cp
.137255 .34902 .509804 rgb
f
gsave
381.048 119.087 mo
365.352 120.617 li
364.266 109.465 li
379.964 107.936 li
381.048 119.087 li
clp
380.642 114.927 mo
380.368 112.096 li
376.202 112.501 li
381.922 107.748 li
380.585 106.542 li
374.081 111.947 li
373.752 108.541 li
370.478 108.86 li
370.802 112.182 li
363.614 107.924 li
362.483 109.322 li
369.029 113.201 li
364.673 113.625 li
364.945 116.457 li
369.152 116.048 li
363.424 120.804 li
364.762 122.008 li
371.234 116.627 li
371.564 120.012 li
374.838 119.691 li
374.522 116.459 li
381.677 120.7 li
382.809 119.299 li
376.167 115.362 li
380.642 114.927 li
cp
1 1 1 rgb
f
380.642 114.927 mo
380.368 112.096 li
376.202 112.501 li
381.922 107.748 li
380.585 106.542 li
374.081 111.947 li
373.752 108.541 li
370.478 108.86 li
370.802 112.182 li
363.614 107.924 li
362.483 109.322 li
369.029 113.201 li
364.673 113.625 li
364.945 116.457 li
369.152 116.048 li
363.424 120.804 li
364.762 122.008 li
371.234 116.627 li
371.564 120.012 li
374.838 119.691 li
374.522 116.459 li
381.677 120.7 li
382.809 119.299 li
376.167 115.362 li
380.642 114.927 li
cp
f
grestore
379.251 119.262 mo
381.048 119.087 li
380.965 118.208 li
376.167 115.362 li
380.642 114.927 li
380.368 112.096 li
376.202 112.501 li
380.091 109.267 li
379.964 107.936 li
378.768 108.052 li
374.081 111.947 li
373.752 108.541 li
370.478 108.86 li
370.802 112.182 li
365.943 109.302 li
364.266 109.465 li
364.36 110.435 li
369.029 113.201 li
364.673 113.625 li
364.945 116.457 li
369.152 116.048 li
365.225 119.308 li
365.353 120.617 li
366.582 120.495 li
371.234 116.627 li
371.564 120.012 li
374.838 119.691 li
374.522 116.459 li
379.251 119.262 li
cp
.811765 .909804 .866667 rgb
f
374.824 115.009 mo
380.595 114.445 li
380.415 112.577 li
374.088 113.193 li
379.996 108.284 li
379.964 107.936 li
379.51 107.979 li
373.612 112.884 li
373.195 108.594 li
371.032 108.806 li
371.485 113.446 li
371.208 113.473 li
364.42 109.449 li
364.266 109.465 li
364.32 110.023 li
370.291 113.562 li
364.717 114.106 li
364.899 115.973 li
371.329 115.348 li
365.326 120.339 li
365.353 120.617 li
365.909 120.562 li
371.708 115.738 li
372.121 119.955 li
374.281 119.746 li
373.828 115.104 li
374.017 115.086 li
374.024 115.168 li
380.696 119.121 li
381.048 119.087 li
381.006 118.674 li
374.824 115.009 li
cp
.85098 .192157 .0862745 rgb
f
368.397 139.913 mo
367.714 139.979 li
364.26 109.393 li
364.941 109.327 li
368.397 139.913 li
cp
.0627451 .207843 .309804 rgb
f
367.038 118.919 mo
354.416 128.375 li
352.111 125.303 li
364.731 115.843 li
367.038 118.919 li
cp
.85098 .192157 .0862745 rgb
f
364.781 115.91 mo
352.162 125.367 li
349.857 122.292 li
362.477 112.835 li
364.781 115.91 li
cp
.137255 .34902 .509804 rgb
f
362.525 112.9 mo
349.905 122.357 li
347.603 119.283 li
360.223 109.825 li
362.525 112.9 li
cp
.811765 .909804 .866667 rgb
f
363.718 139.796 mo
363.167 140.21 li
347.534 119.345 li
348.084 118.933 li
363.718 139.796 li
cp
.0627451 .207843 .309804 rgb
f
390.442 129.823 mo
375.295 125.425 li
376.366 121.736 li
391.513 126.131 li
390.442 129.823 li
cp
1 .756863 .188235 rgb
f
391.488 126.211 mo
376.346 121.814 li
377.416 118.124 li
392.56 122.521 li
391.488 126.211 li
cp
.85098 .192157 .0862745 rgb
f
392.537 122.6 mo
377.392 118.203 li
378.464 114.514 li
393.611 118.91 li
392.537 122.6 li
cp
.0627451 .207843 .309804 rgb
f
371.765 139.727 mo
371.103 139.535 li
378.373 114.497 li
379.032 114.688 li
371.765 139.727 li
cp
.137255 .34902 .509804 rgb
f
390.948 168.327 mo
350.758 168.327 li
347.771 168.327 345.349 170.749 345.349 173.736 cv
345.349 175.192 li
345.349 178.179 347.771 180.601 350.758 180.601 cv
390.948 180.601 li
390.948 168.327 li
cp
.811765 .909804 .866667 rgb
f
392.231 182.101 mo
350.758 182.101 li
346.948 182.101 343.849 179.002 343.849 175.192 cv
343.849 173.736 li
343.849 169.926 346.948 166.827 350.758 166.827 cv
392.231 166.827 li
393.06 166.827 393.731 167.499 393.731 168.327 cv
393.731 169.156 393.06 169.827 392.231 169.827 cv
350.758 169.827 li
348.603 169.827 346.849 171.581 346.849 173.736 cv
346.849 175.192 li
346.849 177.348 348.603 179.101 350.758 179.101 cv
392.231 179.101 li
393.06 179.101 393.731 179.772 393.731 180.601 cv
393.731 181.43 393.06 182.101 392.231 182.101 cv
cp
.137255 .34902 .509804 rgb
f
386.729 153.427 mo
346.539 153.427 li
343.552 153.427 341.13 155.849 341.13 158.837 cv
341.13 160.292 li
341.13 163.279 343.552 165.703 346.539 165.703 cv
386.729 165.703 li
386.729 153.427 li
cp
.901961 .94902 .941176 rgb
f
388.013 167.203 mo
346.539 167.203 li
342.729 167.203 339.63 164.103 339.63 160.292 cv
339.63 158.837 li
339.63 155.027 342.729 151.927 346.539 151.927 cv
388.013 151.927 li
388.841 151.927 389.513 152.598 389.513 153.427 cv
389.513 154.255 388.841 154.927 388.013 154.927 cv
346.539 154.927 li
344.384 154.927 342.63 156.681 342.63 158.837 cv
342.63 160.292 li
342.63 162.448 344.384 164.203 346.539 164.203 cv
388.013 164.203 li
388.841 164.203 389.513 164.874 389.513 165.703 cv
389.513 166.531 388.841 167.203 388.013 167.203 cv
cp
1 .756863 .188235 rgb
f
391.784 138.527 mo
351.593 138.527 li
348.606 138.527 346.185 140.95 346.185 143.938 cv
346.185 145.392 li
346.185 148.38 348.606 150.802 351.593 150.802 cv
391.784 150.802 li
391.784 138.527 li
cp
.811765 .909804 .866667 rgb
f
393.067 152.302 mo
351.593 152.302 li
347.783 152.302 344.685 149.202 344.685 145.392 cv
344.685 143.938 li
344.685 140.127 347.783 137.027 351.593 137.027 cv
393.067 137.027 li
393.896 137.027 394.567 137.698 394.567 138.527 cv
394.567 139.355 393.896 140.027 393.067 140.027 cv
351.593 140.027 li
349.438 140.027 347.685 141.781 347.685 143.938 cv
347.685 145.392 li
347.685 147.548 349.438 149.302 351.593 149.302 cv
393.067 149.302 li
393.896 149.302 394.567 149.974 394.567 150.802 cv
394.567 151.631 393.896 152.302 393.067 152.302 cv
cp
.85098 .192157 .0862745 rgb
f
362.525 146.632 mo
358.899 144.973 li
355.14 146.632 li
355.14 139.727 li
362.525 139.727 li
362.525 146.632 li
cp
.137255 .34902 .509804 rgb
f
276.363 176.087 mo
276.363 178.077 274.734 179.705 272.746 179.705 cv
242.006 179.705 li
240.016 179.705 238.388 178.077 238.388 176.087 cv
238.388 114.006 li
238.388 112.015 240.016 110.387 242.006 110.387 cv
272.746 110.387 li
274.734 110.387 276.363 112.015 276.363 114.006 cv
276.363 176.087 li
cp
f
242.006 167.953 mo
242.006 117.626 li
272.746 117.626 li
272.746 167.953 li
242.006 167.953 li
cp
.643137 .847059 .901961 rgb
f
272.746 110.387 mo
257.376 110.387 li
257.376 179.705 li
272.746 179.705 li
274.734 179.705 276.363 178.077 276.363 176.087 cv
276.363 114.006 li
276.363 112.015 274.734 110.387 272.746 110.387 cv
cp
.0627451 .207843 .309804 rgb
f
257.376 167.953 mo
272.746 167.953 li
272.746 117.626 li
257.376 117.626 li
257.376 167.953 li
cp
.372549 .690196 .811765 rgb
f
262.982 114.043 mo
262.982 114.333 262.747 114.566 262.461 114.566 cv
253.045 114.566 li
252.755 114.566 252.522 114.333 252.522 114.043 cv
252.522 113.754 252.755 113.522 253.045 113.522 cv
262.461 113.522 li
262.747 113.522 262.982 113.754 262.982 114.043 cv
cp
1 1 1 rgb
f
262.461 113.522 mo
257.753 113.522 li
257.753 114.566 li
262.461 114.566 li
262.747 114.566 262.982 114.333 262.982 114.043 cv
262.982 113.754 262.747 113.522 262.461 113.522 cv
cp
.901961 .94902 .941176 rgb
f
260.209 175.557 mo
260.209 176.29 259.608 176.887 258.875 176.887 cv
255.876 176.887 li
255.144 176.887 254.546 176.29 254.546 175.557 cv
254.546 172.558 li
254.546 171.823 255.144 171.224 255.876 171.224 cv
258.875 171.224 li
259.608 171.224 260.209 171.823 260.209 172.558 cv
260.209 175.557 li
cp
1 1 1 rgb
f
258.875 171.224 mo
257.376 171.224 li
257.376 176.887 li
258.875 176.887 li
259.608 176.887 260.209 176.29 260.209 175.557 cv
260.209 172.558 li
260.209 171.823 259.608 171.224 258.875 171.224 cv
cp
.811765 .909804 .866667 rgb
f
292.938 160.511 mo
292.938 162.143 291.35 163.467 289.393 163.467 cv
225.495 163.467 li
223.536 163.467 221.947 162.143 221.947 160.511 cv
221.947 148.071 li
221.947 146.44 223.536 145.115 225.495 145.115 cv
289.393 145.115 li
291.35 145.115 292.938 146.44 292.938 148.071 cv
292.938 160.511 li
cp
1 .756863 .188235 rgb
f
257.442 145.115 mo
225.495 145.115 li
223.536 145.115 221.947 146.44 221.947 148.071 cv
221.947 160.511 li
221.947 162.143 223.536 163.467 225.495 163.467 cv
257.442 163.467 li
257.442 145.115 li
cp
1 .827451 .360784 rgb
f
289.393 145.115 mo
273.593 145.115 li
273.593 163.467 li
289.393 163.467 li
291.35 163.467 292.938 162.143 292.938 160.511 cv
292.938 148.071 li
292.938 146.44 291.35 145.115 289.393 145.115 cv
cp
.678431 .0941176 0 rgb
f
281.972 149.603 mo
280.069 149.603 278.523 151.15 278.523 153.05 cv
278.523 154.952 280.069 156.498 281.972 156.498 cv
283.871 156.498 285.418 154.952 285.418 153.05 cv
285.418 151.15 283.871 149.603 281.972 149.603 cv
cp
281.972 158.141 mo
279.164 158.141 276.883 155.858 276.883 153.05 cv
276.883 150.245 279.164 147.961 281.972 147.961 cv
284.775 147.961 287.061 150.245 287.061 153.05 cv
287.061 155.858 284.775 158.141 281.972 158.141 cv
cp
1 1 1 rgb
f
289.924 161.246 mo
289.714 161.246 289.504 161.166 289.344 161.005 cv
284.692 156.354 li
284.371 156.033 284.371 155.514 284.692 155.193 cv
285.013 154.872 285.532 154.872 285.853 155.193 cv
290.505 159.844 li
290.825 160.165 290.825 160.685 290.505 161.005 cv
290.343 161.166 290.134 161.246 289.924 161.246 cv
cp
f
254.671 124.405 mo
254.122 122.614 li
253.583 124.405 li
254.671 124.405 li
cp
254.364 127.055 mo
254.364 125.967 li
255.151 125.967 li
254.979 125.402 li
253.276 125.402 li
253.103 125.967 li
253.749 125.967 li
253.749 127.055 li
251.107 127.055 li
251.107 125.967 li
251.674 125.967 li
252.795 122.322 li
252.454 122.322 li
252.454 121.252 li
255.643 121.252 li
257.11 125.967 li
257.691 125.967 li
257.691 127.055 li
254.364 127.055 li
cp
.85098 .192157 .0862745 rgb
f
260.494 125.543 mo
260.468 125.502 260.352 125.303 260.004 125.303 cv
259.671 125.303 259.521 125.485 259.521 125.742 cv
259.521 125.974 259.711 126.132 259.962 126.132 cv
260.212 126.132 260.419 125.982 260.494 125.859 cv
260.494 125.543 li
cp
258.12 123.252 mo
258.451 123.052 259.163 122.663 259.927 122.663 cv
260.925 122.663 262.179 123.037 262.179 124.374 cv
262.179 125.991 li
262.674 125.991 li
262.674 127.055 li
260.899 127.055 li
260.699 126.681 li
260.392 127.104 259.88 127.212 259.579 127.212 cv
258.791 127.212 257.944 126.791 257.944 125.825 cv
257.944 124.888 258.732 124.299 259.671 124.299 cv
260.16 124.299 260.452 124.537 260.494 124.587 cv
260.494 124.299 li
260.494 123.924 260.151 123.833 259.703 123.833 cv
259.214 123.833 258.782 124.042 258.466 124.214 cv
258.12 123.252 li
cp
.678431 .0941176 0 rgb
f
262.575 138.954 mo
262.534 138.424 262.423 137.961 262.248 137.562 cv
262.243 137.544 li
262.202 137.424 262.155 137.344 262.105 137.277 cv
262.097 137.26 li
262.081 137.248 li
261.993 137.14 261.901 137.093 261.842 137.08 cv
261.738 137.058 261.636 137.086 261.564 137.158 cv
261.479 137.244 261.444 137.371 261.473 137.506 cv
261.514 137.71 261.692 137.898 261.863 138.077 cv
262.032 138.254 262.19 138.42 262.202 138.575 cv
262.205 138.706 262.202 138.833 262.194 138.962 cv
262.166 139.474 262.006 140.076 261.653 140.219 cv
261.521 140.254 li
261.462 140.26 li
261.364 140.259 li
261.125 140.178 li
260.98 140.083 260.792 139.84 260.741 139.612 cv
260.677 139.306 260.651 138.998 260.666 138.67 cv
260.684 138.481 li
260.777 138.061 260.782 137.793 260.699 137.667 cv
260.65 137.591 260.573 137.56 260.475 137.579 cv
260.258 137.62 260.271 137.983 260.281 138.302 cv
260.283 138.423 li
260.231 138.771 260.155 139.09 259.991 139.373 cv
259.875 139.565 259.594 139.738 259.432 139.787 cv
259.241 139.841 259.092 139.811 258.921 139.689 cv
258.586 139.424 258.379 138.906 258.218 138.435 cv
258.195 138.36 li
258.19 138.117 258.192 137.88 258.193 137.677 cv
258.2 136.937 258.203 136.449 257.899 136.337 cv
257.709 136.269 257.562 136.275 257.45 136.36 cv
257.336 136.445 257.272 136.606 257.257 136.851 cv
257.245 137.061 257.363 137.322 257.49 137.599 cv
257.631 137.909 257.785 138.255 257.783 138.587 cv
257.764 138.76 li
257.669 139.419 257.474 139.973 257.183 140.406 cv
256.608 141.312 255.669 141.745 254.604 141.598 cv
254.292 141.563 254.1 141.527 253.845 141.46 cv
253.599 141.397 253.374 141.31 253.175 141.19 cv
252.823 140.994 252.38 140.562 252.296 139.991 cv
252.212 139.424 252.261 138.803 252.429 138.241 cv
252.503 137.979 252.607 137.691 252.746 137.371 cv
252.78 137.297 li
252.896 137.042 253.018 136.779 253.194 136.567 cv
253.191 136.491 li
253.116 136.485 li
252.872 136.663 252.689 136.917 252.492 137.211 cv
252.323 137.47 252.17 137.753 252.022 138.077 cv
251.747 138.722 251.625 139.426 251.67 140.111 cv
251.69 140.934 252.297 141.675 252.887 142.044 cv
253.124 142.204 253.393 142.322 253.731 142.414 cv
253.842 142.447 253.96 142.478 254.086 142.504 cv
254.253 142.541 254.428 142.568 254.59 142.588 cv
255.226 142.649 255.835 142.547 256.396 142.283 cv
257.115 141.816 257.402 141.521 257.729 140.902 cv
257.889 140.611 257.984 140.196 258.063 139.86 cv
258.076 139.795 li
258.109 139.649 258.125 139.517 258.144 139.385 cv
258.251 139.64 258.398 139.882 258.616 140.093 cv
258.743 140.205 258.894 140.288 259.046 140.33 cv
259.131 140.35 259.205 140.363 259.302 140.364 cv
259.547 140.339 li
259.874 140.271 260.113 140.035 260.255 139.851 cv
260.324 140.132 260.476 140.497 260.816 140.704 cv
260.914 140.761 261.015 140.803 261.12 140.826 cv
261.352 140.849 li
261.462 140.845 li
261.602 140.827 li
261.862 140.734 li
262.254 140.532 262.423 140.12 262.486 139.891 cv
262.583 139.545 262.585 139.21 262.575 138.954 cv
cp
f
259.576 136.221 mo
259.863 136.284 260.146 136.102 260.206 135.815 cv
260.269 135.53 260.084 135.246 259.799 135.186 cv
259.513 135.125 259.231 135.307 259.171 135.592 cv
259.108 135.877 259.292 136.161 259.576 136.221 cv
cp
f
260.921 136.028 mo
261.175 136.083 261.425 135.921 261.479 135.668 cv
261.534 135.416 261.372 135.165 261.119 135.111 cv
260.866 135.057 260.615 135.217 260.561 135.472 cv
260.507 135.724 260.668 135.973 260.921 136.028 cv
cp
f
260.276 134.821 mo
260.563 134.883 260.846 134.7 260.906 134.415 cv
260.968 134.126 260.785 133.845 260.5 133.784 cv
260.214 133.722 259.931 133.904 259.87 134.189 cv
259.807 134.478 259.989 134.759 260.276 134.821 cv
cp
f
249.103 139.719 mo
246.96 137.577 245.78 134.729 245.78 131.7 cv
245.78 128.671 246.96 125.823 249.103 123.682 cv
249.632 124.212 li
247.632 126.212 246.53 128.871 246.53 131.7 cv
246.53 134.529 247.632 137.188 249.633 139.188 cv
249.103 139.719 li
cp
1 .827451 .360784 rgb
f
265.139 139.719 mo
264.607 139.188 li
266.608 137.188 267.71 134.529 267.71 131.7 cv
267.71 128.871 266.608 126.212 264.607 124.212 cv
265.139 123.682 li
267.28 125.823 268.46 128.671 268.46 131.7 cv
268.46 134.729 267.28 137.577 265.139 139.719 cv
cp
1 .756863 .188235 rgb
f
264.202 125.416 mo
264.201 123.354 li
266.263 123.354 li
266.263 124.104 li
264.951 124.104 li
264.952 125.416 li
264.202 125.416 li
cp
f
266.263 140.118 mo
264.201 140.118 li
264.201 138.057 li
264.951 138.057 li
264.951 139.368 li
266.263 139.368 li
266.263 140.118 li
cp
f
250.032 125.416 mo
249.282 125.416 li
249.283 124.104 li
247.972 124.104 li
247.972 123.354 li
250.033 123.354 li
250.032 125.416 li
cp
1 .827451 .360784 rgb
f
250.033 140.118 mo
247.972 140.118 li
247.972 139.368 li
249.283 139.368 li
249.283 138.057 li
250.033 138.057 li
250.033 140.118 li
cp
f
229.578 152.447 mo
227.591 152.447 li
227.591 158.075 li
226.258 158.075 li
226.258 152.447 li
224.262 152.447 li
224.262 151.26 li
229.578 151.26 li
229.578 152.447 li
cp
.0627451 .207843 .309804 rgb
f
232.314 152.349 mo
232.178 152.349 232.044 152.352 231.91 152.359 cv
231.777 152.366 231.675 152.378 231.604 152.399 cv
231.604 154.375 li
232.168 154.375 li
232.538 154.375 232.834 154.291 233.054 154.122 cv
233.274 153.953 233.385 153.673 233.385 153.284 cv
233.385 152.992 233.294 152.763 233.113 152.597 cv
232.931 152.432 232.665 152.349 232.314 152.349 cv
cp
230.269 151.327 mo
230.419 151.301 230.579 151.277 230.752 151.253 cv
230.924 151.231 231.096 151.213 231.268 151.201 cv
231.439 151.188 231.606 151.178 231.77 151.17 cv
231.932 151.165 232.081 151.162 232.217 151.162 cv
232.535 151.162 232.848 151.191 233.156 151.25 cv
233.465 151.308 233.741 151.408 233.984 151.551 cv
234.228 151.694 234.422 151.891 234.568 152.14 cv
234.715 152.391 234.787 152.703 234.787 153.08 cv
234.787 153.638 234.658 154.092 234.397 154.442 cv
234.139 154.793 233.791 155.038 233.355 155.173 cv
233.833 155.475 li
235.392 158.075 li
233.853 158.075 li
232.305 155.408 li
231.604 155.28 li
231.604 158.075 li
230.269 158.075 li
230.269 151.327 li
cp
f
237.378 155.495 mo
238.838 155.495 li
238.332 153.975 li
238.128 152.905 li
238.079 152.905 li
237.874 153.985 li
237.378 155.495 li
cp
239.131 156.565 mo
237.037 156.565 li
236.521 158.075 li
235.187 158.075 li
237.641 151.21 li
238.624 151.21 li
241.078 158.075 li
239.676 158.075 li
239.131 156.565 li
cp
f
243.355 154.521 mo
242.82 153.45 li
242.771 153.45 li
242.928 154.521 li
242.928 158.075 li
241.661 158.075 li
241.661 151.21 li
242.635 151.21 li
245.215 154.842 li
245.731 155.884 li
245.78 155.884 li
245.625 154.842 li
245.625 151.26 li
246.891 151.26 li
246.891 158.123 li
245.916 158.123 li
243.355 154.521 li
cp
f
251 156.244 mo
251 156.037 250.924 155.868 250.771 155.737 cv
250.618 155.608 250.428 155.49 250.196 155.383 cv
249.966 155.276 249.716 155.165 249.447 155.051 cv
249.178 154.938 248.928 154.799 248.697 154.633 cv
248.467 154.467 248.275 154.261 248.123 154.015 cv
247.97 153.769 247.894 153.453 247.894 153.071 cv
247.894 152.739 247.948 152.452 248.059 152.208 cv
248.17 151.965 248.327 151.761 248.531 151.6 cv
248.735 151.438 248.978 151.317 249.257 151.239 cv
249.536 151.162 249.848 151.122 250.191 151.122 cv
250.588 151.122 250.961 151.156 251.312 151.225 cv
251.662 151.293 251.951 151.392 252.179 151.521 cv
251.76 152.642 li
251.617 152.551 251.402 152.468 251.117 152.393 cv
250.831 152.319 250.522 152.281 250.191 152.281 cv
249.88 152.281 249.642 152.343 249.477 152.466 cv
249.311 152.589 249.228 152.755 249.228 152.963 cv
249.228 153.158 249.305 153.319 249.457 153.45 cv
249.608 153.58 249.801 153.7 250.03 153.81 cv
250.262 153.92 250.511 154.034 250.781 154.151 cv
251.051 154.269 251.301 154.409 251.531 154.574 cv
251.761 154.74 251.953 154.944 252.104 155.188 cv
252.258 155.432 252.334 155.735 252.334 156.098 cv
252.334 156.462 252.273 156.775 252.154 157.039 cv
252.034 157.302 251.865 157.52 251.647 157.695 cv
251.43 157.87 251.167 158 250.859 158.084 cv
250.551 158.169 250.212 158.211 249.842 158.211 cv
249.354 158.211 248.926 158.166 248.556 158.075 cv
248.187 157.983 247.913 157.894 247.738 157.802 cv
248.166 156.663 li
248.238 156.703 248.33 156.744 248.444 156.79 cv
248.558 156.835 248.687 156.876 248.829 156.916 cv
248.972 156.956 249.122 156.988 249.281 157.014 cv
249.44 157.04 249.604 157.053 249.772 157.053 cv
250.169 157.053 250.473 156.986 250.684 156.853 cv
250.895 156.72 251 156.517 251 156.244 cv
cp
f
257.533 158.075 mo
253.22 158.075 li
253.22 151.26 li
254.554 151.26 li
254.554 156.887 li
257.533 156.887 li
257.533 158.075 li
cp
f
258.645 155.495 mo
260.104 155.495 li
259.599 153.975 li
259.394 152.905 li
259.346 152.905 li
259.14 153.985 li
258.645 155.495 li
cp
260.396 156.565 mo
258.304 156.565 li
257.787 158.075 li
256.453 158.075 li
258.906 151.21 li
259.89 151.21 li
262.344 158.075 li
260.942 158.075 li
260.396 156.565 li
cp
f
267.008 152.447 mo
265.021 152.447 li
265.021 158.075 li
263.688 158.075 li
263.688 152.447 li
261.691 152.447 li
261.691 151.26 li
267.008 151.26 li
267.008 152.447 li
cp
f
267.699 151.26 mo
271.741 151.26 li
271.741 152.447 li
269.033 152.447 li
269.033 154.034 li
271.497 154.034 li
271.497 155.222 li
269.033 155.222 li
269.033 156.887 li
271.789 156.887 li
271.789 158.075 li
267.699 158.075 li
267.699 151.26 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.2
%%For: (lena) ()
%%Title: (1506.i029.012.P.m005.c26.translator language icon set.eps)
%%CreationDate: 6/30/2015 8:36 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9=Qe+!7Ff@Bn_mSG&!^&W#lg<r<]5bU7sM1LnQUflF#qnr$[hjKU;bDqdR/ggtGd5`M8AQ]qr4sTm[]jc?8W]+*o`V)Ns
%3DIi%(n-XE1cr1@BfBtc]D&tCkP&GFng69$o879ed+6(kR[/.<e\tb8mFpLHDtS=dm@)quQ.jK+\$qeVrUa:(D=7n9Ge&$IZe>>?
%.lP)p"l*&/1ln\sVI+1a0>2h[at$Gj+4JJQH>j[BJD[?_52Nr*WdVY>LJ^@pf_jU_Z_I@gW26fh@F%/Ro_Mjshe9J_/Rm2GVT$.'
%pH'G.!1g7S<%&,n0j"'E]g9!NSs]sj_:SZq%_Gicm<#S07sA,*+I.i$$i?b]6%p^;.fL5B)ubTL[@EgEfQ24[bP2L*26`=8@DZT8
%hk1HB!,E?`O9iZ)s0C,GqEA+Fc")`dJ)h]G0rtC5>d9O+ALSOFdFGmD\lR*UH'RY[NMWTOSoD7=mg]<;C@8Y$ebq+-eO$a[htS:p
%SmgWo'jeR4B_pODX[XDJB2P5C(1b$_pR<kmnFgVGUEu4<9E4Pu#@@/KmfS`]RfcoVeXWCjCTdr/>M`-tYtsHlg$/:6KD$GtF@B-a
%S7BqB=^'*j9X.oA:,OV;)+B=*2r6'2[;gnD!>TgiNO))iFiApN[5=.Yl*G9&*[7QmO'r"7q"'O<^FT<H_h:VUqgM1s>Lea,gCh(J
%q<`TXFJVtj[4`-g4oAFc6uN)81tu[@CA<Fa5o5.`T*nX=^M:XqN>?\bo>W;(brOWt%cH?QDL9a`Cn8"QhH22UgF%I<d'*,s?!,F!
%DWg(2r)h/pI+1%@UM_M&FT_WP<;+)+YWC6bHFRj-GWj)"(cK.%L,U%GgOsm:[BXT44*Y)gCNL=>$k?[rolKILge0ljmj\61F$J#6
%Yb/.PO1M'jn_gon,oiDRi^=2=$2A<#n/_M;N?%8bde`AjgDt[UpmUeXp"Y\]mA(WCDUWBHh&K_qc(WpIRfUgCc5/uS/DJIT`P<R?
%'.lt`>.<J4>E/)*)@nMIeZaTS3j<4<'=A.D0X61N.Fk3+r]/%1^K'b$5(HV%h+3(4^SYZd^jnQtc,fU.?CnNnNSYt@9BBZG@8B6E
%6@?7!:-;-&B%@]E,uViVFJ?(7d6/g_:idf%;6LmRJWhp8SZ0D4Jq9bODr:#lG$5=$h*LKlGL14dIim=3*c_74#"LoZ"i<mM5Z8!*
%B%'A&3+)jbDp0>;r's8\EmAH9*!8&V5jC$B4Wf*oCGm,E?*A>+W;YBUBG/&p4BIjpW56M,G`jQOn^tsC(iLmY<?k+mcVbJp/o`N?
%D6k+T6t%ke%*&qWMM$T*ITnKRNBmSJdEj,AeNc.\a]7U8csK7u_QdtOIsCqGH#B[&de10\ItHTEUcrY&5jcka%iTkgWF]fY/;=`(
%*$e4((_R$n/@>(XqUfdfl8Tc<Gmru7X?Neggq9?CMChuEI+IuU%F@jOEslni/aj>E`\Uqddr":sYo9uZ/Q]%2]^atCNV/c"'NNNp
%>qm%WMP\s_UUWns8l7#d'e!&s)QBa:6.&[7M@%7R@e8SEEM4)r!XuE.(9*OsP_VjW;Q<=Mk)C`F\rpAT8nQ0pfd3QWQ3sH4PZ"Jc
%Wg'Mp"c?L7auU5hMHRB\fOY;Fb=_k.&IR;m0&O<=`_V:\2(TIg.+.!f8O\T@W^5%5-56iF"3%AXTTl\(lBOT\iue&Pd4(hTC1>S"
%7?85J&b.+tk"r<0QN22?J5QtejV$?bJ=ft%!1Gsa<37WMV,FGRVd+elXqWAi-nZ2=M@IOV@R;fBkS4pTr6*ZHXW1\DBpC32P5#Wa
%"6<Kj=Y"+;/=Ar5@(K/Sdl&f,1^tkK`K1@!`IL7l&.ne47M/5nM@7CS@RIDnQoAsA9a:LY<&?(>:a2R_X%>a=N\+$l/Kq][1ffKu
%@\a^t"_cI-=e)jQ7VCfM*>c?+>a2n$BnerD\7;LqNL"ird1!oNZ-Ir^%::s0<_P?r("Z8^#IotsjA\RaT$Rs3rp>`'4WKHU(r26l
%Z>H#<NF-(U'GJ)IOt_$[EAc:b^2ulm>qLhm2@UHc6?Z\A27On@lVI20j"$E_`\/2+G[H&B"`^2<M;eN8iUOK1%V,d[nViA34[T->
%,`e[P'iu+5OU2[uMH!3\P[gO./P01SO;.p2'1[)j`tW#gJK>75B3-PU\,ngR]fr<P,d-cmR$M"W]04/%UrkE]WBYR!!Ym_MU'`18
%9di5BV$^JT@;66*BXJ0mK+7@G'9BUZ'BrbCTX[f*:l8(A:dB@NR>#s?8gL:M?hQc7!TFa9(_`-(/.N@uGGu:L\9a90M&4TnoEm6V
%BLi2ZL'*A:`JtuRq.!%9Q3msR4'#T`TZ>tPM8/+L8gqY\iHcL9=T7D[8Li(s@f<Ksq<9VcmE!CD^i1*o]1dI/][%``/d(h,a!>IQ
%+EdfUWe;]Wi#^l]KeNk=#&k6[^k#K9J`a'7=_N>c"t3%Q-qm'+SB>FI=JZ5#CKRHF>E7fK"fl=%5^+__<?O+5#Qmb:gTj+qg-D"5
%CDZAi>lkHGF@$Nb87jpJ;NC!,#EJ30VZ<QL>!?\RUj&T<61RA%5X\#"%3B`b#5mdP@@s8uE(a/tF[-ikMC$X(Kf2=%>0qOLH*KcJ
%H)"aP`=5H3;iHqR0BJj+j8qK%n'uESW2)#<:./mIh_!48DtiejoLRW;0H1*Y'ja3oTYsJX-j%8g<1KW6U-Obt=aHg0O^c7$>^b4Y
%$hTg&!66r?WDonX$J7YgDS!ug4K^r1A$:qBV;q\@Nk"Y\jhKS\?r9u3b<r>ajqqh=S!l$a=k#mGW.d)\/8:YkBX45QJ4X9-is0u[
%7H.Rn23I@]:sdeq4J&?$C*"cV:_No@_FY/k7lQe(;nRC.r&9QR1-Y&$Z)Li)9O=*@+ESQ^QdDZWqZ2"rImZOT<hrWZ8h!g#T7BuF
%'+$\.40ggpMTlM#B`E+XOp^iK=T@\uIX76_]aP;:!g]=+h^W#W)&D$3Cc2TX'u4+n>*gqn5hmWD"?[sB6VKk[;@%&gM?jS0K"1oN
%NX!?g!KgUkA1`C(G<tDr5S5\8.F:=S!0mSLLGBulOjj^SPRJLq%?o9P0_Ia):f/eF&Q0cPV*nuo5]$X'(`S>98rZEbNK2Qj.6Cpa
%OK_"u(QoZ!7ZioZ^eOS?*b*UC2L[2,-5EDElVo]IQrV81RQtgl7(IT\.L2daPUPGtOl?ic7kW/`phl-EWB\a>oOIl<JKB<QO+4(J
%Lega-r_pdc&Vlk8RXg"RCf2fa__7;`b-Oh\0eW9mPe=+"H;Gh&bhY[:g[FffmOV&K;0>R0'"s#Wiju*[hR&q"NAGBej<H\SJW;?e
%G'&up_k+DpKN[c,=^PVb4dkoYPW-FG[f\FX)=_CU=*7UX16j\6\>./`PJN9VHBF/-1n>=7Shr47dDWK7J3p$!N$pC2Wdu#kCC^]$
%`g"ZkWJXidPe`rt!ct@MP`3Tr)H(6<\\KMKb_./B8giX*%&]RRaD<=,0<12GUm$pO"%+O<%n!+j$HA0"k)TPUc3Bm'OuZGbUSUS[
%KF[q-"NFgcTgrL)0(@+0aOE!7d434IPg11=D1eQA/:M)-%*'Nj?O.i9-&UiL8Q3F/$,D]#!gt9;$]5uU7M,;+d2tO)*rnIp^J&Ze
%h4PIGr'I8:VIu&V!\I_j>U\AmA't>bg7ZNO@@bKS_5%,H/f2Z8._$`;:b$/>:fd^4:`qdVO;'qd5hmG@59N2RqC^t&N4\D7P6:h;
%F"UbVgm@P!"#*)0h]tWC7-oN"(P#.(C3Tm!U^.1E0JJBX:_X!P#%84@aPAjOhuFC-+mq8JDBs6RE<E,UQUWB?_M1OLS@Pe)6!"gc
%??ClC+>BH2iNMA"jriS/O?faq7:*L+:@s?2LcpZ]Rl=H2-.!OR^iHc,[#Y+N7]\iPmNgJ8EU/[37/bgb*JD(BJ`XqdRJbsH*K([O
%;S=.*N'*u9n_TMG*n9t/G#af2C&D\H=#63a)_\9Tkt!_)V^p$$aM0I[3W)nbrg$-r.e.H$L9:YVb$TsD-@@:@O3CcDT<e)>#h20i
%8OZPUV:>ZBM61(%oeeee.0hfKY_I*#ZZ(X)?;T8UH6h_e`5Y.n@S!co+=]"SM9@+*bob6%`IP!;AQU[sZjDXZs+eRRr=,rg3rkVa
%n%=JU`CCp\8JG%?=N"$n'8ga_#`"e[(n?7J:e#gla?q<Z.g/@SapDF?#S`+,OqT?hXGGdJ%nK!Ir,3.A=*Z?bftGVpAN$a.m9PEM
%]$/<>ahG1(ZIR'o<QK2/EuVPQp4H'TKL%MLb,kpr<L>>B\J,XA6oARLfYX'Wq%:(`U=OumP!dk6-#Q(0gjWY>"-X]>Z58DR:2n9<
%@$1UD!JNB1Z6VGHOrOZ[A1\ta*QG^"N(d.==EfV]ge9b2'\Co-)CShtPX'1'M!Ng6lODkC^t4-O<JZ^R(l</mKY]"o-K-1X@@:TU
%"c>LuKO"f@PY)cl+e0toN];[m-AK`QjY9l:">P;$8W/Y64+q`#X;><s#\ur_5f+u`[SdidAB\&HSfe(XG(bAZ&JC9DnS%H4G]Cj]
%m?53'MD4q<\jZ66Q3o:8W<^?aU08Hg!!>aS`ScFXrkLc4Nu&n)QNAhWIDK2FcsrK1$85X8"u0H#'SI=c&ZQs#AFdS<%X'S![Wo/0
%5/NdAgao:XZ_"epTa4]F=TqV50rQ3Z6K@#`4iU?_po;P:_r=2jeg\s"gd($6@6@Bg(R6<rXc]t6ami$T6<N;N[6/:$,=UriHP2$d
%"u/qf"WE]OD%BKKW>).+PY+LsUrPc^d=@r*<$[_rc<(CJkq]41BUBBR`hYkp,o&GUkX`Ze%P^;2Uod,QjE6V8AM.-&DfX8l.4010
%M)@Ts"F:K?(M"s0s':GW41Kk0&1uOEoY,=Y(DC#l`f;sZTE#>]U%QQE=2]08E&Y"&!P8o(&5NB)Ph&^0eZgO<>9KuRMAqJ(qib"e
%//9a7*o7!APM)]^]Z7*NjH.FlOn1Tg)?h/tfV4[BMZQs'%\aQ-5[2a7&7(^@Em,08i#CCDg^5>H<"#d(@=OTjZ4lg7Agu@IO7>ME
%DIG@Z_[$Ep:ruZ^?!C$^dj.>"+tZ1<4@1<VSo;dF#K;k#p&rk"PA6;U9kM$RXcX=.J%tWDQQ@IAY\[0)90&]1L5KeM!4>;UKS@@#
%iGdj3ab&S($p@?hhr0B#;H-M[EE(.HXYuYLQR1O9.W#qL2O,U^H:80H2SCGq)IL;[-DsfhB0-Ub7Pa:h39kH3-'[A9kM_qD.+%"q
%m,rU;Y%/skQf*LB:L"A6T!>MQb"4QT,o3g#;*,i.$_qlQrIf1&0PY6@m*RftW>phr5od&GYt7@6*,Zp.<6#E[D&W/V<<HSI_ls]m
%"I@.a(`Cp*gIT'n4u\LAYpdg2E=VX5hmB"@eI46f9;o%EClMRn@r3U8Eg#c9a_E#I6G"[]2+]])TH0*a"gB2V4p>hYpa`RQ?p;p.
%-a*NF'5&_/GdO)nPqY@"%m:0&'Mk"k=-SM"+nR7_,#M>7@mol9o?cDSO:@Jjo8rHCZq]m5i@h%$.RAZd4<df%X7:\W\`c>ZWpgf.
%o;=EE"psE\$@PKXn<\EdKRZR<R6k8En2Sh1Zkl)K2;s<'hP^K[4"`1SS<@oPJeH5I.t%??:58dNO-MsD$*o`8HRlb;6Bd5k'23>'
%l4K_m+LG%<rrK]N--4=[npM83c3gIY#<F.%W#;ia4Jhnm&eeX5T*\H=R0PWq-VBiuf6#*8a.sK%>nQK@ZXSd>Co<ZCGDT%OVG\r[
%UliQ)WM*lQU8T8jRN+UNP2iHJWJ7CNAh8O;Nl=ghndC1dW?RKTdSeJEKeWd4Cl*OZ/?5`?\11-CFb@bMKfiipq8&"4^?Pn7eqsiF
%N'pgN&TLiGNjL-$=g`3m*9^sCIpBKFNpVg9]AdY\&QbWRE4GqM8itk9$5i^VZXT'1m#m?5,-)Q+R6ig6Lb7;-G?[r2DA+uA8Xg/&
%B8)6jSj45AcO-"K/;4jcN$lo:L(\.Z.Bu2c%io]-Ym%',3i53)A4="S_^m=soG!<U0`^_U=^s`])35tO&]$6]L(T/*kR\GG23IPa
%1>IP`RIk/p6+c1\7CYMb!5oF@;Tucn7*^)MS41dnr#E*DBFJ1,SW!H0X9`IJE&\(ThoIEB=;ei>;XC<W4dGq46:Kf8O!0:M]$Pd?
%qXgN:$S3aHCe@nE7'nu01H/e#S7E7frlT3.Tm)^IioU]uZfN%3)ap]s8A*Xl5#r`62C$Ub6TAbQ7pY]A`a[Vs_2D2/MJSV*s)ES+
%'I/IT\6[34*K,,7d6CQM_hNfl!oLL7=cf=ZXq!l%PP,\+jgZGtQj'X*`chj^btp.PCmK@1A_psc2d,9;Q?e[*hIN$5=lrGEH';gr
%A=5AZk"V.eP@`T]R5\:29pU'G-/\W:oU'4HA=5AZk0:)AhXKm$0tB5Rr=fmNDrURO_\kFS%Si+>".0hF`$%6!q+3\7/rl0U,P#ik
%N#[tD'A?B2i/LZk,XllOR%NE%hC14%K&+l!6Pj:u0M`][Q8-"KFcNeCY[]`L04!Mg.s=LBrR!0_L[C"#K"]NBNmYgRLU.Z\;.fej
%AuUoRO%eDFi9>kK;E0I-qj@'=OSN=)O.SBdOEpd=SdAAUGlC=`l%'tN-1@H@4#o!NIRoT]d.^TMU)L3$r<&&-N^PS<\-:?*jTpS,
%q2>+J,bH/mk"/F+d2n?^IaLuf!U+S!oYQ\',bIV@&,AR<Y6adAHm@#`i8TDPr(0XC!(@&:?/gtt.80TK]/'+n9e9Ahh3+E]G[ST9
%,M?:k]8k1o8qO9-Pf4s1EC#YZ8L;86%W+4u/'-e7@'>I#0$L[0Z`g+\K.JX@_,Z>n8GKk:rJmp,h];_LH-<58n&`>_(rK%SfWSu>
%>!.^;NPS'D3H3EM+D36Oe7&!9S4+6"RIHT]=C#m7Y8R-^<n`Yd3_!?K%=48"6^6=n[=I5)@I+>^k=_QA,]-sh]j0@2ZV?W?NQJb&
%R.".9qe&F,9i6EVTuSRb]35^OAVAVke1/Z@bBaR\(&i,_a>T56ZBte2A130E]d2nofbR5bc6W9<.IoFCEZ8`!6'#O$@,oq&#q)nc
%)6gq)nP$<c1V/I#V(c/Ia+W0(40^c?$M6=K>)Hc"(\6uf/:T4#1mUEWjcBD7*)\ir?HOYo1S0[mqoO0.HH^^5jUC4,3QPT,M9N8=
%(@lDcE\*t:QAZaDPgS>/.Ba/npcQ#Zc:JMPbIBcDatXR?aZMZ\k)CKNRHGt'=iqpag#Q"*LW;604GkR0UT<qK,Wtqc%3CRPGQb=n
%Zd[(5EOmXG@Fi?6FEuZg%3gM&+?%;]RMDD#/Fn9bT&"2fH+ntTY?,9+<eL<UOgWARFnl>q,!XZg1319+>b6EajP=Q<fl&(LQL`pH
%pKA`'"':NF^]jOP@HLd].4aT&o%_le2ahPbPSG_1_a`K8,/6uCK_<tXc/_K+_/>@>(71i7EKi/C;@GAj3M+)t.R@<nMKHjSW:@gd
%,gf_N.;;m]rJ]q5Ld6'X%%UH^</,i"4N!$4#;TQ(+*ANg?e1dOR);+X`U5!aYsXTC1!mg`m.(b8_oFio-<^uA#&;NHS9A5_Tr`Df
%EdjrCPhR8?\+>eYj\KSMe"'E?/DE=NnK)5S"+A.0hmH?-]H'$2h2E$u;J[d4hMu-dbLuF5*;Oi^Ho,?)J"XjQ:l27?_^IS4OpdeF
%6(Yc[1HRXE<ZdSY)e@t2k6o$tg%iP)*a,"HJKCA8XT%9Y85Y8k@kgtT!-`I7*lD?7j:cgndiU"Qhb2A^[rt%_mt3<G>nEcS66u#R
%W(+'`A2FF0]Qlm$'>[<bEF2+UDhJeGGR=+7L_j);m?<Y*8k>)"pjS(PXpL]WYJa-.kR4r\6s#82@^JPs<Q')_%.CKXn$]I\g!3i\
%N:4PQg5D*#.mkqOR%j4EN^0Thig!,6C_L/N'&2.q>`rTqa`!FWI`la"RMo0qGYNhH,bodol-%t/L!9#!gh0#HfAlAt[2`IPl*XGt
%Kifh='[$Yq8"mD%WK'@7fZm\d9fB_B8fRSPXl&H"^Kh6A5iCt<Cr:e>@NUoqfG;..9=51S&%CLI>'OF/4HK7;lcOdNE1_4XnK7$n
%N6_Zr`YOHnlI`4sqfWtQ_XkEM/#GZemW'&m[9*["&K/kIFhjUJlOYu@5I++?rMS4<=8q8!l,mqGO)"[VqP`QFXUdVapQpY]q<_[q
%Q/m"iPsq(Sr5-du+C4nH4B*[5m:+s4K-c6k,QXUC&Eu#$:BS%[*%b0^%Z*prZ.0fNBiX;6):Co>,e[Wd5jsI8PcKU++<O$^7:%(0
%nWu\COlL,4Ob7<qon=>eW#nFa+YtVJ.li'?'K_,`B8&hc9(JH5@W0i%Gg;\t)@Q/VL,6j_F2uA-j#\F&1\`:+(;/2-2bGGDdj1QM
%7=H]ER<$F)/P?!kiLs-TG<eCOIOZRc8j,7l*d@[i"+7eH9;f`jVQKFljA!h&O9-D#YQf984OBmp#E1@2Dd!#*^,Un9RD\QEMpBj`
%3`k?[EXWG28YfN=pc][T+6Ehq8K%Qr_^iGg;<C;uab0stCl=5(i"@)j<!EDH\`mOBF$eoB,?4ib+%]Q_n9D`:1bhQMg>b(U8!@Rp
%77pJcdW-Vr-$.!1LPp,U8C#@eQ+ssY\lgt6L]A4nmUcnM&KhhOW^Z':&pG;R6``h][FcEYUZmqug"OP$Y9!<qVCF>+%_t6q7#^Vp
%d<;bW=hHUQlKK$))mH@fIblpE+\_BkE1Y@i#J6^4*hf0q7i9>l/F]c',+$Xd?47HW'EV&hK$6PEa=ds[RSXW'g)QDD9$m<G5&5iD
%jYq\4MF*KC&2KW_MGWEWJIs:7>V-5G!i?SEK,kS.A;<R93ad$>.-JP>[m^J[^DMe,5kpBRrGdBQ,jZ14I3^+('(_;c_Gb8gPXKgG
%bX4[69Aq0?_TP9!LB@CWM!lKiq0O.\QJg?d4CFG,IJpVDQMTTNqXo^D+o"`1-(m_VC%TQjpt&*T2-"'$pCElr)pQ)-kjU"qSm-nU
%Dn!2^[Hg#)0/mYE7_@c)InmM\Q<X.IZIshf.pg!JD4D%2IW$sM$k3U#Xqu"T4)ZtA?,&f[[+qEN:iCrDpeUp&a/=h'J0Xe(F-$$g
%e(.[/d<DcSi2t<'`n>We6p&nnW#:OZ1gHX:l255Eqr]D?_qRn$154!56F1b$*NPC%e>T:4%lTm-AC@R&cP1Hq3SRL--cHf!RGJY3
%-XZgU^XsU7l7g.cHdm#2)4_E/HIHX$HR\(mBt^$S.^R,.qh+=YT]rq#rab5s]-`+Uk^7+YRQQk<h]"E$0R;&b>1:kGc_WM/go9t[
%msZ1FPoEM7:9F5=^X96EP"O0PHIVAUd7cF,8F*60cFdU]T%JnOo;c0sgAiWTN?j=f:W[EBbs3:.K?6g85FBAGUnNiVLDa\9NRfN3
%Ml7NGC0J-Uh]?lT4t,umo0t=VN)EA`HLi"75\UkuNo0O+m;@f\KMA@<0;\ARVql.\duhg\)?hQ?P6^TUm%<Fk1/i&pV_`7gS<94[
%R44JjErQo:::hQ\p<?\+7P?R[&goJP@kIpPb`'*c1?MKE,;WOVZfNrH0!jXp>OE;e+6.\#EiGol5IOhEs6_i?cb4Z%a0c2uX_?>%
%VFrk)oN'd1g,hu;P,mO[aNKe0?kc,GVP[+l?SD<6)]k"ePsHNOT<]7%bT$2#%BibO]kXmU2lBcMH5[i,T-=qB1P[e<YWbM%<][OY
%H1'3H4mi(D1">]^4D^In^-ct29.FkS.ZE&.[<An4?2\b,g2;a$k+BmT^-UU.,G!_\7^(k(Fp=`2CE@&:MYr7dTR5tSr;E(N%auWH
%Ve4U2.4,8"3G<`pb!2G?bAX4[Y2NT^2So%W/%&Tp^3?FLKt#:*_#["AHmZbpIjop=^F@lsC:\-'\d<2MR`1o,JcD$rZ.j0'qHN2H
%>g%V8)#Kh&\%(9KQV,R=r;nbs)+^kPA?*qi5,0[O0oI"oKiki%V<c4GJW6O\=_["PaoN-CK/(jOjFs1;%f1"f+cQc<Qk'KYo@!->
%`Q=U/riXiiBh6LD;"V>YrqWDJ:U<7bC#M%47dsD?]iQAkBeJVXh`^QCP&mViUurlPF$9Nf.'bCr/B]D\3pQC\ngV!$c!o<!s-Fon
%2#A^cWGl_:rL57uOR:eis*Yi$5/eje4KN+U"sTf#FR?F#P*M;A%eF1r>m&AYD`#-a.1Gf]<c5CYSb%$2I?m2Rc(Gqp^"Ct[?s_H!
%lWflQ4rNt7R+Euq%+cUD2Ut:,=m&p:i[sc>[/TQDR;!</*,!)o_i=2c0Pffb4cR<<2mf/c1,H,-Ur_?9%Og7VRumd[;P7<=5f".g
%c`$aW)=Q!c_,!#g4V`aAr</;L+Z`Ppebk6K'U+r1d90!PE%7E*Xd7l"pR?U`SUE_MbI$E@QQd8hp%]'S11b/uDY,taYNB3gXo>c\
%R7iZ`ks9MB6>^dPl/8TM=NM##<?kiu:RJkndHs?>RHB;]0;DG?eE07jrSbXFVodsk\/BO<*0Zb,rg%:NAtD%]f\5pa*@W<ko,:l&
%h66jqOX7>'D5Shh_G2&pB"EqljqP4[;:8fpQf(Mrd^VkN]4k!Y9JMfYRaYtQWu7eGdr,%<%;&JDW@^UIICl%>gMTf*%USa^pG2tV
%J[jrkh3<MJ[@Gg4;K-Gd@_orhd2XK.0@kSUPAIX2.2]EnWspZd@o<j^1Qr_QCKb#99^rfQX4J<h`qNI($CX_*<m=+WpJPh!WHlbB
%G!!qi#c[&f/ISc4\4hT^bC=:1fAL&F'dq0mR0`ttG+CBcdS+7Zg_X*?at3@$;dn8$e,"406qK2&fltH3E9Cl5."#ngP)>F9pi+6l
%:C>Wm:3'30n[R8u7CaJVo/c!-Um]HN$dU@?--J`F&Wq.JF&CHe5V>YYN]?Vcl8n%$Um]H>3-44F(F@U8bWL#QVd,HCPF6\*DFSYD
%jrm>QO#](sE:aKBA"%0nhhUBkb$<+j@fB-XR%K*-X.u'E#d2_RKn[e317d<Br.dF'o-hB%Gl6^cUn?srTQGA"9ZG\5M6C&"?V:EO
%N3?f?/`UVf_:L/BW6*Ps9O4-![cSftAm?qJC00G1RBi,-CDg3s\Cu)aC2u`+GRF!.=T_5&&H&F-J/K51SW)ooN)G0K,GU3ViafFN
%pr@=@2SGa'IsBl+FH.\EEb:2f7(.u"WKImj[aU[Fp26Q<5jJ34m?.;*Zbp"E2AJ*o>isu:Q>:_SLmh8o1aT&gn?8"-s4?0jr*=p_
%\SIG]h.Y@;dme-FCMY6=fC?P'3>F_MD5T8!8WkVdnKhm]fnhA3Bi_nWT(t-e;V1faQW[7HY1JR=:K"lfHZ##AdnOK;/[*Cs0Fp;(
%$=T9hhbfu.E+YZ3e_6@\Fq8]DSO&/-g<U44)[Z7!O,9.?Em5mH8DtN")!)!eQNJ1$br:ep%\mK*OZ=7W[(K>]@8n^TA.JHPcQS8Z
%\X9*"\Y<[uo.oiN_ITf[j)mDXd-EUdkEgW^N@+@k(6\8+Lq"YWAiossSUN@,s1JnT.;&,-a:,EMD^&_tphprJ]t2L4rSkT1/MR=.
%.;L@mB,:*`@_Q!h2iIKDDu#c?:N%$?SRMOo(@rP$Rk3]k77`32;/_tr%ar!YA8^Tqoo*LS"f-*Vo#[3O/MMBPBpNDqNbQc+Vr)=!
%InZGCZZ10FLB]7d4QA<<%-':jnFA;;fh_FLKLkF.fsN9id\(poWd*637@U3>9=#rT1(W&sHH<82qe`O1LPuOi[Bm%)\(3g8o%+e^
%HK2*?p:\jkqYdh)?XISm^"18l<9?62.G%]P6(Rht1B1M>5PkO0oK<#s<$t*k`;<p%EmPp$P.M!gM3cW-1+U=cr$M>6l)Bg!:>&??
%DNL-nKrf^&\LD*%[Vg(&1RDd)9jC0$NaDlse\,9Loq6/.B4&Tl@(+DL`&PV7ront$QHDiYI*:"dQpS6;d9aWu3.+B]Gf^pYRH*DD
%i-=3u(?Tl#?5W7JA<*##nWGn=1<3&MGf^pYF5_@XNq#cd;kuX!+9a%^[g'.a%A(-(+C2H.[9%ApAWF%^Y_cN<7m!cn7G2)_1GX_g
%5AVOg*+o/RM=arCZS*&sgKQe/NW-*4)!R?X8"l:j1,6th0ft5+2M>R`'%:Y&a"*T]1G9m"$^A2aNS+V3s$>U'O7Doo+Dc5t;Khob
%[*Z1aH+\Xpe_<<k`N+3g6]+d2c.T8tRFDO@*.X>lB:gC<Uj,aI4iNm_WR8(l/Bo/(ER)WFrg@o7T6]kT5!A</IADV#?Vee,Ita4`
%PNI(&NrMNei)`tRH5Zml[PE=eF>,q;P$)Ji@%jR2Ec3^fT)7b-LOt90P'F!hAi`-poi.?%]\TqA'3``6iS`]1eP*5)BscVD._"Xh
%O[d$TU3<%%0etu5I/>Y"b`=L-$F"R\r"s/1OSLVCf$_h@)"Sqc1I&m\ZLQ/"Ong`o`/fJXEo0NTln\0uEb:r?!7GT5X7a0gX*,^^
%^,`fD,%-#jV_Y+&+3s#:c6Q<_Woh=H9J`*)B.%E=Y%\=tGCZ3tV`I44DEP$m[G(NV7_^k(M]6X=@(V%\1Y(8)Xf"$:-(j0ZV%^&q
%=1eI@J`!K(Z)(stkEP@@X+Q/0al,@]d.Od#^.bjUe80Fe8b'ZYIQNN9d@T2GY304bfCdpl1jhDI2CN9Ofs*hmBi`ol6%@;LiZAT?
%-\EaBq`HqDYKuG\WGK4M\%8p+62i(I?7SOFWa)`\Y>iu=T7jCE3#n"5P<D^UV_j;fj!e>LVN<*Oc$r!P5=mGr[r;CDkSj9V;rltL
%?>Mg7)=_/d1ZQL#Cq9S!/XMLZA_(*uc"5I2&uK3jgg@DM;M`36R[]9cACfQ6>BACM4m\WjF",CkaR$IjZKG+:=_>rjk$2ND7Al99
%F.#%Tdf(u)QT:CI3qHk,*OXYpZ`]XLSnHoG>>_ST24&1nR6<M/p=se;)oFNpO<N^To3#^`.1Da5>`%fpbj9`$ls,C8B?BO\#>4n<
%;k>?-qD/@e9ZJ%,"N,f((OGbMl.%E;Eic:snS4'_cdc!t[9ilG1Q@`i\!n/iV0r77gsAp@q903a<>"c`P)=_US=#^gEi-gZ9UJS;
%$2!F$cI/=t"dq`(C(BK2j)<O;WD<C%d((>!oPZUXFi$po^^QiOWSO:M`htOZj*+14G!F8Nm14.+GL*IOPJ$Ghj#>3Ol7l2iYBd)u
%Kh1NDbpl.k>]7tPokJs0BgnMhPY&2.%9,Io@(cLs/dJA-B0j^T/Me!dFZ<.<8o^Aahh5>c4iC7Q.B?8+"u5VLFOB43^Gujg-sN51
%B%l#S%A0]6[!$=D]'HLJr!P9&Arj52(gHg6dr+u\1t^bkAm!"cK=ukk5($##'[;Y9Pj(T(:,I5=qj`E(=t.%#$-H>tN\XlnF*;3A
%mduC^`Mb]cEaYYV@9*`/G;1SM+.7a9gN+3S&5csJqJ=J$N@;?)U*N;PA!h\DGhmC_RuREMf,/49c(e,-\rH^bV4[%$)4>H67>@*7
%a4X9eAmIBnRDZ*6a"*T]1G9m"$^==CB!QDgA`Gn!OL(8_cDo=aGF7CfXN+Zg`EZlj2*Ae>HG*=+ic-F=./pR)V9Rc27+jT,Zd-ZG
%4m4N;\H[,k_pt9o9@C;BB(Bd&CDnZ9%Hi;gcb.VN#']g]A3KmgbaP\Gf5,Z?a3iUWZ\e"E*F7-rE7l*HZV<h<.?pNo59sb#3h2B'
%pUj0uREj*m[)$sTe3D!/9`3'(bX&>k$L6?h;\493EIeV&f1F7jL>=EOK<$0M>gZ<(D1lst4DL=OVe6A0'FF$88YEPjI^e%p:=9(r
%CFe37:=?63>^.X(>`/:[:&$EEq_?NFb1rdRB[uh=P)W]o,g4q&-$S1mlrf'Tdmc.dqD5J;<0K\j`5+%O#@4O`4&,;nKc.i).rRD7
%H*>9=oX)/*44thV4iK3uI:TJk5(6+L.l<``L%D>JR&*paSJ98^1kI6l"R06$;cSi.Xa9Il,cWZ*lM+Ak[0s[p0fCPp^?D1H>4RrJ
%2dUXjR_u;q2@&a?%_]se##qP1:]+J&46W6u[_7uNk'(l.h)^L7d`!3<>4S-,`YfHR]]h_oh0bGCF.IbD=)E9^7uOo?*s)j43e4t!
%R1U[\0o'7BV">cC$Dmg6oH,`9I^C`><p98On\jl;d+c`EqaZQn+jhlX2Of?B7a(,p\T`M/g&?O\gFL&E7\%8?^AC4^8&Y!(Xa9bg
%XG,*5f4a8JP:B'XSBW;8Ai][qrOu@FQuH9WlSWGJUY;jHT[=k3ILXD,fB`-#4Yt>Zj3J^[ZBWibh7bS;@GYdA!3U-4Tt)g!]^Sd"
%[?%nmI+1l]rt!urphM=[hD/3(A]&F"ri5IWhdbD$p4F:!"Ui'!(`5JNoUA$WqXD;_:)=2NIDM4L(+HKAmJ`\aCBJk4l0:&i\insQ
%X#V&7F-AlZ8B0:%E&"ppC^!Z5d@TeaTo[cm3#mg8LZ9/#EUW$!-*K;:V:mpUYH!?B](![^9O$+gSarpt3>R"e4/Usd)LTq4h:A[_
%gB-.L,hTg/M8*B4\$+.H1NPe=dWY&r-RDj/$((CJQbqW@63=]'%M38=)@ha&iU"#.J>IkZ/c-R'<U]=^,$4LM`EI_o2ftJ42n4>#
%FX:[IE*`*"ic9!"A)d'""H:"Kk]N?N:\HSj4$bs^[2FI7A3+hMSdu>3Z9N"5?].Ym`C0kF4$n44&h5fuQ3h(\*[@Y>&6"h+kp3@<
%M@6Q)<a&\cYa<ai+$UE66=Zp6Fa?\-"P:"d$W106<"6TEY3m-s&2YL0U^`(Xd)`U/g\E@AOM&S_Pe46.K\W_ckA8*t.LN+\T1kih
%s,TC%Me^<J/`;N-,n8-[M&@Lm[!@?<A[TTSnZRp'(;AO*Y6pS1YtFB%,(;)Lea[E)2!qKKIYXT+!Z]H_<'bp!diL:Z$rM*!Cg::t
%VD>FKDi1A6K,[H1Cf1W[D=3)e.N-<Brrlj&LKH$(eSi\S3sa5`B,%X!!W\]6WY\HMnJC&hd'Bb9J1g-s+4aGufP";j7SVjULuK</
%>qAHq(^rjk7M/00]']<Yms]&M?CriZfGS#n!aZ.M>!,U#&RAP(q!EH=Lm]/JIoK47RC,dp?Zf5U55sXIrX3*74^HT;#7X^>2]R_n
%VbCPjp8[Oq.ULR\gAmaglhqGarsW$/ARk*\;?5KNq8]ZJE%pXQG_:@eagD9Z7LjO\-E;T7B@jumn(<t.^q3s\%Y)ZApQqlQG@pm,
%W/fOb/AU-1?4Ion_51DUX.><XgGDX1F1GRG[[P2#9jtL[ggJ]D@l_5Z)pH#LL'I?5%(FcFRK_Mjhs:0[HbfTnn/Ap(;C8jk/KP9,
%b[[Z&IU)P\,1*<1]:dVdmC!u3Gk,PF6b.X7priATk\6Buem)4>fJ@^LDG;,6*fLJ=<,Z,%roZcQ0<N'%WSM:`Yt9$T?[4U.gr&Wl
%Z,U\q7roLh9a$&Zs/bMk)(AL(]ZgL2-S%&UC3Nm2[tdcIo`"t[:F=H0Z[^;$`MjOl98;em1.+j%@HO9nCcsq,WZh3=jUK5'9d[M.
%iK^C$0fH@6DtD1P`L3U3)0V!-4N>i,pI9tEEjslH#pbQ>1?mdD<Ds1*X/M%FTfQnrl;@5Qj#*5'Ad77qmWC/u7p4`8CT=7g_(f.!
%],SNKNoa^Mg"%b,29@P]2/35J\nS_I"iFuf^FHp#1XJnM@*dT`s&"b%C=kV^E7+6"&:;B?\jo`C>-D.gp@R20p/<a-rucMLB_6TQ
%5I]s$.&SNSd2A#E"lGm2g([$.%7<##?0b[oY+W[-F&^+$^uc*FVQbDR;dE%9ArN/HmMG.p#C[\;LdN9Q[e^=#?bkM60[b8bHdM+<
%(c0K"`TkP&YK\X0-&dDEMA-?)d?/AoNmB%t`km+aM@It=Y[?,>FNcMIY#A-jDSbMEore75o7*UV@snB-<p[_^I[U.X=)Qj>s5+L4
%PcT4[O"jCfZVmmX(T+gILk+K&fDf1F:=FU!Z\Xa,<t%a.:`.rA@8im:&s\HjECE_V"$PnO8FBqY/`^)j:I]V.TtH*TV`Zo5]K[:K
%Ro4M)^Hulef7W"?ItQ\You'e`S,qs="4V[Jh4J6,B>8H>BniM282nKDDqiM]oA:2>TF*DI-b#//f1/XD52)m!qe-('g89Eci.(N>
%_$(rY)bAH_ZF"K7f4PU7BXUO>GAU?X08aB$(KXI>,?Wtj2H/=e;/+RWN>Rk'FR4<J^Yee=7!;A/1@g,0HdDl6+on#p/J8cSrXWEW
%]l<S_D@QRuL>rT3HF9k$>L;Uf/7A[N6auB;36uOl5C!K,gd<d.!,T0[\>r)!fZ!f]QRD/IG4kmr%9'Oc;,?*M/@TDI99?2c@-1:8
%r('d0*okSfp:ksp$QlhUH=Ln#5j5VF"2;K8JgQFCblqD>qu&g9E]Eq[^bH(g!AgibM>^c-^U2NFiG#&GmQol@le]D,bo_8SW#^'U
%NlURL"PDUMoo?e6h;6l(m?,a402+KG+;dg+qK)'jeS;Q?D^'mYc$&KkTD7tl)Mr/(-P?+)-[='QeR?7W&+PC_J29HJN9jG9<,V[_
%OlH+d13O>r^#O4-B]/\)W@0"98l$H>Y0I_^^Sb]PfQK.a*p6ZFo_Rsu).7rD'h)2N*ibDPP(=+lA*Ufp2uAfbT)H.=F1k,TGPYeR
%n9YX)H*>o">ottB-q7OjbogseEn]]*j6SlC%0fO>Jq"_s5&kI))YO*.(B?n%``pa,bZ5.sc7<WH?QV;CM.bPk."9I_]JMc9GtJ`G
%\7Yo2OXUIjd?4#\C%jp2f^_i845Ip0j?mNm0Z,ioN&!\(P+AXP7$ko0BG2NLAmuaHIc"XqmGAtDqqHb6;s/Un<&c85VCKbGF]3*`
%h/m^E[suiG5XZ&g\W]s5h8"1k2+)FS2q;priM\*3`N8Q0g+cj/j)DXsi.em;@c"YR()Z-"5p(j.*d#E2D=lOVFO?YP03mia"q1hP
%]l4D7Id]D.kOn\#\+)\';+b^YIZ(?sDV5p"4"u<o2baF6$q3m*8@og%?5Hu=#)sPo>Ydam,]6(m-0JJ+]:V1Ss68\rog[h#Bf$e-
%T-7`i\&0i0/[':TnBUseDS$R4EelmEJTfK3l9gJNl1H[g"7(*`rHLE-g$$P^A?hq*,;0`7Od+GZl"u+AL!<k2cu0/>p4q8Sc#qCh
%$4scg1d)0Al:B!S#+"]@5pHE"P1TQup%H:9"k)mCZ[Lgjp\`=0faAl8i'jp8qt3,%]ac@bNa=n_G=Gq-8KqN,(L"qO#6*+UZdF>\
%TX"8&d*!;c7=`r!d4KB3Qf,@Dh8d2Y3LGLjmn=\tR#\t`p34:+5rZ)oMWk6Ght=VV&p-ftHNn_@9_5IcdgnIgR)V,E86]ZD:k7>j
%NL$4&"-+`c[A9[+X5Cu!Z?]o`$`]Ino('Vc(PU-!T\1"eIL)\M&Als(!"l!i;>s`PL:E%OgujYmGs1YY$?KGNGJBQUgdP*_j96V`
%:SR-k^>F>+ojQW[m@)Wp:L0#",V'ZsCD`Z#h(2(Mb1@0NU;f\.f,i'(aOn"WifudU*!BJrAHbhCS)n'l]"(j'`26e779IcpF(C1d
%1!ZHRJ1$;6/]at_NCuep,u-(>,KYYn1-Y<nOO6WS8ggpo@*P=#oE;?tk@.u'i*^cfhQn3;M=)Rr4`jboGY;UlIk2`'ag'E,B,?[[
%fQmt]L)]T#g=VJ57MKC7jcs8oDG(#;8SBTLcD+2fJ+U-sP!<[Q00SB>dI'I]-fjrHm&i0^gS^$C?sSb-Gf!JRZ!GrZ?K8-Kob/U4
%gpGYsFS"[4rn=:Wm=%IW3FLL.>#JjHgUIBG+jXtsJApi"IDQG!aXNo%H"26fITo'<S^;9gAB9k</N<(iRsF-]mW@_;rXQa[gXTG'
%3,CRc95&AQg3HUpcc7l^eb-PV#aZGk!d6rH%A_d;Uh>3YK;!!E$&SYF&?+1Hk%j?"k4td82@e?CBu$cFRU5Aj>iT]bhsM[kHP7e5
%>Fkn/#rXAsJsFuI,f:la`s9L1RpIIlT!mVP1#qSi?!cU.kQ6l+*XSbg6S+).a0Z$0m:/&@GW;;LP_@cC(=3'7WU0'l3S4h'6)/SV
%T%'nnj^:bs95=$SfBnP".CD9(<<h*29Sb-$LBO3CZ-5:-1lq,QCLm<8YC"ZTNBBYqE9&Gdb9Kg14>QIQ((m,$T]^t(7`sdO8j7+b
%oCZ^nHeN@sV>*e=O89\!_VPD0l/b37TOJl\ga-0IEmoM!q<j>T-++kpkufJZ$k53-PO*iGBS?n`b!*O8ZlI/+#TX(?/\C[n0?,-a
%Um7d"_Kb;;`XK1sR2<;4mIKFB2B0)@pWis;OLRb&+W5JBLJH3P9,td+?#trQQhcbRW-NStb=E1R!Q5dnZ[2'#B<L"nl`WB:No?P2
%L]eZnYXBAh..tWA16,df@OlK-N+LnFG-rY)<n%@$MP0B?$989LKT)(SCPXpEiu<U,-8lhkoiS7iZhAG[Sl2=eX#Cfid&>i8Ni+%0
%A%a!DF\F%>FVCTO2cLS`o"XDR,W=os:4g%@aaC9@RIc7LeH9jo/WfMhZfRh,!JHZH0c1G'$&tB'12SZ]G;:'Zb<G[cIb4%J@p0nm
%Z6Y09-Y[5//Ve^EM;5Sn(hY!XMfu!V:2usC]a9Y0h5Lq5g!-c@-dX^1i.G'I/9@Ib?E;TtDh_)pM$t7=]S*0jDt<f$gl['fB"6Ft
%rqUPBs(H'>j'qGg2TcXt#r0Q[KLTW]1g6Tn7lZ^[02iE6F-9Hmp:$H`,C-cgO5Jac];L*0c4s6(S>35LFSVXAY7MGf6Z/H*O+T3f
%ftjnm&2]7@2kpIAmmGNZP`\_&jCe!@nV9j0=sTe5k_<c2@n,+PGL>W)p"$\kMk/?@^@2-RB,jKN].U>'DU37MRh=).;7PL2McnF_
%bs9Y@o`E`R'Sg&&:H$$9Otg(!#K4upj0`DF/_eVbF&oVQhR`d1KHS4IpYDaL5FnZYLe[SEges-_7C1U$)%MC7FL-+P_`Vj_CA`=1
%h/\eX!R]P9GP]Np(Nl>OA9'cu;T)dQ8"H>oZi,R8;]IpsXhYf4G4UjdFQ`XYV=gV(&(\D&b:iMb4"J:0m^(+.e[*i/(Y)a5$P,i=
%0AjBW]m3qhm]:<=H1ke'Ge1KZn\OogG>PWH'lD^9V]*Pq7Hp)PQHtk^],POXo+*e2QTMm?hFm5J4D&)?lW.)oHI4C;4b(/QZ#9@6
%V8hOC[;nJ2i,%U[>P3405eC:7[q`[-eh;OO<&EI8//Kqn><Q*JrqXtUlcu/,2XVV$^G[/R_.1Wcb);J%hX9+cWI=R<_oKV[.=X>R
%WH,W$:E/U9eP@-b^&6tiH26<i]'ueM$BH?T<PKOB%*GK?NpL4rU\T*+[!:F\S_NV`#XlD^0A"^UD]A"<*uqPG@*lU8kHiKOpic[A
%H*b51X17/:]j',r\^P#?GjElbn/1oc_G[L61LDf"cAgklotiljr_i::ns?24dXsL/P!=3djRC-Zo<hcH]>/?EV98&R3IA-54S%iV
%j6i8a`oe02@e8I*#:nW,O+Y=#rr$apJ]3VV([!hA``bJ%Zr(Me*aC<\hHkP>?[dCXYjFro;n^P[D5p5FX(p!mXo+o;#`uA7q"BiQ
%e5mTc7ij4e])?k^A_A^pmG1DnLNcts2G0J)GE+/rY)-@gb*sKS4&>3@qt&84@K"*DG&laZp%tP-&#T!;H?][]jb%\d]l#!lSeNgn
%XVHkhL\35frH)\ar5`*W?bNl>^5J&WnA8i'KpoeeP`sjk#5qYM;I/JCerM:6=o6WfjU:BKH`(]^#/=0(Siiu'CZVI,O*O5cO4W"K
%?XJ5YeI4nUrTt:nnJGq>Hk?eG;`Fo&iUIttndVTTD\^I9"R`SQHYQ[OXfo.L62BhEq=N(XD\^TFE49MO]Qro4hL#-sYZ!%>Q;@5o
%h_r2s>!7MY'TI;A`seX0Xnqq;Z+>$Z1u9!kWo^ESa/-dWld=GNjh8!8l1CYV0RWH1[eK(Sn:Ama\'(+lSZRZ#X6%=s9*QC;CISA]
%!rYmnp!V;Vmi.bE'?fo(edhPc$O8?]KAjqkJ1EoP/B6H4/^`*4:s_rDGM6$QfC,8E?e1j8Q0QC!Sa^%cbBgQ)3:_$6WRuAYa4DgK
%>^:>.@PIG"HJTSPS8^AAW*X:'.ic<#$#eC]3br*&$`>ZL"_IYj]s`1[o/[g^'I)+9ch4=HpH+;0F)16=ZF#n#LA2*tn?,L0B"q56
%7,7k.]"AQ;]<bU#40S;C[G%+`K)K";MQaqcoB'JWo@qS@/'B;Xd^$A!rlYp:VJrbF?NOj2`%;e7hH_CdQ^UP6T"VI+JTrZ5U-1<@
%LXE$7>@$$$Y#W[-HYr#hZS/g).@_=#X*.[KPYJc'Xm@#?n&_WV&!uO[j[WZ=%uXflouggNFkA;dSA2`FICrel3p9P/gTS!Lr>#2s
%@INjd!SmD5IaM?Q3p3ScZ$cE+\HV#1T/2d83IL^/E--?Ab>/@hFlViY>NGNcasY4);;od5=teUtIUV^'6dtkb>ZiHB(<Qf.9\?$:
%6<PsJ/9Df\ok3QA`9Q7K4nN9hJ8C?M\#Pr,.LV<P*JKY(FqkU8Tl6R>!<)ki#0rR3[E[PWnF,'OZ`"A&*t%mP?Bk4b\+!s=rHTh&
%9thSK5M3PS<8S4H$i>PY,J6X.Of(Lij[Q_fHCldW9W4$/XZtVj[;>`:G=Qr+s0/30>e$lN5P:cA;QUbf[hnKS]C>4T'<(L\j>ut8
%89a!%jJF!5oB!hl8_j+V^+Hq.lm@1nGQR2ep"$*/];L#Fm;&+IiJfqs0u3jpQ.us7k->uq6Q1Dma,>k%R1G(4#tIM!^`_hqCo5].
%%Vr>Zcg#an1bX.`hB%GM0^/:1\(3Q]TKb?(%o9%V?hAQnU",X1nBZlA$r)'I_WM@/aS"-t&/[sq5BnK#q-42VMiW^t<q?)nFYR>U
%&O&[roh<./L<A8#GToBfJI$$-ra\Pek_"p;*lP#1UfeJ%"8aFVjB!Qj&N=B?7\Id=gj"<a9:f4@0>m:R$hTf3Gd6KG0Eae>=_$J[
%\.XBaZfWqMJJOk;gr(9OoFW+(7'1:B+.bllMZ'fX^4!l^-=!k?dPC<#Q`N=M,DfqjA`@Pt#;W=-ZbH"<_$3sEpI(f#W4uo-P;"Rj
%rU;.'O(Y:r6:P,o5%+XPU1o#OU9u5[d?JSoCp":47WlS'KnI:0Xm3n.rrDD9;b`Q"DP76^o5(K(Ac(:up"%#CMD`@;=`oB%Y]:QP
%RI\>:d@E4/V8h]YNCrTtgO1F',TXehmuB;MA6ia1Ls-mHetNoj%CLSlZM9[KKY*_3+%)_<Z,`(j)i"q>gsZ"+msY#nbATgp9#Y;T
%Yh(AnD!ZZ>StL,Ygpg=YO'*[U@eH#74C2Cj;JjIX5.\H&!=[Mr:8PCHn>L"PCFbQ^W>8:Tb5T<$o2+Nm"mX(B%:R/^Z]EClADP@r
%"k^"l!5$Kjqin's6QNfsi3npEU[>aU"WS@/:nZ"$msiB&8R]/k!qi&&9+&j2W.P,FY2JB.@3)V75@9'ZN76!pTC[2MF74^]9lFAQ
%8])!''m=`e$kKYQKuN`_A,0]`H2p`C4=S#$q!bN_qVJ,6WQNAAB<%L&.bRcEm!iKXba19'g0P%F1cu=oHjL.^kOr>*l_(KRjs?Z`
%O=A)pE$V2p%L1?/QLur)K4i0#FnUB&"*dLQ*XiS0h^Le%\E<sb]j=5'7h*0apRcSGT=F=;Rdhl]n(%a`B)MaC2U;a-c&F$ZrTp"W
%gO$N,D7mF@Ec^s4Tb$Y(0IAaa[.bA\9'7:7XhomTNs,l<b/8o(a9@G;gIkqQm%,*rTrb!En@<e;4h_Y;#]O*QX^<t$>cJSP9A1jr
%f..s75qdESo;@@fWg2-8a]#h7?9/M0QL@$6i7PH>(WG"<)nXh`]?=9'W.T<g$Emh(+/2=Z/f];i3LJRq(&MHZZE%eao$(g\*PWP?
%Zlm]Ie,T'8i@t@F<]@VGo/F\Sp<cfb_OC%;m0ah_-0<W.D+^AfFGeD&`h99/bAV^9,4"aWF2;./\Ir.,0YZWf"_Ol:Q8cCa?TbMU
%>[01;FWH#6Zs7O#\D!uaNu)`*j';8:oom_(NMG)upK,\-p)>+`h62M"'!E?sFZa"[^Z[lZ_D,mEDf/RHYbhFI7s[fu`gTo;:EkpK
%2NoOl&,haQa]KGfOtg'smF+t.f<E?pYjqgZMTWD+XNM=7!3+l-[m6;g1=jugV3ankZDosp?6L+eI(.i`]R6X.figRgq5Rc(?b4D^
%"W)'/3WE&-Q_*)C_J,iplUd[.%%+Nkkcq\`J%>#h:d*]a<,C^k<9SG=7CiaeL->.Y)s:/]q")000`87])rHOF(BP1l*ag)Z@-d5D
%!/A+B1?bf[o&tKHWn@s`r]heo(ZAS2W'K$+gR\;A4D.CUFhQd954>!]K>t3O]]XCA;Hm$_(5rFk26aqBLZo'Aq>-YAoqu`rQT$Q:
%+,]4>gO.uQ_qhZ9hSE))l/pj/:Nl7pX`n=[L'a6fO33q6[N;.IZ:@W>=0M'?%Gs1UIs8YRI-:L@ngT*jfQ?O6QX;9p/s+3hEWK&k
%cL+s<B"5>%:@IVC-TooZZ+APf/3U@8AU0'seN#72hDi1&mg"p1Jn7-XAbEO4BG;6,KD\@&g4NVPk(dU8]T5>=P$`G1lfmYKj2(%u
%d.N\4eag?8&!J=VBkK'7A(EiO5C=I&lL:MGWj]>LCU3)P?G%DqgZkiG[74`<rE]XcBrZl8Zhiq>AcL]kD"fep2FFurV['M=qjaWE
%:T_+P9!:jB:La[I@isN2+$c\%[Ke=rnP)n#GumTZ+FJhi"B#(B@3+o(W%TagEV8)Xol>,s$l*<eOIu!s.\H-YBpTaIn!\da`_N6#
%A@%h[8@1:2HTUUua5&q-U_\,S.k`j4MB,hOk@7_'f]]KJ"6@fJ"oD6s<Vb/Cnu2-9n)'1WeG\*LDudJbkBDXRq9D>1=qkNL/W,"+
%%#5A2HFbQ!b*0l3SqJEX7A4`uYh_Ij-]cHKYBq[n);!g,I=A(t.XX:XQ8[%^T&4stDAM"t(PUosKnj"o%M(J2l?]uo%0u\!S_G*a
%8,h1re*.p;.l6-='lEIaXV]pDmWmNs1Arl[bPJR-p>s^9qq6%T2rEJq]aIk6#Hh4oTo8q.i5jOI)i(<r"0(l>er)gS^K4dq=FKl8
%6IOZJT*+D&[8l4[Rt,Ck'f6=f'JD`n7[Dsuo?k,Kq256^Do`K8^,%0%s4lq*QVXWHou4Q;h>g$Zqc:AbH"%7.c0O+,c7[t;!k"mX
%!7NalJIZnnW-ip<"aa'+]p)'-ZhN_-Z[:5,0/pId5536um;>)gDdAI"B8[THH<Vtl51N"U'(ucL$oY\8RHdecqt=emdEIO?o!9_<
%I*ar[Mg92UL[TRU^MDARc2&"jTHB;#]Ij$HT@&`;/;5uk&15gI/hB%qGO5[#V.X-C4).UtC]*G9`qknE*LS=0Fp-^fO!Ht?^#f">
%P;bt-@'7.iN@[FkGRV!STmj.Z#Dke4G'0icWL5>_oLaQe!F?9DpAT4Mf&>G&Tj9W`)"AGnr_$m'*t+`@.;,^9901/FKDW,UO_b0t
%q:^cOJA?*,oRWMC=p7?A>($jYogPk0hK@*6`q.J7d<N3]MOqekl.N\.-A<Oqb-CU6`VUGaJ3XNk.Q6[R]4>XFJ>e0a$2`Z]=i]Ca
%b3=42R&fSSfRCQ5'V!@mQ^F<s@@AIa:F[a7q?'m8k?V9X6D<Z>(t6!I_&fGWfA>eZQZp0oK`ZBO#_j@^2tWL7Q.g*@'3I<)]%)\E
%pH5U0I!`T:7HX6rl/hm@@,6=?65:q8/(b(*?-1QIj($(W)J_j.V4@ia!5m,5j4ZZL#'tZB(EQl,-Tr@h'0Q5,A%c#NPSNh8Du6:9
%&8CrEkuG_$63:c`8aj>31.l)J331(-Y8?)i"nV"Vj3HpNf6'N_l>cEX"UrjpDV/mR.L#!<YE+8,Q0Q5EQ,Ad]k-DJYYMR$I=mmrb
%O+-ZeP13.acqeG+P][HCc:R1mOq>Q\hnSlVK+cg;ekQI!2pR66&'L$04+\;*@1ITD^8^Na.-(3TlGa\aqu5NH4rK>3ZA])&BI.Hs
%%NT8VUo\JNp6R^GD9a32,**leXjdQaNsj6*r\gd6<Xd)85.1<_ED`oDLMo?s3qh%No@!GiqJA(*DJuVkej#L.^0JDn`1>qtTq5<X
%mT2<t5.puVe:,*,BZo:J_"?MkJ/CK;'_\!X;1p6BD`<!#Df:tL^<coXmh@iTgf5U#m(Tq>NX%.Xg[3lI4YE@pf'W.l_8h<'jP.QZ
%Qq7h'<S+9/Ng'RJ$J:SN:Rn?U\BV:*J*HKXICi1p#V_E;-%!D`?:S#/F8,8ukRh+&f4tVlReLd1fN_8aT"TRP[KUHq08BHjf&YBE
%P<nlbVnkB*E',9'Br/4b@*iB($a.j=Nbh-Z+0?O!lG$IMZqenm!M>9lq,t<TW@6kF7/B%L^%V$t@/0.2Ydi;;n1)JcUVahdq]H$6
%Ha3*`$RU@K'QJ1<Uq[n#bj$UiK!PBU,<8X.?H!08#N^`#8%&$OG;"jXB6b0f]ALEW&Cgu2dO==;"lcOh"a$hTXg%Ef3Q>@NhB=/O
%aI$;k#$Ko7=S%R,?dZf?<;CjD>&i;Vb3-7sDh.S`]Lur<`Hnl^i@AP!>LecZ40L:1f@lLY[:g>b(De$6C\.33)=2?%p1r"Y[]9o=
%X7*d+XLrW"MT1dm,,%9^oC?&CT\Om-I=(3AI1-n`!a&gqC@m'C0+T-Lh41QQ4>)+u]XoD^>L3tMrucqH8+iRj/tHq1=3@#WdSW[I
%:pegrmo1*0(*-YLh=o*0#m:hN\eX^j#26"fjlE(DL28X9kkD#L4KjsH><#R<]B"Da93PE^;?+jT`V]4K\^5YKCUa.OiKK!anZi#O
%eu98l:iq0aH#7Wcq4>"jp<<of`ijF=&J0uoN>Dp_Lf+1VKI;/3rVY73SPQ5jQ;%$tWNs4u!qe,s""bPc.^^YMTrU-H4*TL>Pn/)p
%ZQliQ@;O9;Vk<uo3&n,7EKk_-[Rg"Jk22HC+l&9F#o>crmfUf4b-jU\Zk<ua1%fLp>Wj^u`it(be)-3+`fS]!_?U"8SC,DVb3^9&
%FsPqf7P!*n0OiY(\FZBJ\D6eh(J"&IO6"t=R.1r8Q3Y-1VNGhD7+**+,Q.i$K"KcT2M+X:j.@RPokMpP;/m+22u2WiD4P/0]564M
%!oP1`KP'"c53mMZ9Aua$$.@kbk8>nPfCog$#F?eiYL+?!X\@NgpSo<+B:FjpM]hMdkL6LBj?4gLE>7RM6W#^\F.0UIIrNj-qpfkj
%^PC!r"p".K7/Ta42A0IVmaGhp*mZSOQdYqYf/rR_,F^qgdtfu?,^%k9]Ie-Y-idQ7!KSUJL3/.;fU\RqEU:eoapu_qSt?*Ib4X*Z
%*8e`$K6>,]Y'[]$kC+r5o=cG`H*&',`C7@6n4)1XOn3mD1!H4)-O8aSJ9TX#r7b`U76:G$*oo@V\@(/8q8bMQ.6%aeko%3_UX<QF
%jWoSnS:_%O*OK3H\UGJZWqj10*Ji\9RNB*0-_>>=FZR<Ff^V;A61#Ws]\+d`&HH6Pm)f0N!5S\p\pYJ,W6rct=r2GMI=?hpOEaa,
%gZV>`J/M1jfBXOS-\i027uA$oBA>=I(Fe&B]-L:5JqQQIZ<);s2Z`'il1booS3`7p)f&@sk>o*NGb"+3D[K(`FI-k*fkf1=J`<tI
%`/Tu,X%D*$*5J,jJZ*bHQU$m%g>.\HU`IQ%":7<lB)JO5oI"?!mhd+>/e$W#k2,KKX'IfB$2]SW4H8WVkNfMOI'mKZ8k[l"2e(.'
%Ga_([V#B-LV0+g9])sh<&(p%'6ET!+nbQJH:VRi5a(RSsP')KK1Q;abTnuND"@o3:eNgM9WuBr/*L=0Sg).HX.K(,ij)I'dXPkDc
%XoL"eJZc4118_4jFge,;5%;VR8^;%qdPJlE!-.CeO[Vm>bTVa3"Um->jDtdMZ&c9iB,h;9$mBU$maY'WS&c3f/Z$;uRZc927gV'T
%f`B)Agr&WT'GunI`F3geH4*I6Pp?%mV'WYIm\]X9'4ON!SMp%c^2,a+C/0dq%$WQQG3]:gb(?a:l=+Y37A_f@H.)N6D`5dH.^R^H
%d$e+iatY`&':_sT"$OYjhU(#$hYt$1@j(`jh]lguL8@!(*^SW/9mZi!AZ>;o,K4d^I$9[&?PImsOc&T>`%R#431=j;(C?OF?IrF>
%\"_W'hS9URnHHm>rgF$lC3`_].gTlh_f]+A@_r\j;_qKV269dK[VcqmAl=C\H$](:A`bQH+<,TfA`[c'Z)%[kNMALKoKc<Q(kruX
%cu=d,6#*RL+XjpfCKgAY-e3;N6B5qfoNi\F[5EW7VQ4Yl!`??W"2UuS=@GJ3n^qErK)Q3<D`R;4KT$(rd1J.2#2Q4qc?+$=E58?5
%=("EV$Qrj2/urt+QpM6OCZI@n5ZjFdhUDQk3)d`U27a5U=>m7abr^]M9tJ`'YE$GR!>E9G1lI>$g7,72ZZLT<.mhXfnuek#F<<b5
%F\Gi83^DFR+kpug<b&sBF2LqX&I=S_HiX4Z=LPA**5,H*e:?ELg5uK*67f%"J7[50>R=]B<#`YiC6#,Oo[5Hr,KF8O!_\QU9Yt=D
%"%1CMY(`'`!6h="9)s)mTF08<!.*JD_/sda[/qa\Y^QQi7qX\?/:gAcJFLI/;Q1::@-7Mk!AM.j7Kt`#9),D?W6o"L*=$M9oheh(
%Yd0#CjD\C)NDL,sfPkm"TTPG92i%W[>He<H*]eB%FbZU$;K&deMGC2pT)"rH`R6VL)B*"=C?iAeHpA.a<b&JC!Lm@p"pPX%D-FLR
%0H_3,e_C_;Gb:QdD'D(Y-j:.c>6/p+kZn9>7#Of=<5P.6/ao^*3F'\9KBR8f289g5!J3;2UXI>CFiDpn<+2MU_=0g5%2IcfC+H<"
%WIuAc"n;\FkrLX>#LFJup3)j')67cMg`[8c$M_Cd<?2>ILtaa$=tU%t!0GSp/%!Y]^5^@]PlLsGlJ"!h+R2LW!E4g*BWb&T)65UM
%=>L2l6EJ1-LMt\ufYCH&?q.e`0i"Z%(bJ6.F[Z$r%6QCHUB9PrDc@]FNAa^c87FHV@1D+mke*=[0d:RB-XNL$&(GH&C#u)(JT8VC
%'Nho>gL(T?AcU62NK1p'SLRW7RZ:r5OG5X.40cfF!OE]h'EaUM<QBnQ6Uhcl;-[o#7b]fUBJ\COLa:N$U`7%qFSW^gM:Z^`1fS=J
%s#@S.Y;7cRAOu5+TP"\^bFtTP?YA00CD@:KK-K.u^2<%aP*,Tlnm"9]!#h7D4W$VO!P&-"oES+B\F_%a#X$d`M;a(heDR#GF-2?t
%)AIG3-QPpH.R?G+%9&P'!Zh[`Re0"\d09MBi_p90il!H=s,J"K^1FW#h#^i3)FG[VML68j1??Ka:;_[!2@+R\^K$&g.JP)ZkS7lL
%RN^25k[V%t>d5#E"$$dT]#do(&.gb@!gNV[ad"P[Kpm3Z%0H(FRQ7N?dfq'cH"%_k-UNdsD%)uoJRo]K<tIV+;&LRn)?N+6W*aSp
%Y_]7]J/1"";N,]jF6$r3:QT)r\q2<)%NB[;MH`haE#D[o"Yd$2+V!9rHm5MH3L0r?/Ch$P:d>J&h?%/:3X-_6_Y?%p/C`=T"FBjF
%_/_tG#S>Il>^7Kd7^ZJg>3n44QNG9?CCWra@"0<):o=G6#m,W*7-Nj=\;ZGaS%WC_A&_$;UCUl,AVST6`b:$gD/ita$5'O$96[r)
%7*#s5A/5D8c2n9;,(,QK&CeMj\^!^t0s%3+Xkn/5r2?G0+:Ke8Bq!;S1u0M:R$u=.1tr)iP\@aQ<DfU8/\)MG)nA2:Zs:-SECD[R
%8c4\>dni;)&E]CLK$'8bGbH:tR[36mLn)%b!hLSCUCDln^t?"F42I(JZc(G>.$g<8[Etk7T/1'%-#kFR_4&733Z?+fd]c"b-6+=V
%U110+*$l>j;&QFh,&FSk7qZN#W#u>l,-m&F6&fFWKuL=/7(DAm$JbnCK=Vh'!ng/SnPqps)^l>7@.c'V+H^N(c>KTiq5"Au+0mI2
%[m4&'WptFY<%l$Z!-MLUrG.4lbXCUS$,b-*HpUS;:hNV`.ZBY3=UVG_9@;f<)@eP)67@pT-+)[9.PVO9gL^S;"rK"^6eDH`TS!$_
%cmjL*(sXTb1,=nVI0\Le7jt(s3luV:+:E-FP:U=ddbp6mkSoQ)h$0=K1U/T7Jf-mahe'2^bJ[6a"Kp!k(LC$M:'a4nV+LlfV79E)
%OW&Ni].pBdOS#?O<2L$q:ZOCW5SO;.RtZKmY(l*f857QUeNqQlTOS%"&T#8&5T?RZ)2"qXJ-6mK'IY_DJ-EKp('Rg9P%G"X7/.oN
%/C^dn-'A7_kbFW0Aq9HPDTc>-2.H?C8t)U+'o.J7`"6>)^qs^Bi)s,KF6!<7c2gb_!Eoj#*>_.07!+$oBIaiA,JC@On-k]!6S90`
%DI0V@QUJGrDCRP=.l92YNc(LNeM\Fa"\LoIFeBe@S#I18&,D+*8CE%Q0U!BN-'G(?]J!4d;Eor$k)ddh457/cikeN+.LPoNTF)0n
%$t]k&B#(>F.85Hk!D!u>W8Eq4=#(bd9,:p".[$oFOcXT?D?bWBDVAi),XJ9MUk=:01kSIceKnK0A=7#.ABX3io6[DiHOttVX@;Rf
%Y;?Y$Rt3RNC7&t3+LkYZL!.a@fHP0P6:(@!K%<-$J_Y7FWPJRKh&Z.+R1\7('Lo??]?DLT?tF?rGU8/)E^K'8p*:dEa=`ruK"*:@
%kIA<SW=j,)3Olj5,[hU<$=f-iN'Qi4'^Mu$-'^snRM]32l-MYOYFQ2d%Vt\BdQn<e3!nc0BO+8pE"9t52;Ji*i4#]);%>'UQ/0GV
%%^e=9O>%0p0&(EA(l(_LXuR-7JRigrc&sajQ(T:Z6X@o9>m]Pa`m>nHLT6c>g/3f]9(#Xo(l't@J='EV\D[T((oIC<l)=5&TE>fc
%dD-00D*g6e31([)mFMmU8"uMBD:L&W!GF#aF.t'Q1F,sh7QD9O49`a<\Tu*;/M-&@*_!gSLl,T%9E9\nG*jO5<Pr?XjCi3I8_u6u
%:GaGLNla6`FJC6XMpharU<:3$U_C(&DmVrN!K7+oR]&V+N%]oYQ*-)^M\WA4QKV`08p^-\cqIlL?pX)!+=tuR.Oo*c/m2=216^2u
%-4Q&X,#lta&BrHSl#L[\:fNOc9M:(3,abg]^]UO_VSjAfN**#4cjRrFD!"/Vp5P9/3h.'g=Qkdc)@a(X"3hQLe>O_A"R9d6:=%D!
%[nOTT:i,9nGrH(N8MJ07:eedR9[M+o8Dc4&7:V-`U$E2A&s/?oBHL23'P9HEJ]tp;fW5)C1tKh/=t*<$B/QjZJ<kp8ai'0+4lLf+
%RptFb8ui%bXJ60DiDS:I<R]>VUpu&8I"AimF;"u/B(JtQOGCE)XuIH<Tqa]#86l=`M>fc=FGQs7<[p5cB$h_AQ$%\SMQnMdF?7^t
%_51'jkL%,C2c5<^KZQ$rUk+u&L?kY059C"<!/oKjTn3=KL,i;E)LJ!.ran'&W&.@f:aN7tf%?;2CGZmY44XhbL>Z+0HSbWA:uSFK
%(qe:j!#Z7gJ4G9$=>4V_A(]a"J=!>M7"`Z5d3BOc$T0h3J\G'<?tpX^dR#Gb`aV">DaqPi`!]N*D9/;ZBOI%;$s#T<Amrs+#u).h
%NHh.;qo)As^_k9U%$e8p''TrQ/F4Eik=3QD7YFJ&)uQ!+J>*6ree-IZKh=>j66i!hLdKC@QB\4M^WO*AT:Ej1IS\<Y+3GcF\f2gL
%-As-QjM>dLB'qO?L=[\2"[p;*W=-RPp`\PpKMFE^D@C2>\fMkN8/RP+d,DKi"Tm/p9Ue_1M;rb2S(npT<2g]gar:O%!B:+q4%1<t
%#kk5`d9[6GlXB-"LQC:@_hs<Y<3"$H%k;Fl!^hbENV"oa>k52%^e.67&d=C(CK+RT(9!_UC.qa&I`<5PeV-F9=sO#N/@6-!$Oakm
%6H^K[!W&Xh)gWn`:bC3k-RpZ`>TuXD>Za7NXU18^KS>DjpmA:i6"`'rh]d^WqV[aM:C%?_!=bC6N[-/HB65D%!G\[Q)-eR?i'A7n
%\W@P7.nNdg<*`X-3#I-&*(a2`/kcYd-D@NFEVb\?aU0k2*@=UmYX"E([+qUa^e2k;K`tW!QDicZ,$N*b"l^Q5?Y*q[.tR=!V$0h]
%YojD^Vupg7Q\7ePX!B7S+Z`Le-nN`BE&C?&(5*Ku.j6HOd1t246X^!L!o;%cKS<-&A4D7V<%<iK\?%sYKP`eJnqn&gm19#f^`[S*
%+fE^2EZ(iEc\+lq&Sr@hCp;0$oLG<3=X0jo&`aX(%n.LC17Nkq6)Dhks0-jLL6$qSG-T2l=J^UQVUWB&<24CH]V<?o$pIp&\OH@N
%Qkcf`J:kET##H`TC0M:*bqJk&9S[2PKO_QWi>E+d@D9W5)$4(q!]gAUiMDAa?n!k:E)h[K]+mV&`R1)a6%ZH,$g=?J>sW!M\1AI8
%Z+M@/!Xi!C2hmEma=3oZJJHEe<FCkuRqS7i8i7S3D+g'B3<W(2OX_[(nG]7&4q&;R6'l-(7pD*Jj;%s)1[Z<.R>X'BKrEo88])9c
%*$8lmU+VgWd'lulLJUTpfiFb:ZM!,V$C8j_1:I[GM[%N\*1j]P\;nZK+)j0;:`R;?Fc_qh@p3+Z-:=\#pJDhIX$j*1W?H+(>,)s=
%lp_Cjg"=Fn:FNM8%0\.(R`QBuYGmY25Z`),W^Ju[@rFY/;FUAnBI+-=;F<g4f'jPdV'Z<F",+j]3!*3m>iuM<ap+m2(:Vk2]Sn_*
%c2eH]fYADZS/n8.15iZ\AuIBeMcXf8.P8hdH)5!9$'c3H_b+,6q`"'[BHMRR3K;[A_b,[s^g&-oQ.8^6Lm."J*<ld+Rh(iE;Gj^.
%FfBSM31V(l&IMsB''TEI/4Ok,_'sTH7Djs4/XVI;T,4ji1t@TZDV2*0XYEQ#)1%m.IR]ifD=aI-(lFNTn-)iPTR(Z+#]eI,3ei6e
%MZH9;"_3OH8kXu?U5!4\34e4obp\nGaB\g2G&0>86pNTOndNQMF'Bq1]3H"C;6FGk5R!R_LB(Md:sLASb,lNAjdp.*jGI=Oj[uu0
%fTTgffDq,OjLZhg"O.']"[*%1-eAJ\)Q=u]L)Ne6A9>j;0NB;(p,kd#'8fa*O;ZiS1'8e*$(Oeg>KhW%9prGFR&[6aRHVY&\u*bN
%#;0MOL]`/qMPbCE#54H*ja^=JKlXP`$"^8i9D8c<.HissTL"efWsOb9b;(:X51UUMr(=YDMb+fiYDJ8j1p!KUM0m-sMuMfV*(;:_
%Ak]KR-Y.sc_Xej%WD^'&!BO[0PX3Bd"=A2Y/k,Y_NGTQ'Qc(?k"6E9P"&(OFFQ;&h]G9J]2SY0nFHdDuWNf<O*RAOo,VYKZ!Fs;T
%@<2.Q$>,AJ4Q?W]5Y6)d?dVKsQRY6."p/dIf-5tj[5*T^3]73eM:,97['n!;0Z3aTY+%>))+J2;6>5*Z5Sa?-fhGT5?qr`-LcdOC
%U(oKqW=9M!j9i6h`+,'KiWa_uW=lNG/VSu[W<+)r(+!qhgX*RTP?&++7_l&nEZ\j.;C,q7@igOS8BF-k$T0*h&m$/r85&lp81!^u
%=*Z**[?Lu+EWsQm//#:W<JB$-Oea.fNEm/2'Xm9fWL$#l$l,q`OJeVhA6`E*.LB]t:+I)IfLQJI&_LK$Q!:LcZ2c*IRk?1!nh@"s
%LU7aqDT7'Z6r_UJ^_TnsN:ejU"CiCNgko+;H--#k\]_m`RSjdR-7k'h.tA@9TG.Y0KZoKbR=\=%+EC3)YaI7^RS6mO1PHqZdR8=*
%0WBu48uto%MT5VR[][u7;Z);b*40REFtf8PC+/b7c.pfCY,N=Q9utG],g\6a)2Z=CIO9gn3i;miN6pNQ_pWgKZ-"YiFRJWjoRKdh
%(/Am(RugL=Xn*HiX-]!"2KheOe3RJg='--di,YB_b*P538Z;#%aH=kj#39/)0?Fhs`*k(L`>EI!N_'jf&U&`%1QC+o`$9->,,LX7
%lnINf@8bdQNCt&=<t+N?7'WC&66WXK20DFJ2%EeY[,M9kIOO*9@nX1lok#W_^\@c7pF\Onj@HT7(YjM]FTYc#^<,Jjp[S<jR_m"s
%#IOmDAlA`[hiEVM.ZJ&\4>PAKZ6$KM)iY>o4D)TgP#U^6[.YWq^o*!Q34Nho6Crkss#8\U)RSChOrE$kjnDLVDLo?pbN[jppu]_Y
%-0@V1.e7[O0Y?e[I^iai#I2j.n($B'pFG%SU3X9;]25NdFM-YB)Ho9Gn"h0!4rhU)J<Kj6`a%N6g?'Q\oDKP+b<c_^4lB`l:2)lL
%lT>N@'E2^aIcq*!!0V=^i6b?q6]M6i?.uY/f`BFVjN@T($u-W+F6*B,4?dIK;*3]u'P8`YEP`NQ0NsN^"Qb:g*Ci6/>&kV+&O5<!
%eg(/3[$THP?q3=W$XA8@$'2HLEB2sLL?s\emg,^_g.IFtI0]KuZ7R2R9NEo5#>^/JU!MZW!qQ7P]q8s0W>U0!,OF,`Zf?F'ia:Ef
%qJ9'pan#EGR;I9P*u@cP>2QNtYKcS.rH[1IkkU5NMGi/ho,Rqdr&!U4c?LnLZf-:eoS;\&[e'G8Zusea?d<lpbT.]`hKM4NE9m$(
%RB<6SO*<,rKKL?s3u<eJ&Neh]#M3-C+7IOKhNgJGa70YTg1nYieroFZo6>a+ZQFM+@nSC*T$MVVW5cOmn!/0nbNW=F0(.o9+7E!u
%p1ugerHR4N]Ub(,3,:lB+7ElF0'C\(4(p]LEfH8C@SY,2cM;W^LE5eYQm@A%k2U8b"N/N.#bi:=bLukW@R'L(5=G[a[iclbM6:t>
%SrS:S]G9k7Rt'4jLr_+*#5#CD"gAitT.T]]7f4W<s4J]@(trnu#L<m7-U5Q&Z#VfOT"=D26h0oic*Es>[4sCET29*>-R<7W.04lu
%,]qs6bmaC1F9TTtKjlL5D5/$mmCTEND%1in(d4Lb>F:F6Hj^uks,GE4XYC.i:=5pe_$&Rl8P99I;og*FQJpaPitd#kk8Z&Hn,M2Y
%eMSIGe,fG,d1J^i\Gj?IP?f312It'2p&Y=!4T[r.H[M@,Ec4&!4nWe"+"Q!eeEW(7Do(Q*^F:VL,+VHA_mb`_T,-e0fE(5D%'+du
%H[apt#AN]GrEhc7H3>*#N2&`K!G<F7Jmjd6<;)l^<P*E1>n4[Vqh1!fR<KB30,AS9q;_AO$_ojJk<]@s\2+1>L2t>h:s-Bio.n/b
%b\<\l\E^IPoM)2\KZ5M9&kMK/1;9/5Y1O[U7ihhld%MZi8;m0g7N^j)XJDj:K[S;s$in:i^[o"0ZkrXNPFniE.V"HGSga_4/0PuX
%%A\7,G(]IkFrQke]\C-fgGd,/qU!a)D^j;;Gl8Y@jjV\n:K6UZ;mmcTUaNsBenC8jTOoI5a(.c+TebP:T6)^Q?&@6t7MX2f-7g=j
%*$u*<H=ghdZR!<7K;mRW*<BaF1Z%R=oTl#u#<V-8/1We`McXYtY7:dn"*BpDGPhmL5:YKc.BDTb&+4bkC^).'b$VFJdk6X0poVca
%3su@0a9h>=4Z!aXZp^+8`-q]P9nrEd>k[gFhELg:m#_?GJgE\RRK=ThDgI`$#A^?bA3Ya;2%)`*,Vb[#.#-=Mr1Z&+[]mt,"LD!*
%JUh.e)rJt7'>Xs.'nU/+fQH"=_\=l`b^&]p?)$uRdRoq+=smL4]35[i0pIKpEQ1t3jPb.'+?1T"l_Dq2GWId(;)JtL1^g^(Lfo?4
%=MarjI,dK`T?GQLh:gPbW#:JT?M\dXU4:F63?l=tG/SU<JgCk/foFT<7B(F+*d,jB1o3p:JBKG>B<:J1GDG@E[Lm=i>>cknH#1R_
%>I"+fK&iOW3iK'aU,(6/Y(4(H\bQL^_qnUe8_k]u5*BAB15l5scoeaOMhm<D5[#iEfu+[(daBg(+),]o<H(#2o''QR*PNS_QYIIT
%p%?tr\\a\cp0ZQr^MmtGA(Z5sAY6f-TmAL+UPJ?F@!_rh"Vf(fojB<c\C5VseHXbU.[!cFn5h2!hbO##bYNlkm@UYQ(V<U%41Xs/
%Mhnf6bm`XAMejmNrj*;^2%@rob0t7<@Ld9OXp*m7V"U)QKg0'H+$VGu+i12&P(L'!G#rKfa#YroPKqg9p?J/!Fac-Y"+CR6\JjKO
%3utSuh7A01lj&;*V9RnSn0k(iDp<b9k,!!R]^4/sQ+#3;ZegGu'[e1T6?k\.U)gT\IseM@HXV<\`k]d224iJ3l$;AGZVXO&=@1k`
%``<%Ag4dp"Y`-iTad;E_T`qsjk)!AGe49jdK\1'&rA<=,XC('@qA0],WQEif+n+X/XmlcQ8.9heIJj[<<-6].neX-hX6R%gY?INt
%5I/=^X$=:?q\:ci3)f0V;1&$Rm/f:Np*pN]aINg4,gSmWDorOTT'XQo/=Qgl43%,i,hb/ER!m"ad-k!&^\fl'>JkVua(^7@o1eM$
%ZDAZHqqH@M8r2i4q5.k-E#GGQ"qKuqWRr)e+iDVr]',b?"%<#hD`B5%?^8#t&K0"R3cCD%KJ^&HD_'`tkVEeTY@uWL0-,@aG8T3T
%gAb?2pN%3KafI,;aNK9\T`p*'&*9@tJaY]+$V6gVrS:=W;YP(J2P*/`Ni0o2=7H*[2$kCiSm:+UQcDC!j>e7p6oJVc;m+h[H9ZiC
%f&+BF@sN-MYQ]s+&\EE.8MWaoFpfo3IiA!`(*W;,r/W'oboAc32'k8)4-]UZfm5MBY0/I?GE;(Gs7LlRh#',.H#SM#']Y1Gh&/:,
%F*mX8P?W7Z$J8\Z\#24-`dfIE.[ISPa9@Im9t13VLma3d*TUU.:tUD.mk)6]2C1_Xn3p'g$/@9BYe%(sBhY&KX=<`b+\5'r7_"iP
%UP-HO4RRd5EeN]!=FLJ)hfH>Rm5uP6B"`49*@t(gnL@"'@0H99Y@ti)irZm!V$sFirMj)E-QGhW3!7:YhD@P-p>>uB_8c^i7QoX)
%70(EKJI!DNJ9kKo=au*5Lc0Sg%u%)!NI;RL^rr9JS]0=;;FDlWZ0ir"3%HesgHr5?P6-^R,%i>fL8_^BG5eNpgS*J'c@7oufE*65
%\FSaoWXp?:?Q+DKXu?H!<cj!I^N'_6rhbeS3\+4@#qpLn4r30?qu&KYTmXi5G5pOfX$@>EZW4TQ5dQOOISfG^_2'`%]-%5SkR:Z6
%VG[L9`RB"i^6e9&C[ua!P6\ag!N[j#i^]87\.;nZ:=KEMCu_iuiS(N/NK(IL<0;o(LlufZcdnfE3/tfaEWic8UIe9M]YHc$_dlf=
%M15-cd>/m=Zthp#KX&&6d(Fk-(\;A5]f3^aN?Y!ILUh67',#X#nkXR3g'UZ;)%"Fr!i.NbTM2?f8BSEKkCc,:bOVF9?c]Z&=iI@I
%'89]=)uoSSMSDpWWBX(IZ-0LVO3RfZrDhF;.59CIAIDZE#3UDXi^aALJgG'J<FCoK9D?b(?kS2s^3pfb"O\[l*_KfQL:rA#^nbcc
%digCO1JW_m3j?h9<W:N(Yj>]`X2&-5D^/Nj"rgD.+;Y>XhX'NI#Y`77`R=jc^d+ZnSmj='@1IEd-0@H.OZ>[nR>H;jBV),I$;HA>
%<4=:kR#)B7Q':_B*1VJL]onFuW^)n=2B>lu?[f`#hFg>6LLg*$)3i_d=L&A/+J&F"[/Z"*Ad`,3.>n1^jX]1ZrXcG#UT?[J^I&LS
%)o&')__41Ee(;<]n_qT\q+G]l.kC8Y]O-]-F;Z+^>V=/[e*--"WD%YF(:2".*sQRL+8W,816Ap\G<M1Og[u+qS/_^[8IkGOP*!BB
%ftq!0P!$SD)*j%Z4CJHAemB2l0SEZZ2ArasB*5CC@=8rDK:+K6qC']5Mi>+TTuEj_[1A)4*@WP1IBdE`&!nH<Q49KG@Y4\le2=bl
%B(!p5]T0Xp\iCUGh"Md<rfEED:+'^2_[J.NJRi'>X<Rgr&UQ@8HSFPhAcROZ7nr@VaHEdLJB+ioFegOmOsnRdKI.B%Y-eYk%mbhG
%PHP-<?*Ci++RbJOUq$GY#:Dp3W<'SHTOY0/&>A^8$Tea_495RDI5?\a%%-T$X$^@7").%@!5Z^_DAY[0gL'Tj/c&K"IMe;@0OKVV
%&r_fk(#+L`?/3HR4>Oa4FQl<`:'rsB]J#?E+s,?E!M@C*1k+r,ROQVh)NZp/k&es7.pMO!Db*CAV61Jj"Xr6!.0^nhLoF_A"WS,N
%e4$Nj84/i_2sCiJ;OVU_RcNTFkF<6DZ3^F#[dip@\GI["abf=-&kq.%j\g8$d$RWc82i/V?M3Z6?S.TdVSXq';\T4O57h?CRU"!=
%;qMY-io4!4*D#RLR@^pOLGg9JZ>/s>ib!p<)?(oZYY"8Eg((abq\tWZ[^SsKFUt2<Zg_u29t?^.1'1/?J:I0%cUA-SpN8fbEX"9c
%BE64N!%@'JaNYheV<0BSSNgXY%6N!S'/;cr=^&50>MYlPP@?T)>s6Bec-m+c'G5U;,u[+hc/i%Hh.kiS$lHCM%gO\Q.f1,gVtD;/
%'fodQogB\WUYbhXZN:7`-<di(D2oGJ'pkLEI]i8E11D,nNA'0N-i56V`PKJTSpj%sNQ>tkRMKEQ(2^jVTJ,(&jn,.<31c_\iF=CI
%D;5I0Cu;=@U..^:)aa>]ApM)h?rkok_EA"MFKSnUU8+u-o1tUWo:irWmsjKbs/CGImI#O95UrJo[-/7U,&U+"R8L?-T53>ln.)0=
%r,RMf'/J^6I5n1FeNX!Cdc.m>6)9sQg0W7j7U3&[,g3T3*_5#Tq#2Vg3s5Fo$Sq>\TY]HX(mBa%?JMBl7ETMS9N[!`k_3W.VI+5.
%">o!JJS+eQ#9\,T8++(aD"c*Wl(Z'8ga2Pn[^3bj!.uU@4.>*o0J>(V&[=;g0qi8Dk]$"lg!p:R[,X2bB?AL3%rJX<>lKL,_g()r
%q&&)[NUmja[5`t25q'6E#-=GM`#_Fpb?"ODW[C2+4:'%#;7cCO?H:D!q,21bZtH0(J0XD:7fC[R<NuBjotp(Y#V#.!3FuA>2JUoU
%?'3Q,ZNCp1(bO;_LM1.W,;#@X5N0lmW2=1W5Y*/CF(KbS%:.3B\;@*:I_!"Us7LP&Isd][E-q&tn.3:5Kj?QFHH11NA3>CMa/MQJ
%85J-N3!Ib"GI&AI`9HD_TB;>`Vtmi!P`RNBcV8W2F7X<e+1S-]/WAS'rdXn&XP4hRVd/(>P$!b$<cf6u*k1jfa'q@t@8HUEa1WYh
%g#<@pn(omJ2;m=qHLFPE2hp@nJb`<3>(q\'-9l`?Atfm&<F$PhOt-_Bdf;2bMk?6e*!BdbIbYF9XWL6g0lU9P"E,fV[!Nbs>"JHI
%I`%&TR!N\p_=r-5-Nit")>_H]D8TpfNrceC3$%METc[mCR6UB8jl?`<K):=UVg0^Lc^bO@S'W'_>,I(D3P"k$3ff4!dqAR"M#@,<
%DFFK0g1/a2p2!l\]Xt7`V=\AE=4r![8AG*B(o2S>*(/`/kWfV4A4)Rc5G]*dCF*"UR==Shlfp^Hb6@ZO5Qo;3V7JLGRdBF#>*UF"
%G1dsnkQn(r_BH7efaW3)TgcF2Y</C<.FHEh:Sm`,<W#)IG7AjuS%XCELMQ)>F\hsa4csu;2Lahd@rH"%)1e8s\d[fGH-oa7*p6s<
%`oUh)Sqm.?b`X%p9mMBUHRi`C!_Vb=A$SW3=`R\,5G=8tSURM$/[&A%IeP*^5^<R;UGc*BC)u.cX'i'X1k3#Y_d<)eh`jc&c3&AS
%!]T.]):49u=iW/C[#E2QkWKIJ5=M#K:.Y=59e\Pr6/JH[(c^-m)g%4>jbM]jq77=#G;%C/r8Mk3NWbd9=.M'eD4LRgkeMSn;c!EU
%3Eh4/[dQ."F;`5b**K`lkM_ulEAM4QKDSH,TnWsP<J7sO2sW#;Z"0t"2!?,Mb7D9Zo5t;6cX%lqaV)>%%9L!%/UKf#.@NJ+]4S7Y
%p@cfGULc9#]72V-QdNH:O`ft68'@jdN8;r"s"acaP\s#sICl5tF'*$("L;sJ]!.:&*%aC]rZ(B1+b'&77pq?E*;96;c!q$>Y9'CO
%C[:*nO$:e>4a$Ho';X)jhN#DC0V(`*/4\R!ZQ-*BE\hmbKD_3=-9c7dl.r[R&.RA/K,b(4,,7YP_Dr1:c.roC,;QhNT]Km1F$rI$
%L+)K(RtE/-dq-_HAo4hnX6.r!4:STt,4kbYGn8ujq$"OtX9D:$=bLng8VE5q7N]J.4j#F.p6usDn.P0@<nQ&t\'i2OdBDE;bugP$
%8cVhm/-'^AEqeG0iR]MbWP^u!68IO3dS^1)P@hQF]/ts(GK$ap6eO\Zf!OLn)6"i^#c:trkmKJp;1CiHpCIirGh6652c7SQ_Y*Wq
%G+Lo3T%:@gL9O2X8eoJXj&-QKr@9muU^!JOWi+@">%]h"8PL=YI_SD_$rd&G%>WHKq;]IP8I^Y\M8Ud"eBm3=agg8,"3?Ydf3niB
%]_Duf@:eW]8S[N9pKOF?YUH8Wae]3(2gq3l#%kQSQ&F/!D5C^;e:=('jLe+0!Zb1FJ1`\aoO4_ERcglH%_uQ%E\YmAA+2Rp?JVAF
%n&[pP>LLa9$]\BGfhTtpI<;)M)^bJhOj`[6gt90'YBV/b_e:#k`t+SEEdHa^27sFFiNuBfqP*JdJD;A"%+mrkoHmQ865+ba\g9#,
%Lu^icc3+tbI%q:`GYg@n\lB@?5bet8;"+ck_#lII&hUg?<^Fau1:%I1P<n:)l$'@_KlVLo862tVo\"f4CGi3\gEEV05!&d9j[$Sh
%0D;J^I]R%`2l8+1!H5o."_:'(W^Y/79'/Ru=M2fq,9e]cFWp#P:btTsB,O5majSeh:p`IA&nZ#ej!SI;b@[Rt!Eitnk$=tW,LGf1
%H`ZI'`)<h'*5I*Q)")7$As!u[aX*9V;4U;dHKaKqAAAr'Mf&:L1.,(G3H(9<"kR8J1V*q!Lgn&J_CRI*XPQ(XJ/&LR?piZ5]&ksA
%>CFm0UHI#G&!PC>c8T4-6[D<Bjn.dslh8R-#5u#(:UZ[JDEYu@;U+)Z/?O5,[<;Ct.Re%]oTE5Bdm="ZMO/%pmS\C7kEgJH*Y]qM
%BZ4`(XjVg?(;1EY`/;+7>@(lZDeSN1!'4X)i<MBFU>3iDPuiNdhD9U_J/PZK`DBFrhg[^t9chTa,XfP+cL%EQNB5!]1qW_&gV42m
%9\F!WEQ8JWVbkW6%EaGa6OeWCHg'nlO%;frHusEeK;L\.Le@Cse]raIBo?"u*PVFqfsd]+#?5?ben7E]Z[ALJ3pYK0,Zf7sH#N,$
%/md+8NBfD2V<\50J%6!8^<!eERBRUQ*?)K]Fi5)P'4XfZ=@SmA[aONs,;5_F]<_BMJ@isI=0"`KD&<rsKZ[ou/>L?L4#<lR.TQWN
%*RSBC>MidP^%J4./D):9o-0F1rK&iAg`XRpJ-=[X8nX/tpQTRXo4$dM`J1ZR-\*0fJ/"miTA*=BN\N"':8e`C@k*kBr'+W%D;"Ln
%eRe*ZI?KD*?q;6`0&tQRFSltfC_U)hlVqiJ[!nE!6nFT=f?#=iL<m=si(r%go+o=qbKn>_(K8%gm-EpZ"ik<`nV$,X[Dj#CYqF2J
%5&3N3fm7e-kGB'%m@Xk]I?Q!=9!E;8\C)NVA.'jo,o%4p3W7<mi9)&oRC7K2RF/aQr32*gd,$`oMCXn_:"`Qm7$:c*X^u@rrZ+f@
%QtkDl3<([Y=^Q[=?dBb]PJ:(cok:785)kY(^[B3H\?NjqWm<:/ia*nZ"_q\O/_tXLX]8_G#FgbPO;T]sGpA(S9Q`NoUnH]*&tIpV
%a5_kX\"G<be36XZ.4dGXD)P@MbGUulfGNpi+6mGn9ltj`WTQ/bi8YrH+=`*.DCI/>V/1"R3b%;N<m[^2f$Ud#(Kl5i[cA!a%RI+#
%DpYNoP*gjP+50%+<&e\`[K?Y`>'9p$[M"fk7^I%foqLIs..$>Z%Q-mL!/f.;LX<<j!),usU6_u.@apRe.=UHY3utpD@JcYNol-g'
%@b>'DN4XZclC/fDQ$Wo)e*FZhGp;mXo0hC#;?#@35K92n%1jgNXp?@sNX&jG(+5]CW<F;&YJVR4.-c_L_$#@SEGfL.Pu@Mk@9&PF
%7_-DUT`BM)Huqph57PL:2J9YAAT@`hcW)G_[=enES.uHi/r*\KEt/]=&OMWu$m:.7m9(rI>V.Q%Bp\Ioq=_7%PG7*<LeIgqO[)nn
%O@Z8cogD4X$B*UuJOfkdP'pTTGXfR"hih01:aH9[k4=K-ntT^;QYS[KV3hO=p8DZp,XPPs+/7fjc9d$ZT=N<u=rT(D2pOKMGtY<*
%V.;(M<8WQn<A/$hf,paPj88+fCh]V$s)Ng>p?P*P_;7-_8]r('k36;7)Dksh8+>b+J`U&7s5H83R(k+F`30X?5_d%ED!b1oGa/E=
%n'"OG#AslR00J1+lC<=RV.799gNAlf1SB0Ym"`a=)m"s2^EUM-4kl^G&V5j*>X>Ne1]V'F0%et8M[)(!8Y4qQ"tZ"VoGs5l,?14V
%N%)F5C`(Gm7X?CHB)O#Y+4OuZLb0(=WLgQUPDf$kg!2?@0.&+4K&)DROAltN+18taeC&Ss+407XF/24nEpcg%4IGJ<#-eQ\?1$C3
%9'?5TqQ*"uM'+5:<LW:l_=URd`r^!qo4WTm/A`33k(QY`rk'1G*q*@'C^Kt>DhL8GQ[H54^R.I$GIL,\d;i`>s6K('s21VXT0N6#
%4%ZRBKqW%)Q"6fp#ME=t](3!kktmMSCgK%BqL%Z*4,q;*\&:r"Pn*B7pcH71U5AoAf%4T<%W!WY`Ybd0H$DK(3USgEkL=UXe.dtE
%Xqj3Y5h"N;V<N%P;.)>\Z^V.R:Q/BNNq;Dt>LRlH@V*`eC:clgdHKYX.$8tn(f7Dm/l7i>p"HP57hgC4V'"X!/Pl>4_tqc@4FQS^
%2$'B<8jlU6Io5jVXrIXk23W,5gbD\!o=Q\n)Y/&<h+:)\iQ7^.kf#RZOH]P#Oaat'\pj3ie+\7Q$buP]n,;N1%epu%rRIIb1B>Qn
%p!@Z'G,fo!]($t2P:<)2P"Rf7/K#foF*=U1*o&W=qD<0<c/29(J?'33a<uaf_.EI%*TtnfIcH04cX20Am,,DSTAfuifW6hUMb[4&
%+c.b"M#XuURV][N9aF:X$r!%ZhRJF2_cA\_n0m.a&C/_u[6[\%X(*Y9s0P`#'U[M"/E/j!]LPERR$c?[,aD8&PQ0^WV]Ylpf6bhj
%j-.shn\=L>qN#i%q5r$#N:&-kjXCo%m=5(]KE>i#*7.qjVh$UKA6MkL-b6?HC$:Is5POm-b^`L="fDcso9j^&%*Cm@Ds7WJ=H,j9
%m&EFb5e*`:R/@%\W.u1SLq:,QG1X<j?Q>eQ_a^]8boc5*#i-Y,1]ff$Wg6=Yg-hbaV,7j7aL.`:enUY!?n/>Rc2h-R24]4$(=lC.
%-sT;;YWtkM%Wi2un[^__f.ii4AP[D]7XFcZ3oW(-Hon+[PFMPXLZRVe&0@aCRXMdcJ_Qm(ZIDE`MH$<IKr7gYMZp29fPAYB`*raD
%?+[:.ZeI61\LKAo9noA`:1tab5)luS)L?'E#c@!(lhs*CD&$8"%+JDq[GVfNgr%)S&QM`T>VsU3JsiC7N!!+$C3!i1"clb4@M;`o
%G#.1H!=JCld_N`L[FmWsI.Js8Y<QPlh-j8OgXc3.Xh@q8+,8fuF0M6+of'k]'BeIu9A`M.m*\VKT1A,,<[o/gELRu^)33HkF%Q=P
%KI[0qrXi0k9.mBXdr:;8<6RJ"5Db^T`!%ST_G%e!!_PYkkh.)Mfj[V^66(gTA7TisTT[`^L/?P20Sj_!!Jq<m-:0`<dU+8aW3ZYb
%BRUY'WfAit!mkN`;3EIA;VcuB,Ys?U85;Ck$u,.)4!],[6D-.8'M!3mqIb/FG0Pp"W0UOe7L3[hJ5gMiJlr3R#kh9AXTqIF)(7!2
%r1SMCYZ"R]V=m#UD!^4r95j[.E=3I2'gej'F;Ht/m*TK/,G6#pqOJX!W.<F#`JW>6ei=!;m*T-bfd]Fs_We%(E&lkuQGk%<LilI"
%Htp:lOJHFQC_tiFppt:9fZj?DZ3O'bNhC*4\j?L$V)q3tG.f=2b5Ng19o<@iOPtEoru%i+&JDVgU$`T;WY>MM0hlRNe-h8K`<pLM
%`]VE+-nRn2mS:#,XT?j"[qqr.2j5>HJ6P5FJ!Irc6,JDY=.,hLoFA%F78`@`Q)]fG9dF4Bs"DCT\HSHW.VSNQ<@I#=Q"V8%#o["V
%S?tP'K>btDir_UE;R*V]8gBLh7h[;]5b_PZ-t:If`9+Up.GqYO_SY]D=KOogSjTLWJG(;VC9,bXi*#>SJ?6^mFPVV5omcR<AV/<Q
%12:`ZP!_2M"m*;P'j8(k['jB581t^N@R?!Kk,t!qo6.o<SIS@UnLfc7UYuk)[(,tJh1<uVJ1PXR:cEEX"qtmE;Gd&(fJe-t:"*Xd
%iIP@98i46F'Gl6_1g54[EHqr>L4pZ`.d<Z47rK"<nS/l*/c1Kbq%O0dMZk-JKG;o=#_>eF=Xu7Z%0Q;o5sApTdL]Aof;E-7^)Lks
%TR/'dY4gQt#"9N)A90-:JoRY&n)pVI:cg#gXRt=^\J.,9L0h)8D,[,</;0p>f[7A]k8*\]b5;LH<jo=Xq2#,/G2K7!4WD>QJto/4
%4_pp/9)NA/an"JVCrrln$uRD?iirN[64U(^BY+o(jqGcrM1T!H=eLk<kZp`/;NC5.10cXorQkn_J;.Z#50+d]pNl>k^pD9uRhJM[
%F(k&L+2i"cg*d;3er`R\'K3-md'KZAJAO)NaA9!JO`Ir7FjeU#Y%-%#pA:Di#Z]f/9s_stW/P]EOti0=Cb?T&?'iuER;p%-N4)M<
%fWSIi$Oo?V%fh!9F.M#/$;MFl+mm0l0GJbk8V7LjTB6&_gJX9d@c($glB<,q6oBEo^Za))1.?43dh&XS'-n#1?oue:Q_Pft'h=p4
%#D+8V@LB+=3!i;JUN\sDotg9:Z"KK!CX:Fd+;D1=KZ(DgBTr-O7eC7qc/jS?=&#ONdGcE[Ml&QbM?a5pqf;PV]]=[^ZJ+iSBjClq
%fn8==$6\V_f=BQW9Yb6l.4b`4JN6jp'UnKn3SUlPO!8A'l4Xg_/jb]s'La5c03T3'\DHC8V0.Y-Ab])=Nj=ZaKf#4=mu"OkUnhMM
%mE!e2e@3QrR\K5[)tOuJk;$PTLkZ>g[C7u<=d$akJO>bU`c`!nLWZm<+l2OlBoZ.I>;aed[%+7/%A'CL(_LUpp*)pe?^eLrLaLo5
%\[t<YZP,84G+]\2CG5P4kUI1EjYr?*&_#l7&[T$a?k\`rIBCe)9e:mtR,'-6c=YfuQ%P)%a6(`4UNR,-_NK0;^0$gEVbJNKX)YBj
%\kuN^ND<=O8Y8.[S7Bq4BHD$>?k-kkP\7'H?k=i3io&[a2FjH0n>$kY.A3s1>W9)Q6?,1nA"4stXA(!a"a+;b8fisYpA_+K<*+@7
%BhH@q=]9X$<34?o$$sK_"#=I\>s`+;*6j7-,[N$0j*NB(9iLi2*=B/2WL5UZgX(4;Ug?0M?76j`'\u8als-BQSS[>Q.`)fgcKIf)
%@qtG$^CZO2VR\'C"Rn3!3h#Gn#j63Se\]1Jd;$FKe[dbodQVh+iJF7J+B&KJaN6o?3\rG;W\;ALnAaG.481EdXc0'6Y+H##>13#e
%r8i9jDLVgMg:e&HGO8gr9/E]KGU?<BLBY)`^pmY1f_Po:\8IuW>@:<57Kb3OmNb(g!0-<QM<rtQ)%TSJ<'$=6;4)U;+oOJ>4Um^3
%.SuERmQDGjW]`G':I)BsrEs^Tf2,/lADZ173rAc+a"kN%DW@%aN!@7'R0,^DR0S>9U1VD.0(VB+@)&V+DM,L#9d]<dqTtL@M^R2Q
%'H11<=h[q0@;+W1Z5]TboC?JeoY<-hHZ\#24ZXEab1gA`4ZWApnC#u34dlC6Jn>/OW\UUZ(UKG<KoF'_I;Z?N&/o:9[Tb]!^sPgp
%6H5-mPMKHBQtAG)\[;nD;5nFeJZSG^Gt=<Jj4fGSg&`W6S#efb/K:m/Lmq[dQFim4kC.^El]3(0hl$VM8[<p1X+i^FDXJc/2jaCl
%:A9ZkG#q-+)lM\[%VmON^h3*q$X/XU>c'GFb`:=E;mI2TH_K7=m]K65e'mK\j4h?Bl=aKRke]kL@%W&p2;:RqqdY8:;/\WVc9lC_
%kP40(>8E"YpA4\Gl%586inMekim56rcb&2_]AgIRk3dF^L.#N%;=5Bio49SaTTS^2jXaib8ZJ7sSlQ1.bHb&?mqc+p(W9RY2L^=#
%'+u'43KbG>[hEFD=)E@TNUR)\=o#=".1+"3hR6UZ;$L63hQVq+<o+"^=lc"8T!nD(]"F[EPuPB.G4SsCg6GU(m-Z%:pX(U#Qg[hA
%QRk,Cj@'PS?cud8qAj\B`R?qs4c8$7BB[a+DL"CP=j#,0k\K_X!B=(P>(6@YIDa\"qMcSk)of`6SkcNYd3_0K@H`'-W`B2,$8aM4
%7'/nC8Ti+u[6YV[j+lI638eqnn/MeA%e,>o3U$sOkja(CSVZDEitGVPCr#ZHT6==D4<;moh)b-5N!'pC(-N8%ODR]CA[24G8s&6*
%_agpR;7V:e+W:W)%Nd5X?JOhe8o'8lJR6l7<no_8Ygq"<OiISJX4>IY-Mk%Rb%Df/FAo;1IUqb&p[W0p2/15AA4+`+XP+2CeOd]5
%f*_hHP[C'=`XJBJ8DS!n*0#h2N4^$C-+BNg'ufq7HG+HM`%EJ2\3edB@lWk2`FD^.#`KR11>/5F4Glj.C*o!!Fuu"1CCB4p<Ecp1
%cq=L,QI""p(E;>^(joUVfm[:jaQHH`.,W#IYCq.3*&])u6h\`b'3KW$[k60N@o6X0#q1t&#!D8eXRmB^GJ(9'VI*lm4,5*['u*,!
%:%tq`Z!.N8hFMi%\K=]!h[\#N0-7T0J,GuAamU4aIp_Z>T,8OqR6D,k6@.aJot`rXVX]QaK**f3ZHe40kP=Fn_Vff$JabmRE6]no
%mgRaEL$5$6K@&aThW8K/g2GQ]]NLb=K"[_'/.1c)IVYksQH)R%:tYJU/?h$p.]BBjbf[F-/YDR,j<B?!UmLb0qmnW8G(8Ng[GBhN
%r6*F"H,!,PpT6p>IYV]k7\Zt4])=TSN[4q_F'P[',j&'6bY8Y,.\u8^ar4*>>5@+bnKMKi<U@p2e.jKhph-.,!6n&nlqCYE3>')C
%EUc4Y889pj$!:;:1dZ@7Y?%+SiM]fh$]*OKUtk-NAZ>dQKZ%h^D8+DF)6O/kUpbF'1jSFN%Df]Ir+fg_KTsAZCE1/LTqjD)d"e<!
%Z>26j!^'H+joEOYP]"J[F15@uZV)^,,kpoG3=o&5H]rmCf9B]PaQ8auqf(U2gJ:YfT**&mA6$JED1H<H3IOs+cTNlIj)/Jf>1O'H
%WTBtc0D9)L!#m!^;"gB+'I,aA6otBeYSl[rBQ@,OC/i%5g[*!^LY]NT>]tcOCj/gZ1:LZA];\(oo]gcWQ(Vku%d"m5<>W(4/WaGN
%W+p!C=u]U*5an9-9:I.L'B&(p3S\=Qe$M+:2001BG3CTGP<9((B#6g<?]br:@f'C9b03CMk+3;bp"_UN[1,9^8;O(3m@eikYM*P\
%ms[3J4<;9>"TS=mh_@?ArS?VE(OtC&r".(5napC34UpeKhEGJJePn.A_/aIrXZZmQPVMP#\Eo<2_la(I<7N\c8>E30S2eb`T,+bU
%id+iV:,>Qq:A+BU%[a13"W[Z^6Fike7C!1J<SumKOARV]K$()ceSVg\BL$-f]#aipf(&<$&!UQkq^e!M7^.)C47e4%Ihf6o23N9K
%K0j^E(cYQPiXoa!^]%'A;%PA\Tu9[FTiXB]`J(c"Yj5anW8lr7$5aH[]tsCF/!c'E/;VFn$bk%NiPH5l"i9Do,?E`K(og/^UD*If
%gch`nrDIKZGC/pO&K@ae-U]m(d:9j0mO:UBOl327Aikn$3t0<BZkBBVC;rtDH]6!UZ_j%*-m]Y</*hRPrP*6Y@4%]LiX1j@FAio2
%-r4,/$G!.KkAk$Rfh\UF']401];ER3c?,i$qBk`'Q<Fk8"O2X;<o:uU2dF1f?M#J$i9T*S>Q[FB4g"$LHrQglFa!j4gJ$UK5@KA;
%<j7^`pfr4BhBD5OpI-X[XP2F!kC`<!4Dn[%.*1-*)8(L9J*5Zo<e.eI\]cYA>g9g8S)S&!rF(ENa'<MZ#R#/AR?ha,#Xk^61o_Sd
%S\<tSJ*:5.;q3&&Gqon/,Igl*j9#<L>Uu`a)9#:4S(kZhU:EMeYWA!rFL6<8NG,9<HuW(A/fLO("DtDEV4'eE=MFq=d(7pF;3ANT
%@W/+6*5+Vi\GkbX9\iQW.0@a`_Gc[r92gBCF?HH2:e:RT3fdY@luC3Z4`E_6fLL28,ICI+5^:@_<<H2:<*Zbk(nIFA3mk^fS7*F7
%0GM\Jbpl,h)/1RWSd;UV)^/m0K]IQVft>RjVWd\fo`9fTo5?B3Z6YRs^rXT8o.\nehtB)XkRf;iIuJJ2<AUYp.+Bh/!3!$CrT\*S
%ELgfR9m+MW=cslpni?N@`oR::_(UK<Uaed$$_^a_3gqFr4hKB$2-#F^7D$&^0**`OX\I\VRl>310-&.3k=&ETZ!3i=X;`g)h5EgM
%G(01#-i3/b7fH[Ld;N9Vm9Btp=g.JV^pQs=HN^!YX,1:F6-;0=>:p`R_q]rd0V_BId&@skV0uGYO!i>&2=ml:1sBV4p$SqW`::sj
%S/\NUqsBsE-Qq,o)s"'Dap5b$a+SrUII5Y4P-uoO!7p3jhJXjoWfa;',Ko\QHLgdSaP'k]aF5mS&jiaiT>*Ori)3Y1gH)^:93jRh
%mIP,Vd!dfI*p0AK;N)]T4NMHP$<O:fgr2]t@ULV*IZcg`M]%\Yf_]eA7o(5u%X]Bt*1okn'=B_=St^=@3S'4(7m>Mnk>-O!"P^\@
%/sA7LS;R1o[`2&'0RsZ'ILdqp8u"f$%j@[^,Y!^`5QL%<;*5%'<),TfD7`c2]IcPs)X+ECPH\H<-?W1.@M2<=Gl;KJp.8T@]29On
%.]2\T)='Rd60afk^$BYYiE\<7B+tM,)6s;XM<GBAHOnqsU3];<T`?`4/?o\@2(/KN'hp*$JMAMWb&\Pbm>j&l'g0d(Omcdj+-,JE
%.sM%QjcGWoD:$3`/6e4=eW"5#0[oO94Fb3`nmTZbOD[n"3Je\'7[aDR>hmC],)'4[[\&!i+MW^OVBp*)Y"!\(<@fqu]"F`<Po96)
%Gn]Mb=MtYb,o5k/il2@Vq'6JjiuQ)EnNJ:;?pP[jIIIfV"*@ZJqoVD,B?D,9hXsrQ44%!Y<n(Z>HnIF_Z3I7^I$$:\K?5c!CT8Do
%]:R4"bp<<t=o/6fenG&Z>t%aM[VsJma@`g)5bq,+,DLRM]HRkd_VU?dj5/#.3Lhk17rqmH:^3VP9lY]MTNKUqdJ_ouXM-Pg=u`Ki
%[r)b`:]FktK^?I3_lcF6274u=Q5?ae-#aakAX>buqg9/tOmmZ#>uH@U6ap[i7?LB$qq,!+LT,rg4X[ehJJtLiG$p[4Ad16G#E)IF
%N*k.,a/&SSDiE1j!#5XUgXV4pM`[Am.F*8U2?$m2n>cRFXZ4\4W-5K(8/Rr'.sJ#[_Q,s79j*[4Q^7\YmdR7hrAIS**XcXIqPp'.
%A1id/=#bSY-7;-=HaVUp9[`-]R9Dl%BF"p;^=h$?q<RD%BLC\(AK!3qU+V1N0W:6ZK5YIQ;5N\_6nSQiP",k8+-6R/oBn$PFGb.8
%"NE!Y=?sH\Ef_lsKKG?m,D(])7STfV-a\rk5O9.S:0;ZL`Y+:>DOHr"9\)/712Y]n3"l+N'Uu1tg/RF1QD?3l:fc+38!GDf)$6om
%+K!p-gA2St`sJ90ABlBq#F@==AI+EV<5.T0oP?+.%kZe![V*5?Tt(D\BPk$m+_N3#>&<[tne:4i(ltaG[M88r?ope(JHM2D9uNP_
%7'pqW%=HHI_ONKXKiVDmMFMC#.n_(][L-13)-G&unh,qSMcNsJ7G4"]$$ePT;&-9iSGkG6WaYsmk5ok+\f&%#A+REKZreA7jB4I#
%H/UCrQS>d\R[i+>$^MCHB:F@[s2Y)2ojP7;k#H$u]kq31[T^MBiUT8B&,HoT(bRoE\*mmu0FYUQrd,;RIN6c.cSO_H)>!HYq0C!X
%4C`i30i(B#1Xu+3fB'>m='%\"Ys=o)&BUBc=ld0VS7_S16pHlcP7AQ"Wa1JW^Zl#k[B7lpc&02;Y,D6$giY:s=k@#gU$&,']J1:j
%qt]a[-re;!DWuW2Qr=o1%cC8&[#T62))2`)7Y%q/=H8Q2"9ffuG/58@p%4o"N6fN+7-WK5mK_q(L>U0gs(im*1Xt".VR(lO`b+b(
%o=&(Fhsg:]b55TZF'/((lj1\^+2tW#(+g`Q1gt9Xg0Xq59>s8^Wp).[GBfB9QL#Al/D/EZ8d/;+kr9XB&s0?-fcH;7o6eC6RCgQH
%RBp:q03bjX1$%R@E_;.&"(Tfa=TXIAAt\?AliOHQd<-OA(g<^;lNGT(!$6U.8FT"Vphs"7%u[AI))DB%bSrkQ-^dp.O_P:@'K$".
%I$=Aor4oCs53UYaQ6W9Dkr8o.0\lJ3F%W1Ej'e0``'G[OqV@6d\Jb:H\r0Lp<$R-pHc`]tQKAiakh!uR5+u`SXGR)M"3,PhSA&YF
%F=$@9[M"]\aqH:?C^Dg!d[D.mJ[,j=pdJ5/ICAUVH7lq@13ZhK:/W-MbjQp4#SGgm9=I'7KO8gLfO,/2SVf]'Wp5Nd0Ek#kC-\ce
%aFU;M$*,;=X"Y!8>W,uf$HYPf/C<_ugf@(oPcYkXdStm%E=p#,oD2mfh68,>P>]YFjoCPLqDas6eik"Z$E4T*/e=74Bl=pdJ:uQ;
%]ZIU/__);U%Q-9BV@66C23Qtlg_oNndmi1#U+'eFM[tQE)a8%aDnG_@kjcjDXcH?&f4HsV;6n39/gR<;LMZ*bRQH;,;ec:Z\De";
%K')^qX1$uO^USl)dY#65KdhBO_%o*!$U5T+c0J6;T;1LLn[#X7-DOsCJCGu,-H!i`EJWN5$Q>em!78gf-m:75;"kP%;g>V6''DMN
%Y[0"MgKqr?)pp]eim?.cb&4GPc8TmKFBu$B+)Y6AEnR_4X,[$LpK0t9KO\Ff7m>l`_?$O<\jZ]5-aNHr-q0Z_X/UY<aW.<A1@\[_
%A-TQpWOk!@6[dEI/K/C70]_K!r#?-"em`',8MeX-8iueTnMDF*Ej]2L+=!NO^IGTTN5VD`NF4:B'Sd;pHB;kgH6rd20hR0\Ji0+,
%NLPLoiS);aKV3mR'b(p]a#t;6kWC^mMLM?IbG9GN/O/MUfT5o4\PD"JGNS[7%)/7dc%iJCO_!K^b*^-0)5X+d34#?P\40o!=&XC2
%h%8q^eN<0lob6&]Kd/&G@g_#O4]J=uZZD)WCq4=J[37rc)iVBQi7LLfQJqoX85[99>T&<JK`F(BRHj0^A>\tZ9MYV=>k%'-,3UMW
%W&i_"h^m>rEumfFO#(N#`#6g*o9>98)`]!dVRc+7HBgIYcZ];lqrRHph#[=qc/7jNd713u/VWg\HF/&cF-eT]X2a^:ZME8,Q5aB"
%M!i(m?&$d7[uTn(ns_@`5DEi`1]>^cm3PRX/YNIabfWhke@-F'blW+4bG6><j_"3nhNsJ=*o;jq)9l1u</#L_VhVW)([AOi09uqB
%^]2%j&MHM`A-s*bfo6r/nXC3bm;e1Y7p8>uZQI(VX%?+X\:*i+2idP?Ffa?d[Ue+mHm!_=D3GQl/V[X.bsHM>[,d3)HCo2ch#gW'
%jo,HBD\]Se$GtnJ5=9?l[$,iCZ5>k=,9f()qm`r^n7<T_2iW+YT`[.ujg-[W0F)LW+t--EEHIeQ%%4<l/1B:s/<KiBPahFH3J-gY
%33@g]jq&?kl\Hm,&Jo'=e=%1nJW`<ra?s377p'=&(NBJES4fC3K"$GNX,FLC2!2i9bN5[Fl1r,G)c6j&!TZlFZg>YEm*Z.8=Ae:_
%0k`D)2r(1o)ufQIdfQ_7q>>l)4Pk%<?5ojE2,tpkJ(YC#bU!o)[/$GD>Yr?G%i^%-As%GeT7>Y1ol3#W[[qS3J8qOY+-ksWNlqt4
%6$(d0!;E&X*eU`+@Mto;n<h8(D`?mj`KL_oPKPtH9gj+RK[lnAXCr@5)$]b)<4S[AAq;Gk6!PQFAl$C*?VlJES_nslQ'KJ&n"A5e
%U<%q2%pP[_V/n?gn:Xh`ii+'r2Gm+eGmB$hU.VZRn>]8tEB;k'aM>_QSjr68QTdOX_q0P%"TML$8/ru4C(]h<QJKJ]T3\f.(cEmN
%Bto&N56(;D&h)_oAqgoC0rPV$-a:[Da7j_AKR+HB(Hh-BHMR2g6>fY29Xtm%%;78,XbkqPR2hqn4MgY"`H/oA\5elaVSo85$]rnr
%]18&uj8?;oWIG.9AiK7oHOo)0Rh[%OZWq5?da7,<fe&"j2l+,L:4mSJqOefAn=@/q9\'M+d.Vr8R49Zj(WkuQ5N31')*W@V;W-DF
%-QWUY7B`!".Lcqmd&oejqTEW3J@^P[&bug(-Ak=E9ru&sZg),Y]MkAXW2VD,cLk[,*0i<85;nKkViRN4ZEfCSO$18Llfkq30,LDI
%oFJ0EP1-uH3G09)is6SB:K_92@t]jD>S2fNGrRluOrl,.JZ)d)O+A^5aRTS*;9(EC.Y>KNS2dQVd:=a_<od4I^Jm;-0P#V;g:X%[
%FW3NqB,5VhfgIr:8R:8("dMIY1NdeC>8BB]Z^]15@$i72Aus7B61EFA/9B:hfC(/'+TJLS:A%--g5gU+,#`0cE!LY>-*0XteJU3^
%<#j#u&8\*g7:?=%3=Yn.p,*f<1/m+W'>#Wf=1Q&ddSGro-M:A#;S@l[A=ie)m?M#:8/al"4`B=os+2>92j66ojX8.Cre+JCeU/h@
%bsJJSf=sn3C8TY0AhjL;.r/L""7;mb=?G=tO*mOo_ii!=3U(%0<;4<afN>oR'Xr\YE-ji?,U=6I>q$!@:-8=!r/jM@):`U\?huV,
%?4D2G!JSH_IG\-jGe]h\e,DJqWjs$M%V%JQFstrCC'P#0hO[O`P#j'[8;e4Y'FRlV7Z[qB99MOX]0,7`8U'fU=,*?N;A#/8FbU`'
%FbZD8ie#$eI>+8!8)MS?ZPrsnc4-T-$_d["DiCpp7h60qR26.V4Vu2,F3c9#10gJ4!XBENAA"SF\-TD#OrV4aKX]V0AF`[,q9L$H
%C.@hH=$[u\I@Ve9N@VBT$cLtgVe>72]g*^/^-J";H:=HU[p<4TKV%?sESVtkL-]?2\NikGLDLZs!eT^K62:jGkK7Aj;Qfcu/Lnlo
%/Pu"M\c('Fn0dpZPR1sm$kBXR.X#M^QSbat#57^4IW-\[6d@u2.gk9F5mp*Z@;fe+&s(`T[>=!jEB\;-4@,/E_os2h2sIZU#%*/0
%TTnL-h,dm(XdIs]+A-P&XXu^3U*"]-mpK9NhN=!8%aIe^)j>#7KUHNZB$Z*U!I]ie-u,2fAGGLFY1#-4/:fPlPStCN7*S'K<V@N_
%`q@<8XjSe(Va>%KOe<C%AG"f#'Np+7V))?#?>:UPM[2o0,<3-unC8l#%"1@cS8*B+o!@V7$HKca'@3a%`E@*&QPNRnjg7ign1K5g
%5dsSYlAIJ$.k<d'"LR''k-ndg^.BZReB8hCOr:(0c37mrMc8`_8Lr%[@rlfrI8-Lu-3DL[s"Y,&*toN?,P#b;7K2m&+(qj!S5e2U
%WT`q=*q^=dVq(D>-=3f9CfH^0AD%q;68*A8hIqUdZS5DaBSErm7V3fEdq9nc9+4]mflH\/1qqUkYI&.:+"+GJV[`;;5X9,EdZ*94
%/%>E>hgP\gdrpl132ps7l)dnCB8&S*cnPG'fakhgVk(f":l[fH4)D_f^A?#EU5@Sp+Ql`7\L'WX?IOj>(*Q@[ge%L'6u])f@N?qN
%#naPm5h3O0<:hJRi/^DYkm5ZlNl,$g9tYS.%/M45'K6qT50dqe">tsX5gVDg"_C1>,<&4MKLbQI,\DP1%jJIWIO>23I^@^904As]
%$I@p:QdL0MP<63aUj4&45,)9KOLt*rMSG^A_Rls9s%b;AE_GbGB*SN#p1;$t!\CAe82Mi^)dB.B%$C+$os6EkgDNH(CoJD@A35&O
%M)ZW4D&eYn/SS-hIct&6bNfqb^ADZO1!ujQ4^M3]^KXIjo`d$54?>E.GNnS^%#Lt21bf^&V-.``_G2PW#q;7RD<!+rrMiS0Jn4ou
%e9ehqWJ%jC$T9G2!3QE[S_87Ck7>g-]tWobQ2s+AlLFGVo).<T!1*mB5<M!YHr48Iqms@3^^JT%U;lrXL^W&'<$#B4IE7-,p'jLA
%*V\SQ6cHC@hN(;SrRc*SN\%H#%:i<B6M>(hhDqdjeY._'r'a)>U>fgYhaKq(AAqfeDA+fC+?MSk$<KhhA/UqIp(uPu:aeWH"\X(%
%D4)PJe]sj20-IVVX6SE>gkAkq`ngni!&!>&iK]W*`M/36-k;e6?HTm44]f*No"u$4DIOE&bLQ'i'bXD->X0ETqsqLNo11-*#kk"5
%mF49_)e+!d5%:R<YSFpY^ghm$r2N,gAKDkJe1&8?bWEIid@g>9VFtu;,B?sh`MX6W^#bGAp]u5A38t,t2hl1MRn*MQ+b$c=l7C2U
%Lo"<b3LZ"V(m4M\(4:.%X.aE;9ECs-:e&2j!H@j?N(p5'F,Ht$7Eg-:[k2CgN#Qje>mC+KL!((u:PuH;Eh,Z8?rk4?mF'R1Ap>c'
%&+`4<Mk0uJMd&F281@Ycb9BW)dBc:;)d?0I9dF:WZuCF/0BDW,Y5E)lT$?d$-lR0k8T#U"NZ8$%)ZugI"G(VFX`?4MYFcTsT)INP
%mW1XiC9PWG.hT#PEr\YZ2YXbR<,c@#kJ5HCrH[5^HCS4Z^<_pLGiX">"(u%%mrD7O9aCDuY'$p+0m>Y5+VNJoem/bEL?`PQ]3J!e
%'8sIBb>78Fe`_uqES9I-YsI)%LOoTOa#e-Z5g@d=gDgPFLk"ifgYDDEq)5^C&;p7V\k"G9ftaOC'W9aA1trtn3PV*TVV^"h=N%IL
%pGl4!gi>FBF"AD1gNB,-DOCFJII<::4bsjbXWg\X9qHorl9Voc&krWd@h9sNV.%Y:#W0EGJm6Sl8$G,8YW=F>9X37E2?Xn9aGsXB
%,e28>(l`noZ`%O,H16en/?7\f@1(AY3q#JTG_dmaM'.rpJn:Vu>=NbW(a`M[6aHnNJ$nLH<^%NI%j2F4<Vrf=[L_tXij269'\R5#
%a>ia/<7;"B-(m;Ms#.j@87_khVW`"jmLR-3LUR]=&5OX%Lb'U[&a@M2H\)DPieM.16r-Y/#uH`#N4b7RC6&(re"gN>d=UOA%Z=#S
%LA2:iUQptaKOgm5!+Mb0`W>I:@tJ%gOU-dfCL?`PUY3R>JcH@D&NCt;3*?#+>hRoL3VaLT5`C$h<LeT,q-`;?`T31mF24]516?>U
%:FY:oVe3dKfRLu'D1r'(3*l<c'S?KIc)`K?H#*k0\Z@;F[#KV=EkhKq/Z/f:Vd\s.)N%2t;6LM:62X)e2CBJ2^l]l4eK!s%kN,!(
%?JFE)dY+j"=VHe3&1kS(O1-Gc:Fm[^$PT]VP+^`L7a_\O+\O`R6m7YB2J"s[f)t?</\Is6?n=V!;npIhmhoM6!<J:Y52e39T(Gb)
%'hlmtb12Xd<b]YV<QEEMDYK9sht+Y#5-uD?IjEA5HgEm;Vp,+Ms8CaQIdV\MpV24XrU9Kc]RDb/iG,#,?L_U?m_H>3QTOM#Qru+d
%R?"jT(b%'i'Q?TkPD./h4V?r[6S)`%_Q]M"VD6aRdhD89;jahjW\!chDFRlJXQg7(h[ho'4->6WX]Os4V]VYf4U+L3P'[=l^col-
%9^s<jhP"Rf]W)4a?oLEbb)Z7_Q*pVn1:h>,XQJqHZC$l-1!Va[>/3]UJ3tP:_j&Xd%UlHS-F#"0DZ4UZOt[Q]2HZE_84Y>g(HGu*
%I"7>1*Qm-]U527.VK12ri(#]g0:>$lL+.B7RCcL.KplGBbZKkB/sb#t2)5dur!ffOEO]iC'+4;p_:P<BBBC?O"Gk-MVDSBoqOEV1
%fqC91D::\b5fI?'\(jLT'og^X3adrt/cKcK*S_T-hD)/qM>oT1qa7Wb1HsQG>Mk?kI?&/-a*5:N*\Vc`k55#da\K*U[YVpi$GbDR
%"jh`C!>8h7qqq9"<0<+A,2YTahPV-1f$j/QID:I8Pl.onFX.cfjfJbqTAJH]Z"WD$?WRZs#l=f\h]/\EPk42N0Sd^fknoEfl\@j6
%U]0BXYg:)@N6p2FUu!OhiJ27+:S$3PV@9O&kh'C]Cn)TnZgmh3CqSQI`oBFmnT#I*5+Y1Q56oXA@E%M(R[@1a],Fh:*JeGDobR*G
%+#e+b]K<)WJACmQ[XCp4*VSICLIE\bZ=i+l,V<9!`Jd"H'e>qG5h,:h"ctTO#PO]F*l,Kb.SD4E"5DF![:mC5+VKOpY.o8dq#+8X
%-&aPlA([7tQM3!!QhbAUcX?:4hfiIXdqkpl?\ta<Nm7"gX&ji/J%Z_tpNM2'^H^B(&iV#OT/kC/65O_e),2C'`^g(DP4-3#RLgo<
%FofW)`#/@0&DcY(*,f-a'hGkXNtpn'A!q6=Mo!,$O"VIA_EM'0%=8YmDA[P=eD>QjMjL?hq&M!VBn2757C0I$dsXS;k^JT&>E2Kt
%q`UFe#%^gFs8@NtkB,cLNr=pQX?;?59XOY6gQ)g&BYiLOn\\Q1iT.4J7ABEi6GQNo*cYRV_*8f?'\$p6GQ8dur!2>8$c'T<(F\J$
%IY>d[Q2@i<9YeArV^;U/DEKd`"$8tY5,H$ab\W=<A@C+IEUD9AT/qYC*=^1':<`ULYDp3&ATTu5J;3Y,U>jBXbfsu3rg!jA,<.FH
%]t_NUB7B%]^tBS%a_\)oinC4nFTBV/,sMV'^oZjX4%O?'\MEJ`*<TDq/1&>t2XQ.g/cPLlY6e@hO*>8VNpk3^45+..R>pl`>^Q)^
%j0ttZ+*SqqF!`7A3#ZuE<B:&="Z\2V<iu+'ao*OnSrEP0&j"rFa+G\,k8\c<+Ir?7-Y1lc,&[8]F['!;N\DUZ[Y;X9'umE8..<%c
%7Z%hH=(-l7iu4%#%<jhN74(#D9=6io;oh*M,9$2NUiG@^>MpO?!J<0jaUj$),I$P:A'MAIlG0E<mmG1iGQ]<:1>uD+?l>a9EB]D2
%)#h@"3FN2CXh=Zmr.lU&29[K)@cI#1C5'LT;91fIp^di$,3THg;SQ6LWt_Y6+j9dehZ$daXXssFN>:7^R1.@,!Nb]FN?9U=7:',F
%I\491r%"QPG;7cJ#%<hQc[Hf28s&?Z&Ubeeq8Sci&l[E_3ii'6=<BeaKNtpD-p>M5+sANd`ZI;cBE/E8Jal4:F2+Hp"R&_^_%T.I
%5%LVF(+^8:gE]GLpn!9L#81=*dSVeuehTJ)cV)5X-%__W<A+"bh]3=t(?%4RHmD.W!:ch8lA>Q!Z&p8I22H\)]!u@l/TtS\K9R\]
%A[%Hm&5f[*FBFn'<pfWt=pT3#L<3Q=?!K.:qFsRSO\m#Cn01QNeX0UJ-VC^F1d<=aj7B:Z-+BXQfi&a!=G#4A.sBQ5UC<Ya\$TLN
%[0'Ldr`%VpbPQl"S)iYA\A)h47.%[reN^p%n4jFSE8$f\0\\keC3PVL;<I\*+klc/,`sga%L[8@*Id5gW&aru!(EsamMO2#81>Pa
%(-s^,4[C_brj6U]*9A#:":4U/`A06:k'Nek+Kfm:g]:Zb]oe?6MX<QHD"cB8I/IhgJ%6GjpXQtK3Ut/c.Ad=7m<`%AG3R&r!*i%X
%Bb]0]?2AQ/OJ`D3Ramb$OipE_2>hGr-9bi9H^[$$lbTs\cJpU`V(#3W\^():i/<7qVg+d+71c*0j[l&H%=e2F>&c%Oo1="5nSBgk
%6ab(8[>Fh2Ta)+.9'49J3nWFg4!))QNb:R[T'3LD_bl-r#i\im%=dDX?NN'IP!lYVTHU"!S8da<-Z&blqD-L\+3XP#[).SKq2IOC
%T"TUI?T/*e!hd]<P=oNZoAkMFh+#1-np'd:qq"V]0^$M<\_n7"N#n1p2`Xm%gGqS!]6//mIEU\`o7L>?4b*3e%DhqZnm=UtBG16t
%gpD7\&6ee^MC!Q.+#Ka2-s:i4RcP/Y#ot5%+M76T@W[I/O+PNQha>s+5c@ZdQ0]8j*mM^Y[UR=l)HqZneSH'i&FV@;]<,7LMl<*]
%Cfn@<ndRW/_EG95pc??#&%\+WXMA..En8fYpc#''K6j6DfBZcN*Jj^,a3Cqt^J":jpP&Y/#Ak<Iji!EY<s4rWW9kCc984)("CD'J
%&9+&4h>A7SnV?qaa,dOO285pH?87#EX2V)!:FsW3o:S[rjkpG+-3W5$`Uf%"gbSB_W+K\L_Wq%>W_,cl=R/!6MAaeF2:'$Eg&6=I
%lgYX!]-'K^ekrr#%j3<e>.uW,U?VmA/Q!2)HH\BQ-E%$M]SS<FI/X>T)7KRL[Qu7tKE4MA7okRE4jFndW:8s+oQa>#i:FUL4.qUo
%?Ma5f!0.Wl,Z]LB<-sKW*%s5`ZRgg**=-R4,)8T!qk2buPE!a+6Y9F(*k0""2*)`(d+E:X5DiPcHjuD$!@441H>6mt0>hSHPen(8
%2rH+8q[)I8<QpgpOtDK.5n`2)Xe^mQb=u'Q^N+fkZ!5fN-[h;jq82DbJ[]D5m0HQU:6Kl<mk3lK\WCe%bsP"=IR%o\k]j>Nfsb7"
%7hWpUHQYqo,H&Q5<mE1,;Se4;oqMR5##]U_(EDcm]9WR0Q&>(>;A>CVV_I%6\OFa5,Trn7Z7gV7#QUa-/K(A&Jt=0[445-`3.[3)
%^\@%uqKkF8P'ng@W&Kps"BL&8op1#&fINMA`C'W5F$Up13eaqH$t$G<[Km]'FjT#)')o>2oN;3&P.Ys(7c_5pK:eOX^6;Wa0XmYg
%riK'8&:!87]^cY;jbcLO+@S,-N^.Ute++4DaAcl2S:3cY+??<]H=ODd4bV=sA@k-iHQQ>q$\l;>>2U/=k3ChF]NkT>VPH%B8d3+q
%51T@TqA7^l+'P?H&_3eH?i2GMBD)cIT*e#*h@Qc=?Q_q2>Ahl$`'Woq]4n2(,A])*IqH7_b*6RT0rd%N7B!9i@N3opa>REh(9T^[
%Z?eb.eCJY%V@T_&a)P!.jYmLA:9C=$6P)NF6Jt?nqN)W8cn"NuWLL6!,ZA9B(WuZ\W^T?(2Je5Ob)0aH`#aP4BC;,jCk2JN'+ig3
%SoV*DWZWs&D:=DF-Oap**j>b(ph#Y-bTDCq/a?%=Dlh.,C@3d[:NCss@CW?Xe]Gi>CHYZ!XQdnO/D[*jXqP9s)A"B%D,&raH!30,
%au'ToD3Ha&'G5k\7;>DM>h,)5^j*3e^B1B<J/'MFqhiPOgQK;W(E[J#XBnu0/s*M=4!UL%!dA%%=AQ2:9P$\g#*_KWVkRu,La]ED
%`5Z^FpL80cE&h)B3nga;Y_8Z`EMmq;R$CO_YbSna.ZjfQRXF_1mo+rbf,2bX*95ReqCeqVd=)*h;i9-4R#/TI8#$2qAAc!=o='5.
%Pj`+GUSa6.g2Fp8cR5*!Z.-i!6nK@2*81d(8bs$a[<^KDB7Sq*0DlEWYCWr,0YJfmIg6hC2=PrSm7*'%pVCE>7olZm61CT*1#j+1
%5YA:8-0f-/QI>45lG]-"X0tr(Z(S$-XS)*X;mJ,UF!-K'Eo)%rbUdX6:-e/D9b%RdqUi:hilJW=KXtW<_[Nd&;oL"m5HP9TPVN!Y
%C\iUk7I-jU6jl,^>rN%ZSV&dop'nllFu0:.X<SWF*cl;Q_Dd6)l9dMY%+[_hJTPr)/Es0kGu=7NVS^k!7\XkLVD?J.-7Wb1NRDmZ
%l8ge%K5kafQ(U)^Y_=d?\Yoh2"GX?oWAC@Obpk[tj'Pb&Xrh;7VpK_<kB;BF1j%pVO@cJ>+W?PqMVZ$08b89uiQAGE0"_s;Z5hhf
%:IV96",Sb33qhs:q50RH'$BK!!OJej;4Ma\rG%PaIo7sTrnN>;$krf5$u$Pub2L_9$?>'T:SLI^.)@c7;2)_O5"OL-iFRB$_Y_pD
%NuF^`!dVirB\IlQnj+K=X)7CB5fB'_[*:Y7!%;*Zng9+1#rQ5,-<Fd]btm$MLdD9I8LqhWZ>)MIG>)E?d",>8k$,L3:Ruel0!@bq
%N"GT?@@W=V-&s-6/QStjAtMb)mI8&5E:-6KHjt0*m-$r$$pa+j@.%b;J!Bq!a/Haark7sV+E,MPLU[#W;_Pms?s51XcSE=R%HmDu
%otd3p7Q64GCE,\[F/%sQ[$6YobCB]!Tl0!LJWIH9c)&,I6&ZBk]Q,-=q#JKc1k%HVMIMa4V!Rh9@3e/*G[ir?F<]&/?J(IiUDu:Q
%\TnbPk1_>slMo'*)eg2e[HVqUqXM^@<5!L!QH:$1E*UHM]5)Wgf"Z-N\Xt\ZmX"lhA8(q4p$oQ?6UckKe-ZF&/!ubq2'5WO@EZQ<
%qcrW15R^r(Dc;@8]/5?%WKg)S&3(cH"dd:0p*7kQLcQI`E;[eE*`([%f.m5C9QW\Q&>N,%^lTUuhh%1<FY92F`b#GO?^TPc-<i<m
%-HlQ!$1&F5&XU+e8\OEi=dN#Kg\rJ//,.@3YBT%H\rCqNk`#+Ga$A:h^0HDO?[]$%cGi$?^o:<t?@$EPnW\F4N!Us9M>k]6\8<_M
%]8k#7Y+mbESK7DWXM[AjKp4bX/G%OT/D!'*6julS:S:iXA\AsGr-#r]-oZ:%/DHnNer;WP2AB3q6mCT7mKI(YR,1V1!AC,Z'G]IG
%kjtqbE,CnT(%Z!;f^*Io8/cXL6;^A;nHB/X0A(>!Vk06C3-b'8<p]eU[e0J_/e,G"fD3;8p4?qW.-'`/0/O8?^RX\^^hfH(GA==2
%i8!0A]@,-aM-LsBD/U2th5S(Yda^d.BeR-sqhB-uf7B]2p>!3lp46.hBo^iRJ>9d_EbX16]gJ&hfCncMk'N<$(GUfOd`hD[?oH9%
%41Eg*E,I=b"LiM"*6=sbQhKF)$8qG)hBip"\\1OEXaOoe"%R_*\PmkR"/kjU]PnVC$!`pAD(SEg8ctS#_DG[o3jlD5]_BalqVSV^
%rm\K\pA/i7]A`s[`_PUCX@m>5<f$+A[7ptZkLRN()A_"s^sQJ8maPSC^o>#?(d\r2dG=u91i01m9-r!s7'$QZ&[J\E_Q`9E%!Jc<
%qG=U+Rqch$4%t_!deQN@'0K:'eff$)AIOjJMAL0HEX\>Nr7$to/hXWnO+a>5PU*>9[]c,X*R'?8@PJ)m""ju;Dp'hs/I6a0KuTA]
%N3\6!<@T3s9BNtKrc3D6O]SLe1bgOGbO0`eg6tdXn\kg[L1OBT>T/+Zj6N[BbgN4:CWU9!**bO+k[$@P>i4]fW,VL4,Ck\Rl0ATl
%EZTf-Ze72DMI)D;K+"Viq#DBd^NT,&!It4#pA8>"$s^Au*?qRoTqX%(49?6dVIEkd!:gQakOCu2:.'!ubkoDipjIuNaSNk9"LDNX
%$teP'I=,>f$ZeJUnHcKQ,-AR:NQ21DoVP%cS&/-$((_9e``.7<>*u[9(Qc"[Vl-jiFkhW#,(^aY[I:Bni;g:Ug;s%*A_S>=fcQ5H
%kC!SOMD]lsNa!;Gq#Q)*:0h,=K/2ns5C3pD9tu_b'!Hj@%4on`3#FIBi<c@&,9VJ/5#QC)&ba,_h:#_,$XhF2^]b3X23)H.^S4LR
%=6#rr<,Qk=KNf>Nr5aDJL6.]Qq`'G\j;nGj_l30t>7^1R=;nTnl/WiAK+[H:D0DDR:8`7^5G;s\(jPY"V8hO*Zf1](@$:$o7.M>V
%s+ep6cuc2f,\iktg%Rb#8@R=V+"OjnThW_uGkqnS*a[(l+"36jX`jK=NAmK?Di[,2LRm1E<d?m#;n0Z_J06>'THFWa$FV:m'#l8M
%gb]D`JNdW]5ZX5<'?(P]+j^J$r!MR]1'u2ap!)b5p]k0o>2eV=O)StFMn)*Y.rPtG-hN]9@hIkJX,.sn(_%E"P`W\#?`YOFE2JVr
%ZnG/\8s`Z2U<8>Pm@p)oMF15c<6b4l/ZALR(gFX8ZsnL#LWU/Um$+:W-UQN\<nZ1@Dmk9LlhW-2q):_;<Fbd$(SU&N,<KA!=ieTU
%1bPI^Bs?>d`"2L;PLu1#2QSG[$<Mh$dZP'[9$cKgOt1\-NqPo`\!&fo'KI,UF@Yj&i?r,9:lcPj94/WGK5jhp0PL-80I/p7/9Emr
%$[Y6OAl<Zj^<\0,BP0.1jq&fDcSPOrrBaoH[N?C[pEhD][]N=BLJtM^5P1!sa);1!N/NT7WueNd:f=#tJ[.Tp=l#6k7-,YF\uK1t
%*@,Q!ZCEli\JE'WLT[D516e;6#>D9+!l_3:%#>eZ#Sb,lZ`(p0Ohruh3JX,U7t:"Tk)hh"n@'_gi+hk1-fV("9"j0S+mB*1?:F!U
%;DGk!@)[C""r"(f0Fj47:Nu7=%11V3Ans3W0j8D)5[HkL0oQVV1F]md5G#uqA1JmMotXl"iBedX&7m%cH2'6?eW=(6\3*>*7FHF,
%?53R&Y#l!97EhE*JHFA`qLdRI,/L?4Bidea^J/4Uj.5mge2(OL.Tcik`=<Z1HLS.LLP6hp;I@Luh*C1eQo>-[j1(+LKSe4Bm6;-]
%j0t=+E]/DsrP&<?0iD.%0tk7,PB:#0&9kPE[8)B`<jk`Pd]*pGSh4iSd,NNY0^MNs$'X;0!ueB['oNJMf[^OC?%i9XF:EnL7XgG0
%`kRZQ#E4HUT;Zb372?pR,iYI:I-A(?m0eMO7BD84[OT/p`Es2H"<F`N3V6HrL?YtTaq(1</-1B%T^IdWS8h%I.`s:Y(t<?4cr^fJ
%%$k2(YtkK%ng!<53p.$"eT]0$IPu!#\kB[rG1oT\p7(5fiJWEdr3BGmGCZU)K&CcEH/<`4GGjUult3#>h@>%n3rZYX:dQ#sbj*7>
%&'7)tGRtIpC/YE,h#[:u9\pbcn"7+=0I(g:H7iZ"^jh+V&5@)NdsRX#rS75k\j-0*<]I;uZ=pIX+a21?5p*MH"M]jD!lE"16'B.^
%j,^frrm5P4DnUYKT731^/(f;8)E3(,bJ8\"?hnUf"32lV]qqf4rad7g_f!"rLO'4V815:YMu2g[pWc!/#(Bg#li.j_nUoE2Gt4qC
%h`-6:jDjQ3$]>RQ8o&(rRK+[dG/]N6<2*r?N^Jog/X%(p="[<JCoW+bYu(VN`i!u6al^,E5?+'H0cP,>G[)N,D8sOn&.;b(++_*+
%-i@?u8mDO-L'6lnX4R9<btRunGP*G\0l'KI"<(DmS6&(89@sq-9g+,g#ZXEuEjkIXc8-*#)$cB@\K]&S$9D:cp<Z'(4B`O:J4+i-
%L1h@!^o8/[;aY8EJ38@H3-:_6+WGV1_E45)bZ!;p54,uKbl+V^fr>q+JDuQl>K[[iDo`=!!2kDJTq_')+''j?l'(5?&Z.s(eD/8I
%k(u4Hf'T7sc23]H4:BPrS6_tR,'oMY'@Ek*?^JRWI(>&>-hV3-DaYiEI/ZjCc/4[XXc1;!06a2jmrt@5]]G&B-qX2GUWj`APjofU
%_=#Qc16#eg)^[A1:l&KdMK9lmYUN3"6'Vdb1rAfkE(VN&]Q=W>nfcBi<M["!Z#ufF#]&PMNtsUh,_QscI9L%3+`ZH^>7!P_euBAJ
%VV$s^F$&M(^rXF4<=/O*lS*=tMSYbn%sK&/s.g*T@8V*qm0qs%SmY!EoCKV%K]D/sL?A;O*iOK@ag6pG#3>3X#qW=F_u"K+Xrk>f
%8CYpp"P%pI'fj,r^2B8XQ:9=io"UeE<=V0jCIH+dZX!5OQt[guorbM9(j(#U7M'jH!ir&>@lHQ3.^:h4RAI2j*(>#(JF*rVk]l0"
%6nP5=3Agl2U4[,rkF5@L+8<rI-'BeCiJ*^P?LER-5=b6UV6dZhCO<C%goT?gH9&@k!mJo<)'Ve@fr>$[^d&ea`,-Du#=Zrsm\A0`
%_E,#lRj;(`Aqn8a6rqK#WV3R@og<+>-(%*9l%IhqVICi?G7^atKC,CVkP(_`o2,SBmX[f/9M.%A:S[EWDa6O+#(nD-OE9)\FrcuU
%Zt.25c,^nW,T^@[4:8U8:sq:tm#2$qGi2A4&Bt"/$T;$Igil94*Io&]YaXj82+Md2LM$6'ONCT))u@LYX%^^ZW,L<hKI#!?LS#Cj
%`F7ffS)CRsnKbEuT)8Q6S@d,(oX6$c1`Pm)jCI[SG*2'\-X:*t;X]>o?DknYr@3f%YbDBCPih^nqV/p-]lkU^W?(PK]P.%V'TKb>
%kBj-F,(Ta):3?"!Qgf8g'9&m=>Y>g;_qQ;r@EiZ*]plq_J*I^gXY-;)#bdDQ6*<MU]o:WocF*YD@G=g$n`oAK\jU@Tc]42.kK<Zc
%R'WjUlHQm4q)l3BT"IQh/uE@.>s'>2;[iG:Ll-Q,Imfq:.[_TF8fkeo#!Pf?&PR3a@Ij?A2?)c!_WC1F&MCOE^&@pl/cB'Fc=_`B
%keUP[qiA0%gGmq\:Nj(m6Yp&W>1"_1]e=TeS`*?$O\5Ptn!2&aj=UAe/$/FQI_C0B>":&)7q^Qe!G6h,VA&sDP/[&(KmFFX'h3`J
%<fHFkPMI6Q/X]g*,r&OU85r$&^VM\d`kf\%SBk4j(+eph2WOH8V.BTS:;ET@14oKLfNJK#3-68J=bR\.K*Z8MXoV9?"kC5_C?uf*
%3AFE]Dgoe8Ldo7N9-Q0?#As<BOB,=!]M'6sArCKW(-5EE+7<OZ`lLk8B-8cIOC?&/?%5O:-@lQYb'MgG&F/-fTYVoD"'E.pf^/3W
%cQ&8:i;KpkrGd_Pm4;S!_M7P@@*aIO*W('Ck\2XU5#;!<<.%2X%f%mNqY/&,rUf=&qY3U+.q5Y;83rEdl1l?uZb&NaEJ\8BH2;G'
%Z!to^g#s'Wp#?BHc5M9gX.GI=J3?qnR%>qDKVs6%`rpDUp*/(`#""Ipqjs$,JhW)qJXnV9Ws]LT6tZstRf/.R5lg,T^do1`eIe11
%Lhu[@\g^%o);?Hp2#+"_dgbe%32O(Z^&9.JmhJ;(,*%NB*?_!t"gW'8?*E*b/GDf![XjEG<"oo#lnC7f-i`*JO!+sEA-Su#+@Iet
%(,SBNG>'0I2:tfVYbsClV)@$,YgoNmm<M6[A'92Fk0%Y(00Y4[6DMGBrRm\K`GS#rWnisAP*BcIDchdFD$X/gAR@*:'s5.ua\:iZ
%@&f0TTS[k35qeK)mOo%P0*sm1l>qMH.r[cZTBU8'2F.4]9X&iNOW$+ep'dU+9;l>tRg"Co;Yu,L_pAM8-31@!^]u'3`:4JfKbCj[
%R=&FeQ;&7`iNs?8F/4]e&J9t]L^8T/=(bX5!*W2KMbE;/;3Ag8XDL;8_N>_lD(W-s+:)Rneulka&U(3a&*BSYRD=;c/a^7:B+YN7
%2KKWfk3DDM")6omRk4en0[0h17KRQY>EZ3KIhf"`+A=hR&FkF]d7uo`d9]1A*!K>2WVA>>[q!OT7R7uN35g?Q6nf2.A<N&UnT/!4
%JiPuN&W0k0(C5(KJYXOtgk%tt+tc_S>S?!I:)SBl%[8<9K#S(7g,0_h9PYOVl<TbW#!bef!b7N,%j[phQ-i'_aY3]ls'npWOM@++
%F]kd[;]+OkoX(Gn_">*JR3YN/Ou@5V1&9uLHl"Mu\_H;YWbAdYAImN#FV*N>g)^Y29Su=56jF(\$:pIT_f,cCB//'>,t*!+0nWQt
%!aqcM\RNY[_CAj9#H!;qP?TRjJ:,nO]pUE?r$"]h+cLE0ml$a1nEV?ZHVE*O72o(7L$$d#"0+m\/Af9Vf;a/Ng(]_T/)#:'^ociC
%lm@5C9Ob>+dr&^TZ,QWh#u"F.H:VUg*IkiAB5."[.LRur2Q>,^C,;\g/J]#Tb"8F_kRI\=M`hW=O;"[eYV^G6H(`.DmTXNT\C$[;
%7uX8\:^_$BBm)@KDeX=4FMG^]ksbh\3bt3qh%mF.ef'VpW+\%:HsANLQ<?%G"a*`_qGrfAll4sHKtAkZFOBdrC_,'2^/CE+21_>6
%5>#;T=>*fZce32#^/[[8B!@<sTs"G_:Ps0n0lk?Gn?$T7L..=6_C&,M:,Z@iaoe'$lXmaEA7".<q'>tE]bqBEF7ZZ=:\B4!KJOO;
%*0C+_.u@'k!->BUktKmam(oWjL<WJAE5Srn$r-gW7OH(@ZKCk\0%@EZ#1T,[r#)9B2.?!\Ol!/)'[<R^rh9Xc#*8$+pV^Oi5?&/0
%=*YDj.lUhFs4PI]ZDAn0?:&^c!:&8e?7ZAb*OSo+h^7ksGK:\::"]VPq*ski-(qW7lGV:Z-sGe6Q!8eJGuHt7T!Z:(RKoM?\0*el
%[e1Zr\)P8ifiWD)56LWr<j.Z\E&U-m/W2!M",97Y2Jm=)>Z&0^DPZ@c_U,,h&$`uX=hP'GDkX$M-/4F35\>9HKoZ50Y/Jd<p?n9F
%R[][J85`+!Lg$066sp.gO#/&n\>S)A86XpblWG"H/;L!`kM1#4`7CA!IT@qFDf"*K2lkVR^8ca%BT'=7[^eN-I6':0\t`I3#B7-G
%2i]\GdJF'$+4Egj-!59%>O\DMV?4k1#Ub4`IHh!='5C1t"a>lN0_$t<[MN=BLU_W/ST&G?gSLB[PkE[b_)/?(,m6T=o*,bodL</`
%O8!Ne,M$5nBS(-B5fthWF,XlZLmTu5ZV9@%_Fqta2g2C7LV?RWGT6?4;(YYQp84[VdWA7KKKqnnD?dG#TA:K\I7?@jdU#l.7iWET
%(;3m(R)u'QE!_N1dbgEE8`di:`VTp3&l]l^:H."rHF83Uo"*0(%ruH6j9cC)177pVgXM]aR3*d[[mE\i[LJj_(FWn>(lh<pP&&Z3
%TQdW!9g9#MZe.ZWc'N@]Bf>H1FdHmK6q"ALEZsrYLbP#l/I4<Q!S$6M6'Lr8?*"sbou>/?BIPT!:L3n$aoC7+:9`s1VXp*[;mZ?;
%Y8/(4?/\ln-?cZc/_B[(lR&4HL5]gl5Xco&i,d=f6'>Dg"XcIREjN3+K+q\f;S(ZfZVTA\4-)LRR-r=u%(+8kS.6iN),8Qige=>d
%q!UBmc"dW[J2]+BDq7iJeR2+P73a6+FKBZ/5Yl+fMcD2@^8p7`MR[ZEBX_<*BMltnpLi/EbG%Jmb:@FU0QpY6gqnS<aE9g;]o%a#
%Nt([=`[X#'h)_mr[J/-'Y\P'Tr&OQn7`@T^NrGiH]`$>UId/:Fooo.CPCKUOI2ZmN>24U2h#EG>\A/$M\GrqGs0T<9[(-,ZMu2/N
%8/\0].qnrJYjN*%!,ZKc2pM^sDNI;%'SJ4Ij&HRV/GgP?q;%P+hKS.46LDMDlJMRE\,(TgiSr0#b,=S#gV;`/rm*J^r(/,Y^3m]o
%-XFGNCgZsI@;k3"k5CDBb*r(lN1>Q$"WlOE/!R0/3C-QJ'Ora9>beWq?TQ]T"2qmcMPDPGnkX2p]MX(W8S2Xb@o'PrTI<UD!(,6g
%bMqdqG)NPqoMgt75Z^ep/JXD.q4'Tg">'_^-47d55=7RP<Umq<L;eE\9:%!h*M78=A+MO1mn]iUe;(r"TA0-a!bYT+])+<606`W[
%=GLX7n9GF[7d=n"g[@Y6FdQaC?cl+t6(B'\D+-@E:g>H(EWLg[XK;,*6'9]b`_PIK5:%bL*XCl><OoaCX\!m[gEnq%Do(OT"KTjh
%RhN0PV5hAOjC%2QTlpfInR(UonqL0r)nj\!mFc9^hL\DTT*G;\;O4itEP&P0?rnNU`apEr\_Do1-NVBBjM-)t4oY,Bh"3t3"R<<j
%[m5rRP&0#lGM'k'S<04p/L3)!LS]J&*;E6>$7947Beb8]59'/To2VaW\KFHN[lM86/Bk;Cf\TbYi1I5rgcJGLc570UJpnP_R@o^h
%6+3:kpJR8:+^@X=]'[q.=,f^O0r4WOCo8@)p2!P1%]$$ekH![^^oZP/Gh%7G:oQdMh!dbgEu]I*;\OeYO.S:&TJ&k>4%,/L6Y&A=
%+[5V0J?a%X[d:)o&^[Z7S^oek??L3h!RCKsW9Vb[HYs6+Yg]5`5J(Lt4pfbR--YN4,7,//Y,;E%L1%="g]=N^M+'1H3tQ2&NSaS9
%?!\7_KFK@[[UB\A:hI]3(2=QMh3u(!H>sVgWU\eXr_1h9I+:2N9i2Dmb?`/L2>hg/PQ1W@+")j'[ah+@l#.cSdjaB$;ScK=$_c74
%Y!.r;AnALVKR][<5o_+:iWlM$LR63DMK4e5)!a_V.AL!NVMA'lUA"Q$lKX+Hk*,j5-dVm*;5#6p%'iBi*'qbW0F!+(1MD`ip&acB
%rO)8daR&AC_&SZ:U&.R7jH&cKQZg%_Lq!8\?VfL-\XVa%3[V1+f03OHj_mY@bbpklMG[kpS/POqfL+$iN9V#IHN&m"#UHDpd1%9b
%)nsMJX5lU%8q75ef0_=b+5XciR>EV9RUn"5kR7JI_-_;==m:OL11Q.!mU31?e$r8cZK@Q?aEoWEHUEd%+QW<,78NJA!25O."[$Sj
%#N_Z$1AUuI/q-9!,Gu(fBnq-L\)IkQ#?Z-IQn:j@,46Ib<alDGJjcTa\5(c!KZtur2K6/-@F8=&\T`nSGqOQlp%-W6d*07hEKV*4
%atb_'K)7a9CRo&Ug&\GU&YZrC84?,WHasZ4g[nb!2R<pX'*\USIlKU4Ef]pentn/LSIW:S41F_efn7OC%CrDEr2X#$9<s1\D;IlH
%,J!JVLrq=N<9>s)@;O96:LOou=@bjO!OhZ9,$n8M)'GoVq*><DlJ-<K80ptRW!'2J1>`kB(,FGHVL-'KFoi,rNJK']_JIeX)N'GD
%;JJ:o##W+u#pBqhb-6R?I=AFY<U)?G>`:4#Lfm,clYh)6*<?;DbG!NV(r;]AXB*sao%_G+m0RLGOoU$.<38UaCj7FG[`DpZ2J#=i
%hcrLi%Z^]@KkmGt"d>1hL-\::Pd!Qd=Zf-EmYQ>?-nDdsp_g0,RkflAi;,i1peib,OJRVg8\&ONp[c[&McQ]/mg-g=3MJ7=+EdPM
%Z`0Z5h;3"Uaq/T"AH.mZ4[^Mi\dUPD\?\ic>-g"WeXg2FM6'NIYZ")ohD`AB8ebTb1?$k'CYaZ*St%#B/?1TI5s(18,qVR?MP2[o
%!->Kbr>j'4KSuB(\g^s(P?>aCJgRF>4'(ZZWWDhC19=cpMShSL8>=2_^M%O_:-;]W.,`#86oK[U+'p5I1s#C]C:r^d8>9Mu\&M8c
%6e4AsD6P!<^^uYDrP2b34S%sm$ibe,SP:=5DZWZoircLp)?/-c1iqdK"W?iH$`GOf]jD8YU8;ZE!$^?j%:lnDNZ>F*F&DXI>Ra`J
%)T&*1hZKiFg5J2"R54pu6pS&/7Z2,4p4oM<rg@T]h@E?"IT\H<[1@i0cO0lEk;Q,S<dAR+n=0p]_5iS+3EApHNiIMK!dT(2qc,Ic
%7n?8S7-"A9'j43u2X]4Bg#tKd@TM&kKuBD_8mMWq%2OV>IY\(BBBuMO--RUe'i&86WH/V>@3QR+Rh8]Z'>=:mR.G1=U*Q84,]Xn"
%PTG:@1gsV6;TDbV)]p(pVhFk!dHp6scuKnMa0l.c3P(`R>5Lj*7PIJ"R[/]:J3nYja=`_7oIF6k]`Z;=Oj#5#4QaNI)[oF]RDCMM
%;)lbsqrP_Fi'OJRpr9j0>.ljn$UPQf@IN!iRbSSJPkepKQ)fWR,482Mbj.eSksPl2Y>0CVpEeOih>eGLbH%Pn\Et]M#6ib<'tO[g
%U+;o7Ftuc#*H3JAYOh8=TpL7+)Y<P$qt>jKp-1s'IJJrQ@_7lW&[NLg0oKe+)tJ!j"^t&^Q^_p]e,4o4K@C/d5tr'4cN)W<,Q;(^
%m;H/>kG/%D7j%E=;ooZ^T3.69?]9aZ#j,n?14JmWNY,tjD2oji_+6W9lOR$LrcWL7^\p:0J)pDg%7Ad<I<j&IhN[p1p`nMChgQVH
%h^=feXJ7PfdOlG5n7nsui;p6'hu8[=5[_PLio\qO`R0:n*.\P;S<]oGFRZPe%3[`@Ug1W\$X.$c!lqbeqke/Fd3JsX`u/?rbPd%.
%MT%L1IMm!%<ME^E^[SaKbN$'*[3'A^a#5L@^^'GtO,WKKkg'+Q/\$1ae5%0hBYS>W.-e^<9ur?C'1QI'?P*TLpU(s2ec+0l'd9r?
%R3<8#7N.KnI&u6U;=j=AR/'f'4B_f`,EU58[J/e3jm+Yir87P;+.o._j7-@C12ZK.f`pp4%uodkI//$b\]XDsK+9)Qlm/35_9"+i
%_'u#Q`#^97&s\?,p@'Yi(9*<bXGgsj(D(0BE@s6gpCF:leW/#BYolo!s!o.\?r@[mOI1[#H^Dq]MhTY](9a2<MQ+7#*G%K(G+EbO
%4TJ^g<5S@ERMq-OZg9CR1Sqn5-+c3"np22]"!9HH^:79heT=$`e`MP+cSl:RUWk.Lj4X#*7Ks@-(2AFDZkY;oh5_SRO=:Zc:^Y7'
%<!5)LMbGpHjE5=.@?6o?I^MNHmcom/151$S][[r:;8c-a"qJUO=/=%?K+l=j&b^as3g_[9$2bjn]cB,@f<A2#&%TE_od2dG_JsBl
%\2]Cb.osW&oapisZhJ@NRcR"^i-PS)+7dC$g2Nn^hW2DtIZdG.!tUE)0\t2C2[4nhS5QaPW$@9*WBC%O_\LeBc0o1ChTAk\-)$R2
%P$]mY2]9GIKK^B#$l7&12@&>A`@E&TY]&+29b67PTVh!7llD'fMT$?$\05qdSe"5lb$aF@1M4PJHjRRL#T>2/WipJ;R!!$DJ`p^g
%JP_SJ5d:9ldlRW1%3SAllU-a<a1\Imc`nYeZ_Unf2SBV"U>R>1e]4Nt.Q6@gP\VB!M,Vf>q2fl4913kb/;.FI_qia^j#.=a@WKU%
%"%;5Hh:hlq@cUTV,)LV=RBXZjf#qK]J@ic,OT5u_o$D*["Hho6%#F%"E'tE,"&^Hk=_tDE]*HV)[fJL.&);UNi3)8B&1)%Mci=4o
%"Z=FJgOXRKWG^F$WSMHe@K>DMfQPuQ(;uf-%&!OfGlZqW97ORqm=!WLohmC6)MfWX>F3H7XLElD[(m\:p^HC>Z=.k-eV0nk*K.%?
%We:*?2NnBEf/Rb'*Z".u4Z<;BRjC>lWK/9uUGlPEWnn2)3[H6g;X;d/G6*R)4["ccgf*OF0'VJ<f@1CJ@=;=H`HHS7.X,jsp1@\\
%=*pP\dJcg@f.a+bRGVCK'4`'@\&BGAA3BJH%m_tBf4NcbO$TcO\Td-<kqU8SpWgiB+g.8,hRX`tjL+%+`La`J1COmT3Jk_/@&1j_
%OQ4\(8Hc3-R3e$W2AiTG,)\h>kK#_b669o2.9mRRm82Sk/_bePKaaDVMqit]c#<72NRmqm+Js#Rb^jbt(AC')_*qiu)n6pM2%Wq*
%:&V_1#?%_>"qD@gD`rTiN6sSuZamWDlU7u(j2NuB(4Ou"rF:qWSU0\j0fUk&Q;dW'a;#lDDdAFU5ULkkFCQkQNDH)\bK_7J\&3C'
%O%XD_DU!cCM(dQi&4E_%/J7V5,S;KnZEtHbM-0OO_hJhVgNeSQ0L26;,@A]@W;Dq.mS`'g1I"7fLV(OrcXKF3E2dPb\.8j5T16Vt
%<1@'CGd18%,ch$@R<@Gb0K3aRMPutUH##jTGQdfCTPV&/dN!KV+I`7,<ZSmPTtLZGE^Z^'9q+VkG.gKP6s9^s/B=n65c0iCO$4Mp
%\h6@ADi0T>XVWq+'qP0B95plBR@ClJXM5\);tWc$#TJsU7Pf/nM(FH0['^75*bk0D$^^H2b>/RoMuuOT'4(H4mmS0jcQO<V<`Shj
%`'J)EH+SghBc%26oVm"&5C([H<=g&*OlZ.[!%$7@od8d1k5dNa;@Q-,hZdlpPDY4(B'Zt8kknJi*Y,fD7O=8e!4lHYYi'n2c?rk[
%6Au)4$./K31[*)Ho"F;MAq,7/p+o0.Ie9ng;Y@1CII"[V)#a!t^QR`,I99W=J<,0(L--Wbab)V%\K0)/ZK3`B>qBGmJ-Zt#=;^<#
%3>N'i$[e-5qG-RY]a]=e4ROFb=pM'u^k[5bK(;;#J,$(=`FJAYMftYD$7J\'*!E!/B$gsHqgcc18KOd63!3]ndel$uDd!1(4=lq+
%*Y0k:Of'P,s3O"6mR5P,Lfu+DEd*sFG@7@HQ],&.RX5i.A4IN`"Q!P4<[[/\K?JnQM^tuaYkkUYlMu(@Li$cm)O+\?!u:,FCaP&g
%3M)BnTmQ=p\mnY-`.`BfWtiX03r9&I?=Kfp(Kjd#qnd,XXNsmf/6e2Sj_Ccm,XOLEI16^_**&,UGN:13$,9N1RgUW_?h&+]C5%I.
%cLI*Y?iJ)JduWj)RXk^[/iJ'\$;e=$K0U]PVBXG6X"DVJi;W=0oicAh8Y4\Z*:0snT\)rSGr-]C'DTjOJs[N1R"R>TT5mPc+T%If
%2Y&DFq7s_8]_fOZHP82oO/KP.MU%Iid>q?cK9Z?(d%4=g0FP0+.UO8ITc%CAmZ_r`Rh#]`<^&+0%Q)uf7u.9WfGS(O!F?Pm@p(&r
%N+<POetNdn6X$\[d5a)=%N\,MrM-.$.WTEO:5gq@9h-D:S6Pn&@fYD!WI$Gsk[jZla,g8.Q[S74s.+Mi0PC4VVoHnlV`[.9q7rtf
%s84$25Q?o'J$B5-;Out9_\\Utb5hsU<%A/%1-Xus(DV7OWo!R='QqsYa0M(s0\iS]UY-KH2g?WLbR.C1PU3%XF-K(L\/$;H8e>Ni
%(;([EL\8g9\SA2Xl.,&/m/TejVd-;`2[sH_o*pPKG&A38>EIAjDT]I&;0C80Gq:6G\:uZPE*I9KUZ$q0StqsDC6amCUOed"_MT`J
%6A,9@Q=5oWX)]\.Z'7Y'8Ir5O'j/k)[o0NSQ6NVeMd8pX&GOR(p&n7=RL.RGg\t@=YQ)EHJ70]<"M60>I/:MOP1am/Z,4?d]$HuV
%HKS:(jBdaK$aSlP*<<cNJp65!Ns#p0<`/l!O=JSVOY[3(YrC?l!@LD(BMZpq\<LlFUng8_55SJjdNqf<+e]dP2?iH_e9(7J7)d+"
%aM"oicm+b1"R!Qee&2)`ZJ"WhB]+hPlVIp!`:eb'+N0[%;q;+4SZ%N-LJD03W0iqk3TH('V>%]fF(2:$:73BE;6[k[Ur7Ugc4Wjd
%1bQ5h2:N<T8<RRY[7s4^.-jOWWKe8D1+)0RcWOTrUQ/F](91\e(RXEVQ?JWe@s`+(\.l@g[_e1/+ju%3Z6@?cG]gqbFRh1T`PgQQ
%)/"VVgo97>#0\ra'7sU*BtO]!#f=@GO?TpA?3\i/&8B!TgQ5s!ZG'k?>'V88UN5epS9=Lts26t&@#[*mgq>$.@(VOjY$faS`AYmq
%OHKZ:dYsU"+j'OJI72eSnhNVP`8&EOkLTUS,*CiIF(1gl/n=Hr"X5,a7a`)JK+BSXfi`HT$A:q`B%htb-PZ4cl-RQ[0c?6tVtVer
%Z)CO'&mfSM=Oj/CV0B`*>.kj85/\',=BnIH;+_0`lPhre>r4l>H7[iq^+OS3L5\;HM@gekFQ7R(i']X]=#N``&.4'4[);6B0fR?+
%.Zi`9Qti)pg_lpl-fSjWUDWMU;)a5RHUbpeF)Ag8"J`1S"*(e:8_bmt&eBYO'5#sQ4`a),d"lpMZm\Ck<7IJth4udq^k0(!O6#[T
%L3\Otb$o7i;GnXZRk[i"9Nhu7S&W+sW'r.EA!1a-mT,<\-Pjk9rCB7mAHq"/MmA`)WtZ9SnKuJe%BC8'_Q5K\Y\RR(q5C5R6RRm2
%"_S^0#Nj`0`ogaZ&UV&S`#BbXmVMpWC0>.I<$4c&1"4]",pTUTM2,D?N;/d=)oFaW1%`LI1)KCheQNFO:q12&MAS*&cXP0K70R-X
%%b/H"iJq&u3qRS3eS*#p4c0gr'6WL%girKbo[3F*<;*/3MmJXTF19>j_agn4^()7@cRi'p+S=%fZS1F'nnWQ*_aepa\6/5T;)a5n
%)jb)'jlXSqao5DqO)'[nEoRK8?9HDuHO_c]=DafL5;Y!+$JOAYjk.($6O#38`JBIE]$k`SIWoFt*FS*cm&!0I\h#<Ee%RA]<"qZ$
%S%>qr5aXK]VJSj27St6@&$;QCd4nLBJj+\;rQPod:XBiBf*Flq?G0+D&%k]nBs8F1eZM5Rf_-!m#k;M'PtahF.&nNGWDf$*1+)6\
%n%JiDBEoCNqJn5;fohG2qm%s!prYA2"N%MP1hB$P&G#+RG3BX:Ll=p:e+:,nWC[g/g'P@)\B`X1;rccEG$P2eH.d0W<+rb9KbP1+
%d:Q4?9hA).lQb8[<0SR^-L"9DR_'-u"@M(6]JuaT]+FFu\p0p9PD#GkQoBSnD+G"';'5B>Xh5M";,J"CC$rjV"*B6<nm\,0mZPM0
%lJdM,:(hRK+lWp![NR(:7=@Qd[>JE]a$e_i:B$`>n*-T@iGd`#.Ju+:&,5IF_Cp\75aXN^VJSj27St6@&$;d4cnSCAK(i!hg>5k8
%RX;SrXdlbT]&VIZfkF[>&`,q#;SG:4JdA<(EA,/OXp)D0C&trQ3_+pAe1;AmLSR#Haal6d!``P#Pf^uelG20QDAEW;m#hWFiW4eF
%iPC.EG]779*^#=6l65H<E:Vr*S3bO]S7PN;Qcd7anReb>c7Xp'+J,6ARkEJ6KaT9bl,'4FSo:8rd[f:V_O3?6Wig]lA9::+guRjo
%2bSjKG!Q6Vmf5`0nDV4)I5pg.+!.8]I'%7KmeirA(ZN]4W1-l5SPea+%)dS+,`0R-MA%?[M$Fm_`YOS5b+0S_Sf:!n/6$gj'>qqO
%'6=AC\bjQ\mV\;XL\K&&iLsNi!Ppn7:cJ;s:^TG4beoKgYuKOJ9aiC6cHHS/ID]ItV=:P04PXij$Q&2n#RKQ!L:Z?bK2O[L@\/TB
%MM:==lH\n5*^s>q^"lFM4"+MnF7$G01@%P*6q;Jjb,'3^R?@h)rZiaTgoal4>`p9PkrC;F*>t0==Y*M_8U#o5:HgH[d.@cK*h:*4
%1NRd%;9GGO8g5OK#8m<KUnAFp1%S3lMM:==l-Ad9iKuWXWc+=ckEI<RR&>f4@UZo9'I,n,6!$$73N9*B\>Ne5/<k?U'?C"<o"^e]
%j)4b(8_nT;R<iZVB//:':.^*Ao`RY>&/C_07],U"7B'*H,i'?pD&b?E;"[O-kFBuA&bRu$;9[9dMBX=E-g1o8-mt9;'(o3TMM:UE
%lH\qUNs`DfV]j=m?ZEY,65eaFnV'@SE`[$:cY_dr&,:X6Q(`]C%26C"5n^VE`%U*7Df>']itM]BB`?(k`9lN$=ontA]Lk-j]OBYR
%PIuIm#&:Ras6552E*VM+`-^8!__[4"ik#sgjHO:`Rfr+^oL>;qbH(ihgCXfI(?"=875ol#6DXQJp/U3<_,*1K]O5m6=&&c?W=DrC
%.K?FE'Ksucj9\,%@'VBdEJI<W=?#<].[j27K8;!Top]O7j@c/Y:gXT]\8BnW<\G%tJSl'mo6k5tRjI0Ce'6/:oFnlQH2+X!+fa-S
%Id@1jHg^U2W'T=uaN(mD;kL/X3dgEJm>r9((e@X2S(qPt0JmJ!L22,kp^rGc;,M]+?BT--&GXHl[T?4PidP&dY1Gp$gcOW;BNFa:
%Ul'W*7t(=6]cE5=1u%#mbC+BjI@VJc=UmV/#W!nc/[Zpkh=M;8gTr8:83IIu4Tr*c0?=n8$#s2?)gP#40Rr)n/U&d_qlspYIS"!l
%E(RH\<?ATadn9E2kMbS>"qm5<e#;n+agq*e_tKieo$uN.SYcKM17kq1M*4bk9-Tc(47unB1]J@6dCsG'm($B*+h96YE"<SZ]"`2C
%7T^'j'"_EF'VKO'Tp]L%54tV"G.C=fD(Z*1U%u3s@*uI.c\"bVg!SH`qk8#Va.H.mJ'm^7n$pkS2[qXr\KYOYA?ghCOa!YJ6V3gW
%.4.i>2adX7lp*F([7F',n]+ZAEW)-O>kNH3HMjd=]WPUC]n%f,BgjAs(C$#]W*)k)XCA[3"sR?Q$rFmX5Sd%P`Cn+&No6n)QA;*!
%Am=5T6!$V_4lW.uK(u7"Hue!V0*dXg6h.jB[H`fs"Km4`6fOW1"KNi_*C)`"\Z:_>=qZ;V0h@2JD,-/6l_^@b^QC)KgsF(H=n&e.
%;fuZ(6/+u?M5')&US%SE/+<s?o$L5spJhkWpKIIDCH9X+kW;sU&lX8JUB4l,^Hj\07'kVY9dpcATD7m"QGee,[`ma:=2Yb!V!+V_
%s,K?d57Q"jJ7\9YkV5WcUfZ+p@X%=Y@hJN_p.>>C8`j)PkO+-M]GZ;T@7ZY_]a#YUdK*btO2clS/0?ecNX%ZQhumK9D)26;c+*h4
%-kVgm"rSHrmCUAQ9B;YBWBgWlfVS&i^QJ"nLf&f=YPEVnN_kq)(P2:tk5jqA'lQ_f?hQQ-4r@`Ym(5\3%0Y+Z"tc`^aD3F<EEG7?
%8XnhA((2WTFX\4RUs5l3knaAIT01Zha?*[<f<_!9LWY=/=Z6E=M:;%Ho27YJ+'a[o?:dI7oW8&=_+X6"G4Ear)'ZC-o^I#XU7\;r
%k1V4ql"O-3dbYKKAMN]HM"gcOpQ#^Zn.@=L,dmuJ\ejmDkG$*:GVur1EdH3L@3U-IZWDS!P9;49#Z>jil`m6mD0G8u=1iC43T$[T
%dsH/o6'10S5WjTrZeh7o'/.u1(Dn[i]b:-XXU7\M@@Y(QRKjaHXmZ.Y;?6EE&%NPC+O4Gs,^mW])JMYS+\E&%o+2Y=1UZ1sm<X.P
%Z<XC*\:)*lK.L19n%-#oVO!_kr3\16I6u.hV_A"A2nZoSGRMjrDl3?e*JDbI@>'DO75rST+`ES,mGLje9j+RM8\>g53;a6Z9,B^D
%Q`$QHQ@TuMpgo-hE75NHS#2nrjE(OhNWbKd:iCVN)?!<ZG\t#rZtaK#Bqf*=7&&=AGPa,qSkeT-CCG#`jCe@hRC85WU5G]9'Mf8c
%&_-).L\.Umo2!QSDFesi5icXM+GXRM_o-ba5(G6V4on$8KM+83(A/5`**>tn)SrI<<-VOo7"@$%a;j9-77'6+FbE^BcXc^(SO>=e
%YTuLIEZL^;`FOt7fhEM%C*ZbH0J&PJ]]9XECYr'7EAieY.IS*b[Y`@4(9e;uT9n"j[Cgk+VeE,J'M4m/I'0m1Y+5t)D4=03;.#c:
%KK^kPHU7m,C>R^*eLNbi,9\ad'Bu>ogV];%//miU[cal-dhH/-ULTtq,Z=[CM5ht$*$qFB&5/rJM;?/@!CUZ+?2:FY<H*(Whb!.[
%/"41gijN,%D!7gamR["VYJYr\"%6NT#t'!\mnQS5E?^jR9Z&Ijf(;^d\#9bG/A3DBA-\4iP*#6"p;;XIM/@aE:t%tYk<KXr&Tuc5
%CFs4j_\1><EQ4h@a.\l7>'-2:Uj=EAn^\I?/3\Zpb6H=e_csnk05Ii^/D<ZRI?P"Jf5tdEY?H&QF7,XL*'])_"sP^U`O$bTQ/&Vm
%7?P=,54"&n!=GK1YU-)[UhV$ADdIa1%1/G)X]m\<,ZUbDd]+[4Yoq!IU,=!\"n8)\:r3SGfT7or%u-4T<5+f3fK:GoDc&oo,NFQH
%G#nLo>9=IJBVjDVLBGEB(7i9KVfi2+Pj!kJ5/4ajQcXD2<)NHfVnA<RJu;*94Y=+JJk3[H`uA#sCB7RQ[FVrHm3s#c>HCD-8hERk
%UOF?hiSghe=HQU)&jk5sQkA,]2W60[9)=()b<b^";ZcsA-*[R:k2ghV6DeX@]V:7t"Mr2"I,Cn2&$`2+]2K@s$RSr=&3s5*]Hi"N
%!j2Q,Fu->Y8!2<oe;q1S,alO_8#f@aHGZH/R%uh'CTF?'fsDK%dgsC6frY![R<=>MjJgXmr32akGpHu8&2VlP&^iR'l>EK*@67%r
%ln6?T+(e\3[6C^j8QJDV&@U,4-]onMSSm$E#f%<#K"5>6]ul\^efmRD,![d/Mm6uOe/%g&U,ki7G47!;0^]Q.TI>CpclPXn4-u;&
%>V%Y\CirRK&7V*c(6bO%$[`=:M%+0fCkX5C#HE@j+Ue/mo;p43PY7?tH^3,<3+F/2e(R]BXP0>/fr<3?qOip,EEEsHAhK+@)+!u'
%PDHp"5<dL]YP(g$dO4I3'e13fPPhS5?^iX'>.TZ!en2YmKTF-YB[o\nU;dPIX7aoSBm`$N9c3-e640\>KpRMnPFntT+c@e!C0!J<
%;+PX/A3Fa:W:m,8Se7d_1o"jD+B?5#f)*(t/Wta9XP;)WA[,shH>85N/qD*b'EWKJYs2FAAg*U02`4,[IkAoX$e?Q61XTK8FRVIk
%6,r4EV;ac6W\[+eLDXl(o"/4dFU/SfMheWEnJ1I2Ca<AIS3jEJ5&uuYXfZ@'EldfmPK7u6%RbiaDTm+Qq-eB]L="jV,GJ+Sdc\5D
%h[RCa&u2+5hlV2)V1V3(^B0Xe9HLfP&_KT!Qp8N.G,/)cRsH2cX[3c],-[?;3[.)fLo]?Bk(Y0#P/obBh9r)]BF%kr_1&tEC5bmB
%>(eIjFrOrIj6<6)jtT>i`4nS*p?SsY:IQa:\WU+??V(Spo`KNd9AC20W9[9Po^t4>eb'W:CZNBVb>JJ)\=DP9RjRF=mZSY6Se=[3
%1!91H,apL>?tHY^PCsBnP*N7.RSKpq(_Rm1eStlL#T)b>RS,f-3a04>0-D1/,EfT:!5tDrJ6UStUWVok1s(lM<\<UWf>XT0/Dd-o
%$W8g<4(\V29F.nhl#X(?1I.\/bPYuDWLb,uT=,ae`?]/Yb`-_4daW=3)3lQ#OdcMCdg"j@k$_Wh_ArrQXm4"A6GK*7LqohW&_`t#
%O`rR%/QF^)!9-N]F4jHma'bq\1LB`.!phX!4rcZW(f%A]aG`hCd*rmF3CoJ_9s\#o&lkbGd`8Pm0!<CcAk74rSa8;k;7i9O=-BDV
%:X]-WquX1YeG--1l,<!jRi=rC'L=?m$k$r9btD2F6N<O)rqS5HnAi<BmCPU^p@l?!eK=egk2-:<ff'a.h)-7'oB,4cs2RA%p36Q-
%k%DI,jY,K(qpWaGrVhkm6K,\)oC#NJ5N!Vj331sd1GG:+SXNpO6tTbFRV9iTQ$MXD\I@Q%m9X<UCWg[E:sD@O>5f8Mg:Ks9PtNae
%BL$s9anD>IMJO2\>XD?Q%e?;bZnRWEX.AKJY$sdrQaj8]^#=+B%7>uX"&R:C&T1+A)k`h=XA/?Dr<7V<4pWfY/,6<B4,Bg&0'JY;
%HMNeQ?rfr&dHB4(V-EJ\JG%WtjX"%V5+I;M![=<H:CB(nl2&_#_60XE.kNJma;DD@mpsk)Lk`LRFuuD2iK,c''7b%1no_!-`)gc"
%cOBi:50o5mW4#?+J6"l<?,YGgjMsX=c*a+Nb:/W8OOarp4nbl^,Oe:STcihC-:AI[;EOg-V\4bepnR,QgiUkK4[Yj@S-mD>!KJbM
%f1UoZlqCi--6#-nHZ3^$)2pqnGUZc:O:GT_U5OG4aV6`Ir:1rmLNab'p$0s^JU.&PJb_?Xq)X(p-87[S?Mr:(^%edXn_,Ajo(V/$
%IGKh]\ekBh0E19Dr.j^ZDlZSG-("H?G6DnO(,9n%ZsG(jS+#)LfJ[#Zl_Oa+Ke0k"aF8brf'R6hO.U*i8"4d2r:.S0"7Ym1mf<:(
%)]W5!:%.EAQi@Q]p7H_Fila:HIAQr6(UR*?fWBr?HW8Q;Y1!26%PG7M-K`Nck<=efj<cE!I+i/4F-S!sfMpPoj?taUbNdbs^\$P$
%lX%!2n.<!3@R07iRn#MY@1(@66#Y9>0&jQG38Lm.Z`_C,\AH.$Mg=Fm5'hpbP^)nbX\>q+p"n:"W99Kd4@ZLiM/B;rnobHWro[T!
%V`Cg-d14Ebg?6?/Sr0^AG]Jb6($A>TD&#"A,fW"tg$sAff92\K`Oj':Yr.*NWlH\h<.b#(g'FqG89+?/7k54O<82naK_9l\W`oj2
%T2L-!Jr'$3S*e.^Potu9[q1QTrrbkJ")183oOU#cG"64I`[Va@CW08UfR6saX'D]rM1)-jKlsu8iaR/[]:N,6G5YK)26(+QE?c=g
%GK"@!<R//Qd\m"$V?-Rj3sl&RoG*/)WcMDqQLr(0VY_(H2[PT,(,K`'7BcPsb63%'^Xl*E9bD87@oh-LdpEJ,X!,b/;6YP8o+GDe
%N7,e[\aHAb78`pbe2sTk_uMf#Q:Xlh`H7N9j6To0aFRD<QX.(e/!BI-$-k.0Yn)ftLn8_A%EMOf=0HkG/)M<u%9*%7m7=NFeX&"=
%h&o,X0s9U+70XSP!me8YK,#B9U?8VH8X)n,heT^P.13(@.)&^<TO.?@"0[%&?C=rt"*8e%c4%'rdasUm[.hpRYj0tPks]sd'0%.?
%ASMDu7:##4j'TGmqF76Z@^P1\o;-L/F17kc<mut4%6mm8,W)$E)N`_5Yf%rGFRj4TJoYcH9RO;&^[[%e#G(Ou_5:qUKF$]OZF[iQ
%+#@N]VnOuEf2U_e@8ZmJZPgbd289.<F7lm3DZ#CA@1tpe?ADZK6i_(We!;.TDi$8n9BD$PZRs.UpXYh^^8<6\O?'L`_[Z3coo4KB
%1iKMaS8E9ql%%,5ARB7b.u26p>#eKV8\o6[V=g:WbZ1p*r*DU-h0o-ZV=MlMJ,d6b@T^/.aF<bVZ)%ehR7;+@30A?oYiC6up.=k)
%cuZ:5c7T"u2sDW.Xe\N;HI#QGZTeYqLMko@WQNt)QUNgFW*0r'K_AjoD[WG,cO],$^Rm9)+d_N8;Z>b+$&fe5P9Oqf.d$U]C)Kf=
%HB,@A-aH'jb_AbMRpA+AXW2,:[eZf_esE"$I$4A0M;RG0p4iTGAeZ)<9/F%(le*)FB@Ne!\00\],sAbSeQs6<XU5mFRk2?ESU-t3
%BTXtiGS6`';3IpUEuU(7<ArA"=cGS1&Z\`N9T%fDg4BXQA]^LnBq/qbALI"-eS3)LO&bmiA=Bu/$1PE5UI$n?`@7a/fMGqo!:9:%
%WEW`_bEaMDMlrXu%GN(rQb0i9Z>]<NC;oQ#dT72a6T;*8m.!nnhQXcb^&ED]DNqC0,=k`pLaR$nh(l$F[a*TLI=WmE6JiR,Eg[;s
%DlOcq&n8i(8MU=g3JQAdl/&E6g=7g-a]a+0Su,c@P[a[*cX\mbR9kHLYS4&GlG`2WaO<M-m(kop].qFFQ(76G3L+E?aD\+k("*Pq
%f)K&Uff-O#eJIC`5F^_A[Y#:ImmQKbl]=5T5X>]s'GoZ2UfaHRG.ZTU;ta3h\*/OVh)DLg;dO(jN)T:9!]ot)2q":hn5T1^/c]kl
%cP"Hs%Sc=BN3UL=@f'm6p_0r[qe,:ci_Xak&9jO-jP$[%O7/FG(2.!SD6QWqgJr:me2ZmLF:p&bg/^sRh'u're\:Q#o2dKpS%0V:
%jUSL*HJ:hW8=`cS:3YI"Pg^3&]DJJJ\S3hRp"JHN>14o5pe#iSSIKN:4kA927U2/6a"R^Y^"P*NAAS+K>@19Cl7iHCJ?,cqr3DgY
%Fc"8-m=+_:TY3nE29Aq:^,9N'YYI*m__MZ_#Cst*g(O!^Fb<rsl_SZS<B',L@dIc#&eD+=aK^ZROR:uLq?s_a2r@r@b"T8?"hE!`
%lq8t=fF(Sg-6$1#jg"#eY8$V:pbM6K`8!6BG+1nfQlpm^2>7F)WWa\Fa"!!XI?U\!N5*sT][U[HApFg]^hgc0:4\a$I8I9mmpMLM
%QnIp,I0*6FliC?.j3&C!#]h/O]=dmd-dgpOhT-rFbMb[8FYI/CbZ>&@e\QWU0OGjE_aWl]LY5d!07u(?7;-f_Hb_>K%"l3aH9Qq:
%0FQkhbML=#$OjX:PX20>h7gf2EE)l6;!r\^F&b-hQh:FrZCeW7%h5^RYt-"#62F"ZAsXpi(JTAfNpEF;?/i(\\XG:oa"-:%%uipK
%5jW,0c3r;ILf!hCq)@7qS",lifL!u9CBPEdp/&!X,\]OjA.&%(MJR:SeuD)5#e4mM<AI(:#8FIFMlMp44@W&ApGQ]oEkTqnkDsK,
%<#^0#Of(/5"e'a.g`=&e@E>6,]ged"I6+)a?4YG^kP:fHT9]#C;jWPodGANADm-0(hS/L&LOJn-C7;*g1!6nP^'7fcA?PK1*@ULH
%W+`C$':)q9c(TL01=oeCEi@oH?a$:KTEn:<Br!^6,N[F%15S1*.$'4L0T;6pb#)%BLDuBuIb+G1%gtS2XlNfN7'>4S%^N(B(MkIg
%feKPV9bM%go?-7F3tt82N..0idf%.*BUmC4"5'g`>e6E[I-p+oaL84.-pE&g1-9&Fe9f'U#PO3#C&jFd=j>*)^.AAHIHos9OY]Ed
%Nl(1cVX788Vqs?6T,GS9Y$!CCr;A,o?FHh!\NF*d!8@%S!/k*[>3r+U_hsEr]VVuV)b,bRJ!75I([1_T7VZ3^L>Ios%=N]X(_ij&
%o]N*gD7Sr@hf,b%Ltn!:"l_"X-,]ofPr1h9b:1\?P?Z9SdD,M#e=kOtjmP+nST/fs=r'0)h\=HKnM5\q%>"iRoj2p<>^8qd"f:A%
%D0fD?5=V'j'qb.Bb*o/[=4$;o;_-XllBCDPFfB][5]?PYCf;OPiH"p3:R:kZCOagP]e/rFp<XO`C$i%YYr;ekU$[0,Nm!]4CJZmg
%)FKG>q2sP=MG$KB]bOe3YU6Gt=1tt6DZD*U%Os.2%)C7?;06pD@O/?e+M/&C7I?sDfn<QI/HM<5=0fRJ,6,Gfkb<:kAotFb9e55q
%<QV;Ea3:Hk:23*cU_te7J"5Uq4Y-FWY,;jg1h!,JVTBBhk@H^fP/mjXk2>aa2J@iA[YrMd-bZPb>D'G\Y9<o1SJU(s?Sq2sK5NO>
%e@P)ES3emhfNr2rD4<-)k7Pr>dUs2KY.;9(d_HM&lgZHl_n!6\gnfIYP(:O28\Tqb?H_RlNF"o-0B1,hj1U%V#GbsZ#hnb)+1Z3H
%DYXT)Bs6@$lu87B2`G%[Q+KV2_Hg^(Cn!^pFgk#]b*`p/99M4Ji<]+94A2W!rTP%R'Jn(q0i/scUBJ5a\mo0?YR?=m9@)l]Y:=a?
%?9rF#Ak'MDlubfQ)Du%Ye^bMLYOr5`EgT&/0N4)1r$(CT*GPCERg.bdf_SrVDn0.@L0;peLB8O.m'mDWcIcf>[-?m4o?MOHkS<`K
%/Yr\mmp>LY\&pm.kEoJgJpr6q-26V/JGEJt(J+Kl:eCU24`%Smbtt-'s4B1+->^1Solq4bo^SBl4dqDQ8*J=;`2u\\kD-!B6`d>8
%5)Hh!e+`2\^J?Bn4lWR_\'AL5>3Gj-DWNtj+!&:$()m%l%EdZE6ImD:'gQ_$3(o\1Y'Bkf;V;X&<qmj40hN(mI=,[.2ZXM<DilpA
%MT7X]VRk_]mZN!hcR"YOT@8CLY;fFdB_SXo6ZL%rY,BLI&76,sKV&]ZG!G"kG;WY3-ETQiEL.8Q#"'[=Y+Tp<<d*"L3fQ"$1o,#5
%07'Bfc4o?aOJ$b+;Khdtr%:f+$<)&q(sli2ElRrF,8&ol`m@A2TE&8e75r75;iP:ul_Ne@@6;,GebkE>\Z6gdV>p(6E8<[Mc[i-i
%)H9Vg:0lIklDphg/pc-p!k!3'ICA#<^[;umAH&-Kce^PGSu/kE+:k$SC,ee@Z_q!:,IuNHf2]"8b#u!nU:WmCbj27tV+7W6=mg7O
%pYIIo#em!;C6V?O-*VdJh+t079)Je*5P0^._nO3iYFO[pF?;(QYoM*)-n<ifV2Lqabeh7-<r1V%@O6@\kN@V@5At1^?q<J(gBRXe
%3EA3lO:LfT8Xf"jk`3,?)TH(NH0T`D`7SC=Nt->^fC2DOcBXtCb13rqY<R0#s5gHaW]/PuhK)o+S!`X8If+A1\u'3))4#d(UG^gj
%DjH:kCI'th>4iO$ZXuV*V[Rdf-?!O:$F0^dLIOLTet6/;l*BVDmq5A^-T=sul?7FhZk1sq5%n"/!SldC$:<+3FuG.\&K6;8$YZHp
%ooon2aYsV/ni63n;F'MIP]Eb)B?e)#+VSV<dms:Ep-8s&!30]&J2rc);\*/]RY7H,Q9q8&&rZ!N\(*B8cW6LXeJrUMd"O"6c^LKZ
%<frJJlnfDP5FUG1=YrP%ZY$DHE!s1^@Q.`COJb:FXKZ<gjr`SdjSWseYW;)ZLuiCQ)0",Te!W-YV'b0VlCKB/;ce4I1&0+5ppI#J
%m:edZ:]!AtlZD0BJ,J>VbK9S#:1;1QQ0$9jgAggFFR6cU=dM)Il-98$IkP_hrR_!$s%^hPSXlH/%SqTKaP<OF>1KcrBghn1CUaln
%6\i^\/=1P,pGaN'3NRtX"33&S[OsSVW`iHs87)%ef_Je5eSAG7`PWK2EJQ$;Ba&\(PF%C#_"V?.;H\+K*,YY[j)F9oT62!!_AWJ4
%Q:7B\p"h32_2Nfm"[eQQ<\:ndmc(">T&0?T)JH,(,Y3G_4uAL"3AhGbHhoCe"E2j=QbtmrdlhQImC9;aQ`ZX.557)*WY,G%40X2Y
%g_A7"JJC1$M\g6"B9oSN!'Ra4]3%2B\ZYZ*?7e)^"nb#<)+/`3Z5.k-n%H<sN@J1g9aP].%ZU<ml<9:,r[DY&=1YS)@Y"jCcMd^4
%HI[PH8;2n&-mhsrMhkJ<6jS\CYLk&0W"m!ifA)LOU=dLddtg^B?p.,L(ON4gZs77<EZn?'FqOkYX3oW4o2d)PX'K4t5&'aP%QimX
%OaQQ$,t>ffg#bUF@mnpnIb9uOlS.?VOtYZVIDL_`PF#o&g%D:<,,OL7=BnCsB69V3pHR"rI;()aEN8\[$*sL,;!o-8$XYQ9r'n]S
%hJ27'ge>P]\##`\M@<H$=S">Y1Mo>?d&][^\rs3WVYdI[[%p'qeG$De2g@jF(VJiWHW16X`A3>)Z7kl['UR('6S6>"oB0+jiEgAZ
%X8$Y;(<u1@U!V+[q\-CREK.2kd?,h9^9Z,4BiSX\fEcDnlld.?KNd_0,J].PL"@Q.c3(>DQSNdYcS=KV&!;P4`bO<M/o8uUah'_O
%n/8n6f%paSrEV\$hC.NP,h_YX6a:"$'n")Pr%Xo%W%GO*LFJF0rPRVj48@%X-E3Q[@Je@mK(SYQ5NsS0ed-$M<K%pNZ^Ln))Eh.#
%&^PA;DYccZF'Lobf6V*lD/\0//"t:J8g&h93S`"8MZj0tZ]o*gq@I22hpSplO1jYp9r$7P]V="f#*7I"7sKiQfPa!rBT7lj9,kW2
%B_i_cI0f]<^XMeR5CMTuD2C#e<82(V4F-1T>:`8YHo=g!joD[7(MGTm6;*=E-5H"9Qgr-)o5ktj']#M@mD+5k43nH`P/5STU#>1O
%,>qc5>j['AHD`B%R00+Y-.aOCWS@gt)k_HfH37a@X>(P<2+1ej&qmb=f-0m*(u=iX$qWN35RH!+d*qK<*#3$#]4qtn5%<%SFV$s`
%,T9jA1hS^hMl/])QcM[c'[W?HAOK<#J17J2FH:7IkXhOX4"WQ.:qrPC"\X4lQWE>)j[U@grQ']<NpJ!W\1C>rq=(cpJ)it\<:Z(T
%\m!)&!q5-==EF(^`$P0`h>$)=;)aLg5BPrP&%?KH)*c?cG0Nm$2aG]]AsU0-_qL/o,NE'RIG&dG0&8^O%ekggl0%:%Ln8qEk]rE^
%(ek=o%Y"N.N[=O(Tqc+OVel]uU0g2b_QC[\*s1=L2"XhBjZ^53IZ1.W>D8E`Z+3kJkcI1A4PMb78U-2kKPt_+C18!lXPD**I0P_^
%@6[\WDuB3^@/M!em7l"HBcJ`n)SO[4kcM/=f8P#'K*4:>oCo3NY`qQPW;)m^)1&@OLa:\*iA$c6#(!SU3d"1fDtPuIBJqVk"OcbZ
%g8[?A^=?iZ=;qmjg\!03n.<h$O0tMsFo#..TsrbL\Dp*]*eO37q/iO3\^KQ3a/u*rGcM6WSp"i[^OM3*!#l!NAVon>&l%gqSY=@S
%]'7t7k>B*+1aR*N%e\dl'CH-coasfZ;ntb>W9k\`ZX(#\It$b<q7Z6,54ouDGheQI"/hf:ZRS\VlFlXST*H&D9]'(b!KY(b7r8J<
%IpVf..\l1lRB.Bnfj^)W>st:J?'l26iMBE9)9'!.RHK;]CiA?e8A;0Z*B33<?igaaIaf4ldA/bP+.C>e(0"`j5\Z'A/<3#&b:l?\
%'8f`rSI(/Ek2^,1ka`V^T9`?d-TZXb8b;D"k]/WFTDm=lX<PJ?Fphq5PGo?e2[atJ(Gt6bio-![Da5ud(p`b?O9Q=X64OqjdNl\p
%aGuXAgV!0pJP9bInEo]f%"3U(7KPRi]18:,@4Ngi>R_:9]\?qUa4]gENkB=oFo:Zir&&/\*2dPU#+Q#DncQ>Z[aH^-DaA8[fq>]6
%?'e#FJ+p0U^AFUN>(%StJ$^BHH0?UDQo&A`d>/!9GB]$1-apY]3R!R<ff$k3bC,R'o-*qs,ZL<s6^(s1s0aa?J24Jc-TO$L[YD$5
%Ca0k.%e8mCY,S;*CDLETi</(/Va&;=:BfJ/l4CtALLms,L5:uF[&)i\\TF.N`%.MjT55_J6Wa94>)lcNnB)II7^'+Ig%s-j3t6JU
%HC`Xhm(`l<F,XBV7#BBPTiL+ok_fTD#+^1k]=sUQ8'AGb0j!7OO=YYk\'qMOau*1'qFT=E\P4X\U9Y-[Q`;.i^jDbV5%%a+/:,hg
%464"+#N[,7r,e96;DdYn`/Ah.V0J/R39fGU,ps%m\o.5eiB[&0RHiu6$JDIC&ST^S/(n[T6fMhsa5pc\>]!RRl^bU.DS"p]Kfn7N
%%#E_+%^n0s+'>J9B"92K4e(QTBH!H_d%sT0OVt%"5$["T'o@_'\<ZhDAUU>ObRVbGNF!k!!H]B\We_(ZH63ps5iQ,"(6;`Z%G33V
%iE@gCV"C5`mIg+U't_Ckrb&V/ci2mI^\cR)DgqZI?iKPq?iTgY^\d&\ErJdL3_S<Fl0_[@f`*IHm`8cc_1@_sZ5_-H.=_.HJ,NH)
%nq44;9pLY^(]Me[#*(>+AT2'F;f6h`fE8TJrXik-&=9aq[,(\r$[/<bRXb:\IRu*>c?I>+)0of_bBG%4o.PT@c'"LdC)6A2/kc68
%SaD75ns?P&rgu"9k3)d!n,N0,^NoSN5Q&)O](Gb.D<.>hh/@c8h1,9$+%?2OIfAJB:VZ[cs,2<=s7>"&s5?EHcH"D'TDdd$^]2Wp
%q<),_a7dhb]>+C+T>19J5Gq+SlsoDC.PhG(U[8<_dH^\0rtg)ORu8IcI&<\1doJYI*&SM4\6XB,+9=p9i?M.*,m=GpalakAi?aio
%hR'`Ap5SEbKG[R3INXYj<GB'Onr_#))#3ApIBQ8kP6`FpEhpuL%CaS/EbR2d_;1(LL&$Cpnj#Z""<]n./k='egJT9H04B>pc3o(Y
%g0`';J&X/>rqJdO]EC[=p`6hcel"A,'fs16Bgr_'.okZPg'HKV>P[6\UX]=OO5m9Sj!]Lp=8!]X&:NQn7nguli%q0=af6BGEcBF*
%iU[9KHj?//>SFV](peX5Js+]`Y<R3K!#q"I8[@+l`Cf&Er!cE::BHSOdu1#L6;3@dah1<?.@a,W+MqZ-%*Is5m!_>Q-/pN0X%:SV
%r-8;0USN;;C@`6kZBNk#0Hq%>&%;*VSHsG3"M'*`Vf-]:i#dFj6Z8$ASd1:)`L@Kbij>s@J-EB[,RMu36UVo<Z%[bM.U@[C-A[k)
%^Ru4t#&,TE:V`3VN=j'unop$-aZ5NY$f_(oYoalDdRC"8%X(uHahaciiX%:ZhE>VYmtU]P++<BaeoD`>"qIEE>P+>5cJ\WVk&3<n
%H=E0s$KhV^gMe@qp>Me8Od$$Y:JJTYpoC^YIZ%=%M/@K!N-Y>YC^3Hl(o]J]4ET$6?o^%klZWGea/W6Z]D,8]B3d"G#eC(H;cEt9
%POEJ5MjFF+)t$m*&l4<t!GMSG^>BBmd7X404k4N4h4n$JmSg=-b]N=9>/7Cq>34*.Es?881ZPHCT"&4A$(hIL>C-8e'8t8(Ie<Ek
%4mOUf<l7@<D'$q/*8iW*(e:(8%`t>-"R5+,I[\AK2OO/NZ^t`FZ^qN09(DM.i2Gg%&]:O(SOK>dT.&EYi;l'&6F*[2l<"UCXATTm
%E&e3O1")>c>cbR+[V[RQ&ZJWWkb+_645Q&I\^4Ki7RQ7UF"!?n>^7,CER[uqDshC<B1L_p</$57CF)ltOrt4h2p8Lp`AYYg-nL7<
%i1?SlS>)NQek"RpYq5%[];UR]EUUSU/*4dA5um]e]K/XL[(mL\G=3@`:+h8pcc=Cd(^]U:]##o=8S*n"4Vc.LY.T[]3%B+tb*"80
%b^BI[iOW2^jrbsQ]S>!&@&I"WXCj!;)CjP(#K.?#d.C%(7Z$D'k+n:Z9@[=r`6al]CZO8gbSaB.$]NEIW?Cs#XiKJPRH/J7@NMZu
%755G)'6Jq,P`s6.M0g`7`DUst2/tJ@3!.`N4amB2iE_KJOqUT<Na%:ZUR\Z1L[Wc"8EEO.(^]I6]"TW93G"1<4nS;CWOb`k(b0Sh
%q`*2sN?:F9f5o4a-bOHSDDo5;])ekT;L,OG7"T`:Y&M"6CoWVrVd]jnng8,6BQc"FJ(#[%0/rC9_b"kn9nT=,[kVFcDdFt8Q]#=k
%dlnD#G?0M4Q_KRfiSY%X(qj,fEm7n86uXpN7%?Qn2XRG!8omYDdjf^L[+m9kOW^6g/"E>m;c]:(;lqJ/R_,)Hi+1l2p]-2[A4hdm
%=e$a4L<5@MnT%Kc\0_?I_B_`6;2%<+e?VE?\]^BH:'Q`71T9#^+`Th_DMWL?,qkRMb9\kU]G#C8;j:/%$Bo[IAS"bX(GjI.XBX*o
%5ZK_%L_EBb6bM0epQO9&;2GGE"C9u0ldo*EnkQS,,L&s.9[JT"2S>/3K;.an.'k9W_B/'Lgc@KfDbHlS0".8hGOtoU9aGip;j;:E
%$A1=;AVF$'QST41i`/p2Nl2f7D*;fU1+I_;eB3b1!`olf!"gO"_EE<4Jp;mME/HDG=^_q=[B*2>mW'Y+G@q-/J]*p/2t4a7BR1,T
%MITf2[l?-&ZR?Sq.RZ!82%In?&(N?,A[$Kjs%4"E13bT)QF`!MM4lZEc396E#3H>o]%sYs"/F]3]a_o"#1g:A3c[bZhNYrL&8+hh
%9hEVY.jX,J<gHA&7F9!!GW5!g[2X#g<SN6/Fu#hiYBi^uh*rt`CZ%qNL@`b+`CLPQ;"RIR:+7\=ii,up9AN=jNT#;J7a)*6eBQO*
%;p%NB0or/2P`"!m87KLP)*k-iJrC7@Qb5m?0?0H=TS]<2^,3XLaI>KGp9\%Fa[iQMhe5Yhl(N50jQ0of0d+<%5uBQe3MWO6Gc+SK
%MDZ29'>M-u-f+s(g4m?N7c@@8GkbSpB)\2d,ne-6'R`oC;p#H(H0Su!TK=FD%.AY8R568VVSdLJkuNXd3aX@K%Q[!4igL:KkaRa*
%;HB1/8M;a:\r3A@iSBVPEs>Y#n<cKjr$jK5mn:XD6\d'ZJiSIXDb>%B=WoLq]t>3J/s7Q9pT6r=.(QKrgj6nT)#%$NLC^^uAEM$o
%5Y$R2a!_^MMBRihWH$R:`$??>7n?VRD0t<F7n8<97k0hIX/Lm8jNEBAK;rlM:$7bDQ)LScp1!9^>nSAJSO(emVZk5"B+I;!jqqDS
%<EDa*_o\A]Es>Y%oU=&SSL[Q5+7-tp9tMfCJi\Oa0M`+A'[IkQ3_qQE==Wd6DB($RT%jQI'IM.?Ur^A!pN4;Z.NPoi@`0!!5gbp2
%#"!$k5</7CR\@]&Fd4d<]Pg=pEs>Y%=SW3"fH4M`Z&914@](A;0bVtR</"88PKFf#HRe0s=EtW=ELa[fEZ[PH35)5R8gd9edhcXO
%GLn8nOl4NX.a/P/-,oJ3i6Kd\!=.^TeBDq'lbo>[;4.9ZOWl`RgrULJ0mD8&M@nHN!**I!+t+n38N?HQ_P+qNGni2VS5uX&2=%^<
%>#3E45V']EF#VI_d?&@ElG[cMlCo,X)TS-.M0,7803&NW#>-il1+lS5==UMK-B=:.-ghDC_WaCX<-ha-SdsG3V:0TbN!+>/<FMIG
%-n1`^"F$GZGd14S784aL>F4+M:_Y7?@\h*9,^2"??7_)'MdjU^)*h&D0UkCDYcc9"0Z%"PPugfra8>idF(\;ap79Le'\f<T4Z6$0
%=DY'n,Y!AHK;rjIE_]a^;%L@Q'W\C"-AI_\9BH=)qN=-!:1SR33gllsjsJ;@1#eW1TI;o>9d)CH<i8-K?nKC@X/Lm8h9t\k?@O"I
%*CR)(+\T9h_p?>Ga-"3d7BnOT+Y"))ENjQCN%Reun;qJD\4/gi91QsaOc#SehCTah:XBgdK+ausmP+Ah:JiZ:=GTS&\21&jV^NpX
%2%oX_/;kf!'fC!DY@<lGK!)>](4oJd.@>E44ec%0:I7r'7%HWo2aoa)XHBH:?<JcRW2,:/rFD%Y-g:EH&RKF6K0H.Ra+7)=NXS9S
%,".tf<B*E-WN;5\Vd`d[)6'Qkj*_*Og_4d`A"aU4@Qh]cA(_U9@VHUP&g?ZOWkp4-8S*n"4Vc.LaiHp,38XTQE@9*I%R8sCdb>?+
%F@oC]**5[',S_1^d?d6=-`So#Vd<\eq5C*GiI)G.bR&B>A$HT8@SO\ggO0q"nq9Ck6IZlPL"j:j;iO1.'f0f:,ben2PCG)RH#u,h
%Ou0j"T/g?'$TBWYgDD^B2_UJWb=*^d23.[<a?+."<,bd"QO]%7mOa>C+d"T9S@fdq:XIWd-fUB=f+@Oq8R<t(QA\@gQnp/eVBi((
%'b^,f.uP\sOYee_/3GX_d+(iXlBK`R'([s'?7\g[Mb8Yi1FW*s,c?kA'(aU'M^9O/1blYH?\g^nVJ\""S5QL:Lj:U6U0&s?6<#/.
%aT+Y7P%9fU_IQDfGqgWkOsYpIFXQ;X]"2<=SPe*E,+^.7Ml#*M8Vn!u#"@@4jG^B2+s(KE.Ae>A-@Y^\2WgR'CE"X*_8ss;R!5'`
%7B&7;$V?0dD[&YdPiRdt5,+TOGq#U8JgPr1:J9OI]!giaS5FSL,2V_iT:Ao=EeK6)./LCLLo(N9H0Su!5R<NbLA04J1JcBIbse=)
%b-`HKcQsnQZXmg+8gH835g_M:3Mif2R?Lr`N!Y?:M;`!s&IQ>!*tlM-V1[%hU!X4har3%(FYB'Sg*@tPoo3"#f5+b=C"G$Z<1tJ1
%=jLR!7n$,\n#$]7S3YU`GPRe-*X32I3&6:fEN7rK&kFka:p`q_7Yn';hP?DQ@l>fNi]$ZhiglaARr6+]V0=*>l%H]OqC.Vm!"ij?
%eP/V1.4Z\+WL"E24t:;V3;G@>StP<eI`!&"G9Pu1KY1F`.2.pG&SFqJ9hEVY.jX,JQBu&=.V[m$g%FE#TW+FCdi#!I-0";UnB#!l
%,R9,bK;rh$O(bPTLo4P`%X^[ob]$ab+OS3CO"1s@8Z_5L.ht0jhKW8KJ75#.KjsumEcOTXeW%b:p3*XWh7+Ik'@(#pAB;8Ua^Rh3
%783o_KaJD&0GKNNJTH][!tgU5KboX.8'&dU#n^fH[EW9?1Wj89&^P#\(/$\<C*GY)_%H2;6Xem<E_<S[7_E6cbR;D8>):;62WDuS
%.[qAr:+/'ZLj*[NAZ6rMOsYM(-5=i;0_C@<*iB]66GttZNP&)(/VT_MCa.^EWj]G?jc"3bMKn:o<#/+f0'YoFo&<5'6!$#dVK#5;
%R`*,<HC=9J+X[/1C,(75CcZRr6V]aXP8!\"9L^=&oHkq\Zi^_b_co0un>Sf;4KfP.k8\Nj>n_,\<SR0)c7"*#&PjM:`L)[CRKuZ(
%1EmlJ-lf91kN#8^iZ7>60,#k=&<gl`im",GRk$9B'Itu6SLZKL`FMrr6uR,)8NXc82ghH#$BIfl_s_1\F3PuNSMfqL:pj".mYoSH
%'Ck_Q"qG`Ce4fAfm62X+&'u':H[!IYDs&G:]Yg(im$;#"$&$eF5h.b<"f&#WLo49NN9R:>M;WgIK!`f"Fur)[`-K#pVl<=5\(AKX
%`Z,jD04$2B0.n^dX)XN?FAUsiOsiti9Jm_Db[.5M1/^s_a8>4W\L6SJkNp/Zjn+8:kPW;WjTNRl,spB)</"88PKFf#HRb?#P*(Wj
%38PYoE@9*I-AQ3/aJ1'UFD5&2I@<f$,S_1^d5N?h-)rVdP?M:Oq5C*GiI-!kbS,)HI3B;h@_'Fq@oX8_@c\>f&g?BGWkKq)3G"1<
%4nS;CbXWsR%.?rNR4%4pVGhP2iRNa0\hu.+Ia'/b6Hg<HI8cAOM@,2bWo^(EO%PiXhT\,:-d_K3o5:)>^*e%Yn6*se]SfB-2&SYV
%Qp_f@W\M&J@U>!2WMk[6ADn,B>8(BR+C_"+*Bc58/"'U/7K`+udW1g&#,Ju\^A!oa<`ZZt=C!l"QK#u!hm8]Nm\2%_PC4h@%#Vc5
%7@d<p>@O0^fo)]_2G";[o)r@TPiS(76=QO4AMI9B7843Zb>W#uT]d>q;eM?<;^.h!;_OFE<"m28&5UZ\9hEVY.jX,J<gIdF?.-[[
%^-6,b%#VX,4EX-(4sf4!5kSTs68_=C"RuV#h3?ubZ9fb,H=\g44[n0D:B!AD%j:Kj^M/qR]dE>m_Hn_jZjC3WeKE5G9gM7)W_;3E
%Po!*4?.-Z0nnH%35uBRhLGK8J6aY;QH)^F9-A[62SY0bfP+5D!8%_bN09qF,Ul""-.#E0Z+OnXL)eYB?4%)3WJ#J_T&\0.k>Rpm1
%?'8`_W5<(?H?lbph*k$H-XTWm)&.MJ@lgH.XMd7"D\dC9D3>_AjpAW1.EO#MKu?+Hnm\T0MjbJXT)=c,IP3X]+pKoMb\i71]s2')
%AG"qh/:Fm`@V"$!OG"eHICn-q,Ll/FaUK+NGntJW?.>G(jN*NEA#aB,9P9T=Q&)@8oj[0[>neMY4>GGG,rqa%OGKf@=j2#4;0Rch
%@oFSsQtdS\PJJYB0q!8+G"/_r&.MKq3:XplgQ^cXZ9fb,H=\h_h*p-;:@9Zh&"%$'Nl)]rInAYaKtLAG.[S)0WBln#Rt?S0<L:'a
%.kd3W];.O'Bl0<G),k*V$0ZbWTh)8+4mBq+c0:B.ES?8[Z73m%AVJ&aeFHM:\P'O*]5KbXm/^-sF4\eGjgHE(DYLk@)ilEt&a,^P
%CYS9JROTT>WL&13]8;sn:0p&>1FCh=[kpS8<0K<;hCRggfgRW)H4]5mVBff='ddqKbDW4b0'^`$EoKZ\1"A1QV)(`99#T3OAheMU
%/rC5gSsX;_P+5BM8AnF[0:'2]W&qo/76_BM<3o%(i*L`g1nCQ*(Errs^gPO&:g!"E_h_8N)YDTDfYuG]Oka^om]S]-)Y>TCk1`=!
%"Ri4IL_$.,*(IjpV56c?Bofo'R&gk:Lhf;Bc'0NtAq\72-1A3W?7P?09:G)#7l\m;5g_NGP#9@&Qb7BAAg&,(+bpY2K*Ji"9*<rd
%d/Zu!1r-e,%VHS8&\Ln?cTVu-jVH_G7(NY`R;0(FNjMM&2qm??O^Y[:`F9l,U)9"2L["),qC6@FN@3d44ZArS4#0K2WL,4)U*bop
%q'pGu:_f"I@??BB,BJo[Ae^0&BS^+C\0pJIV^NpX2%oX_/;q(0/o'B*)*$X$TIQH9c:Ojd,OT:*]NA>o(WApa:XBhO;,/TV,jqX6
%(3ASCeAUl@CF/BN-jo,?d7NF^P.8PK1J5W>1aFg8M@aItVBhp)od+ZWbDW4^/nneimWMHXR5:f<`fYXfMN`C!*XDU?/1psV-q8f7
%K!''ME`-$bEDOQd==Wd6-B@gP.-AgJ.NH&`6-AqTR!S*=7B+pF$;$0Zo`SRX']kjZ6=QO$H)Xd!,u"g:o6+S,J?!N]OFpKUUR?G?
%)h=HAPGgm$H@i;=]8pd.Ogq;u#*SO(C?G<ZQ#PrZQji:aOe9[1^t(,P9ELn`=l3JR:Kg3M[/m7iMDL?s+d)nEp#KS1,V2Gq;2JD7
%mj,8iJs%CB6rcsb75Z!X27d7'N#AUnM5)ukg"r=F)qhb8kR&st]5^`^Fcl<;jPE,<E?&5"NTl^d8qa]1W!]FN-^?P%pJfAPJWYbW
%3?%Y*laU:\mKo?!88Yg,pH4MnHce6E7s<1+BFj05.,2S$&kPLr;"[O[c7*O&lD^,:@Ql8U@VF!;\,116nH?G;8-@r%)!/+J*RV"0
%GAo3&O71/tmekTA+mKK9_C<W!AW9)@(%YnY84?5mPrg>BbAuq="Id1JnU)3LWm@u[G3eZ=]U=9`L?KU<:a3iK5ui0?O):mO\W^J,
%%ZEg*bgErp7<>Tm`]ZWNN[/q)LN-ZmpF58_ElSN:^p"-L//q5S,S_1^eMea6V6#`FVcmDcq5C*GTeS3KZ#nfJ4FsYRB<jA&nORl7
%+7"nH*7DhBTHj>6LCTOS;.i]?:/Ob9CF&>I=;FP!.VdtAgr]8.\-9@tr*02"lci%>A:8g+>@DG[aQVNo=?8&NQ&*sMqDV[9k[[66
%L:l&hIktX-DdJA?WMk[6AE/k8JYmD?;WC.\2lW!Lc=1\(>uDlGa8h+3,g&)DNCc;+nl!\%,u"dq4.".t1k!K932a,E7")Ui"YsI\
%4V=F6TIRV0^G49+e4D@s#=]nPjuD$Sigufa:P3,PaR1>JZqacH%@Bd\,S_1^eMea6V6#`FVcmDcq5C*GiFM,-H%N2;RM4kK<em'?
%EUmRQ^g'h_7%HVD3(5j,XHC#j@Tb6"WMkZKEF7U@K@+sQbgg!/CW7g^DsgX9\&mo!FH%mG6X<Y8`10+n2aoa'XHAmJ@Ti%Ekt]S@
%K72"PY&u!bTW-ZX9ue0:E$;d!HZ,70P>&WM="L8*GToPG5ufih)'Q"5H';E7/GY*tRGlu.a]AEr3]8u0kb]a+LE%3P#It^B#0.Lu
%_IJ:u7'shIY8s2U0I>[[V!q"(Ohn4i1$57*mL7@BFaZl]"*)1OgTt*#UbGG2*@]$TNPnWFWA^'bF#B;K-\/)6J;LQ\aS8SS8Xm*X
%@a%:fh>%rUie]+@G%.Ujl.r`:pVqTZmd#jU[o'8lZ.O2bSOFif]GXXb;j&rZ$Aj#mji*UJMRkUV0A))*@]jQ!Mh4g-SsXaRZDa-B
%`'REI8XqNc2C1AYXH879?=&TdW2MdFZg#)5RO7$IRC4-`]`KR7lT9*^m(>D^No_1;*HgBh,UCkV0N",])'Q"6H)FhPMV4r(428BH
%-eaEfZJd?e;#"#P*Nh>YKmO;,M'R#Z<83YuN3Ye0SU+kPjJ/I;$u\>"GR*<@Y&kaVq1M+Hg>R7NfLD2T<7FD32k2d9WbY4I5$9&V
%?Kpm@(V<8MdCVL0A5/HURZ>hlUd&GEmWF/)39FV>8?ui$FU^XVL8mnpUfA1'2BlkpGMdbckW*t$%""&FPde)bp)a1l?L@sErP%&@
%N++<nF];3gh9(s#LV63gG?@r#H^).!Hf5kP)>5*l*#OO2RH*ADM0jiO0_n<c74pI.VrQ$"m[I.<,H8`aWkKXu.:mqLSCI+=bXWsR
%$n!,lbS,)Hdoe`0oVobk?#LL"p["Ue+mKK9_C<W!AW=Vk(%YnY84?5m-T=fU'6JrW?TP0.X2I07D\dC)m@k4:mL6,4.EY4nNPmsp
%o4#p7784cjq[pc;5Z9Y/rBVoV#FKjS,#C#KBF+$_&9e=Yi=tCLZGts#MA\B-&lCI*adj+>"J'o99d<*p27\nep1!9c>uW#IaT/?X
%.EY4nNPmspb@8Ra784cj*hB57k3B,A<_"U8LF)*ILqQnOCDW6A0kX>59i4Y7CF&$m]e&_`2bA4Fe(V/Q?2O"g&P[Q[Vi#0'CDk]\
%L5_$h0:'dV(R9g,33H$R\)'p;Fm[7I0&C_nA6b[O0kR5U-B=:&:[S@s_Wa=V<;KbWT'k6hV9=$ZM%Fk8<T+YRUp<JLSr+CF0G75=
%a2uUQG61KI1+,PKXA3d`j-7O<J=.fP;Nh,\KpV[<VAbX[.;%MR84:]Bn,'934[J6P)k9YQpHaX_m$:Nu^FJE0&kPLr;"Y8h:+>KR
%k,FX_@m2AV@X,A&6p*0T2N<PL8t/2\dkl?T1g_jb&L,MnWgf`Q;V"C_;m@lsPB80s[rN,;T\R!6,RB"US;a\Vp!knP*(L2`(WF7=
%Kd]Ed`mMp\Dmsa%[W38oJrEq;N$''PL!lX)S;H1[`"DM?<,KO9"J[Y19K_Z>'FWY1U)43rC#WCV1i^Ma/R/oa"/cu=1QsU.]WYS-
%3.mrB/eOUNXsAgJX>d(W`Y*8_M7=b:EcHM;j^O0hi=`M3h-u(YOlBgsHM<%[VTkb`lN_UL-][keFe&G.0fpNe8W3f>!(5WTjclK+
%ipBopRF"%69_@bR25\Wk.N=;?+;AT=jrI)G.V?l.&B.30cIJ@6S?"O-P`)s1SSL)5PRB:61D.:31*So4U2B`8B9]QQLkc),;BFuL
%,r+D:O=N,8e!2@,nmk%U*17O6YN94?HM<[3dq2FAN<MTZMKK$MNo`\DM^:oM@O-3]9#VOjQ&9S(Kh<!(F\3A=7>]3U#YpEHI!_-i
%h]1=KWK,&^S[_A'ZQh8:FC\]/h3Nt.6u!\]fm`Stpi_`DlUX/s?6D3_\?[NKb.FU/j5eCHqZ*Y5l-#SrqD.'%^<DM3kAjFY"SW%)
%i=tCLZ:<iFMA\t-S#Db8AClZ"K;*>=FlPl54fOWNcXLe2>nSBb#_B-sMK2Hp@o?+9]Mtp!OsYqXKaKOV5g_OB"2QFP%8;2\%te,<
%"Ed1cH@i<hEpqmb@o=\n$maq/eBDp<m_kY^jdt&Z8<J$jmV1L`PhU5F`/#p1T^*P[S5Rp.bYp)HQE%QmM;eCuNL;T$qYJT>:l5?-
%-6D>X<6WY164tNZ4@.RX76.9IOf4%A?7Js!8JB"`[1RHa<Sqn8c7*$<;,>g+`R9mZ-q8f7K!''ME`-$b;,>0:Qn.X"-B>Rs.8qTf
%eW!R::l<491QOD)'T7*HLghWs-g9im.&W:e'(]'RMqoZ7#u9'"f5/5U2mD;P6X!@J34p`q>!kdFT#KK$]-KkA_U5q>J26$Op)(tP
%@>85d[CfIRDLs3apO`\4c(Jejqt\&V[f)V=S.8@M4$a-LN!/YR:#D2rPd3V"SpG[eeD2BE$n&6EbQgto-0O6Od`2pjF@B?Vh3Bd/
%,a]rmqPGO9PSGNdd`Xo(>p[`(-_ElP)-#b_4H'pKQt2e[-qh+WE_25"+p=@G+ijt$Fi6ALnm\T/$(CW`G+Ek6W7n-EF@KtUM0BkJ
%09ugs755Fn'/Y,9P#KL1M0\BO`E[VN1bkNO/BH_UY.$7rdQA7NZ</G%>!QW8-sC8.Z!<3S,R1'YEQ,6Jc6,\F9YP(?,8i8>=M.b9
%m\2%_du#H>&"r-UlN3uKb6MLJWsgYI.hRu`5VQ!\eP/V1.4Z\+WL&13\qujn:>9^*S3c@3]5L/qG2JI.m_383bSk)F&o]]6FDXC,
%'?]U'2ehBm;K8$[nXDG2Lc9s\DXKkPUYLVKhRO/^`I-:Z,V]kK'6J@qP#KL1M0\CJ`DUgp2)1VK3AG/CoM(\:PgZlNo5qcNb^Hii
%@N_$ckj##jVj%o/o@1sAV<T[J@Q=2SA3POjQX$Cd9$^,RQb1Wi+)T4>#j)H)]$&ou;2*,^oJ2M-2c2BKBpD03)&25<(c"RfA4kjg
%ZH?XjqD(>F\/GL][OK<9*L+MsLkf/?.M[/!'>MYU'5n(Dh/o(1-p9'm:C$7*dRTcP#(h)OY&6jP8m*;L:VF'$X6u]/L@9#(!/^LO
%6JoFm(Khd=;B@XgX*[,pDYH/2#(h)OY&+G"6<%7]-EXS@.rLM^IePi2*f;WFI94'/h[c<seF%_0]$d+cO^Sk9`F=-+U)9"2LKP%W
%VUr9H/-]>!j"/33E>ITR=EtW=EP0V,M#.1P_D,=%;DG4[mP4Nn@PL.T;2bX%#$'WPa#L&g`t8!8`u$ca0;<'=GH]$A)&.eRI5n4u
%1;l>H&J[*W'quOb9a4E/:;>qed]Xs@nnVQjPugfra88Jg\.>5\S80;rPtNLa*XaMKjn[2-&gOR#!/eM$<&7.R<(lA\<:aS#\k8D.
%hYe?KB2J8D%hb,DcS4m.7o[];<_-[FQnt];VIssFl.Ll=GW%4oWiMqPiSD3]o)TPRe!)nk[(&fcm;alkdiHXM$0DYr^1#u[&m=uT
%:)6$OV<T7=AiNrg^4*filXo+\b[1)?0qs@F%Q.C66UhIP`R8k?-q:#PdDGA)+s[8O&7XtAlXE?g"!>KaGEF^:SEtSX+$`gbmCQ:h
%qbGAa^3d+Agb+JH@*YG/S!':><_1G50*;I8+_bP5?_oN!#"@?Q&3?Xm2\P^a>uE+UJ<H]r>`f%$F[M6(b3G-KC$!<9EtL8!]<>,#
%2hS,I/-gf)X;[LN/2!oh/O2Z;,=.hcd5N@3V6#cGVd<\gFVdU__o\MaEs>Y#o]JsurAcT.J"FX7;7e5GJiSIXDb>%B=WoLq]t>3J
%/s7Q9P>=j6""<H3:GYK$dul]dZn1@basAe%M@:WW,tZ+4.SSj$QBu(*7F9!AG,E3b#ub-ikU-)C#nPLFK:jV.LIEADOeBslBUb0T
%:f^,o;m.`1$G+]Ur-6X25Z*jF\.KoL:;"K*47..::7IB=c(J_hJrC1>Q`NcZ/=)_ld*-G!iWZsP[ick8>cs'WGTVabEj8CtA9?g;
%/A8A]@R02tI<a/!n6nA^m%Y4QA9?g;N)`qV'>qqM-h@?QIFD=[V=^b*4C,-,9CH\[(^T74Wk(;5:eEic#j+7[&9(HO7*Q//Vl.b/
%60K8cPg1]'15U5sGu?@Y'm2eN\/GIJg86-.PSGP8<6Iq>i[S[%2u,5gc(M#)0#JR'B-H:!J?kR>.$MS7&8+hiAZ)JkfQRO>G-P50
%<EE$2_eE\NbQe^Ud_aK^dD@`.kJB&Kq23W(1#QdTTP0gHN"B!U]LaV,`epgmM;Na=Oa/`2lGig00T'^4jrM'f;(Ql)>nR6*S3^.6
%,rqg'OI2qP=Y*QS;%pjZ(FS3qM72Y"SP]/^igm7(MktVU8IP`?#$"ft%O`Kl2$@ih>^3NCUcZ93M^RlmKXTqoN=^A8iZ5bbBr?/5
%g'e+$#$"fp%1&M5cJYdZWJ)-]`C85!DmJTmgOcYt0/mk'8gBPVSP7j!30b_`8^Cj`XBcG`;W2<<f=0phnh'Qq1rOO7)@[R#\sHmV
%<RSg)Z>@X1!(C6M,0#IU9i=cFPbm/K\KjXLOT?/E;j("PqN<h;ji(>EPr(5.O)Q:<Qti*XaVj2r,MkF7]iYbN(WAoVB2I,Q;,/QU
%,j)(.(;!/L'>2Xn&T51,c>gj]W76_hI^H't,$/\1mlNNb9Ne,m9L_BK,$*_XB17@:A`Xle*P&>iP@R1<3GT==7Oi04Gb;;TG62(/
%QlH=0QpWY'Qtf*qR#Zp"7#3pWWc3i9;HY5a:W3_^(l>2Zj5%^0pB44LYU.RD/IkWR_aMJfG_Mq];NUuZI8cAOar6IilK+k0O%PiX
%hWM#b4@.RX-A]Jek)i>#VOLQ/VPG@b&YdRD.\*6'<7XUi;_]rFN)\<Fn_NT8!-'C5'[B)A+;JP`b^I$kJ@l'tg_1k!%'%1fI;DiA
%adj,%E*srcArcU+.-@+oF8)dXkEHoP6p::(W0hERKqq+7OTAF0;j;@G)Mre(je\?*8t$URkO$JU6.\%BaMB=fd7c^#gJKN!j<5ub
%U<]D]S>)NQek":hYq23"<7JkVS]=$'hCNUEn^h%T`C!-doJaP[J+:kb*RW9$I7"kNV$f<7'>`&imD>H=s"Q@A%YR26]C69+p1;#8
%N)el3p[<]tUi3[FOo)1#ga'CQ_nCm[3;3j^_Q0lpS*sphs/M6OUg7nCs!%`\6keoXT;,`+=8Z2jbAkTo\<,i`Pnt6PPDSUZbN7=c
%C$6[.^A`8f>n?<5lZo1LYDO_uEqHgWC#88sbA&-k`/I%D_jNEro5fatrJ/G-8uT16&VGF9I7CMegf<&)'(@l]7"SXmmQcPFUqRX4
%GGp;2MEWs\&=)776qZ7;o)M:nW*YBEd)4u<7E3faXVR"teF)J5Q^OQ&>F.#VAX,4J28\\Hb9cnCQIAdJ*/>kgaX0DjRV`dhZ#(C>
%]kLZf57=1Vg,B2iGtM31;l1i]W-og5K_f_cHDL20)t>lE#tkS?+i+tA09P`^[;?s0Z7e&q\+h5c'5agjdleYiMPN6fVtX.Rh'(:X
%*8`iRr3#Z]e!I\;\.h#E[!2q/hEb0OqM@"t9D5Wj#*VI7OMeZcE`ndN[WGmRS]J!G0kL6P67s:e\lt<*]h';u[!f@37_Ol*N2*di
%5:ktI?P>4Qm20,H[h)F@-?PUF3cOYHq-7\b$jQ0^#3t6ERfnY)fg".=5@$CDY(YQZ/_!Z]X\W/iN2POIX=5mD&7N+nqaH5BPWMKg
%EigPC(&59+FSZsj27,Pl2OTBnJ[a4uM0cGeOK:P=e)"q.YG)!Xd:>X&N3T,olT\WC[6B>'IYHH#HmcAdhu*)lJ+8:Yrp=X]rUIA3
%s4smXnE2b1*n\fihNI&BS:C.mkC<NP5Q(5!s75;b^\m1HhS&g8bMW9tO2"$7^NoG>;"?j/+0V+i[q&S?Hs='WCHZY3L8MKW1f5im
%k&XY/?rhVuT%i,:cW<d5eWP?gA7$qA:N";*2_-Emm+J!QfJQE6F%^6=-an>:2g$';f<fE'M?nXBPYu&#eeeA"j5;_3lRn$3Y!-d[
%`TSm@rS+XPTBY?Me#?rgJST$>@6)`CU&,q?4BsTb$*(N7K?hcpVIu7/KqOk#ch5'..tk;oPl7,[mX</>iO?KR28;,\ik%?@_u:h)
%.Q]tp#*(OI?$b&\m"VcLRr.E=D>SNn&eHpU\q8\JO>ni%FpiRqgG%KehBa"ZC4pj?O>(UN#7^P+]\L6_<_><gpm->m?&*gNmN1:R
%](&.",5Jfu9[!>R?ZB!5A]02@b][liVhb6/H"a;;pS\hh`qia4lG&TP9O7(o@5Y=_<<]u#F`tCMqro%ocX^gNh?7'14pong>g8<5
%pJ%g00oG=Rh%NFW^`MLHcY0;l6+HX=Z%.6G;jVn6bJ$ce`u`cHR-F7%4q"!/]aEo*!FGFYmkT7eCs=mt\u4/ch>a%NanGcuqU2Hl
%9H+:2/c-R5X$']lGF_Br\0dXi*de&IL$P5Ceb39Lhst&rc2'%kVP=%Nl6H'2Nr?k6<;--]"I9"*s1p`+l9XlA]7EENk``4t1Uq>b
%\o#m`F!6/Pr_O*cn?VJ7Xb50R\;H<,jhR/Q90mR_JBl'_PpY-!)\WNdkV)_M5*WD>N@Jc_&FepR:k+l]]Q9^3`45ADmRJ[TLH[fb
%':Kdjf4g":Fl*^"Q_W3"D"+&`B_0]qmS!cr(Rrc5D'%@VkCS$tO$:QYZ*=UD#@?Gk0\T%L;5@dH,#5lE"t8'.>LW:)8:Gl2U;&7X
%d==ZQb`r@Z3?S`(XfHpc6iEq/GBC$X<8:44Tnpnq!>QV1L0+gglZEZu%_i9ORc^f<DR>r=aj>E]eDl:gP3T7'WbL0/4'J\E`W#7i
%kHarXaeGE-&"G-^CGKZr.b=W9?_o\a]0Z,:Ya$GJIA'V!':@->Q-5;?J#$#k;b!ahl/as^d2?*T='q4T4li30r/jXBk<*JaCp!HJ
%Y,'B&qEQGaU[&#)?,[X'ma!>m(^$&UTdT!MiX>XZFb!<&b*jhXb\[,,G^kA@Ha]Euk<IcDD/W6<eL>OVb%d+X%a%B7?V$<(W*/!g
%$nenul\"n92FeS.q$M6.;f[.sHsB_Ag+`a=Foalr,[aSu'a=Jn5]<On8XAGR%V4L`TXR5.b*JKcoEV9R+(<-$"^_N\*])K[<Lt9*
%KP,2'jS,;Z*jjJ,d6TuWeYG=c7NALJi4#%:ZPTc+%Wouj(F'.tS--@RF]YO.d&f\&C^u^t5:#*A,Q!h%CKD$C>;<Krnr+j\#`Gs(
%bHCN@RS+<%TC,tlDLJW6jk?j>!B1WM8F%%a*N!j-\l]3Ke^Xm:S0/rZ"p/YodKam0E!bSYh?ATN'Qd\:Lit>'CJb@E8ZKJ*9HRW2
%CTL_[5fI+=M=WQ`KspJ@##Q\Om$fr`=hG&OKd_qnCF+BDMY6Rn&+n`7G3egnhCjc3U;"H[l,'oX;0:KubAKA=`-])%DI2f`JooUA
%'\T\G]#FBoQFE>)1((=W#5*GNhL<$eHh3l$9u#`R/R%dD$3/R3h^R(<')Gg;5hRZ](lc^^PoE]r_i[+qD:B>'$rpnF:+_7>YGt11
%lF0.8;,2hV;_YZ1/kl?5F/21(?&ccH+1lapUDu>'gT`[:AQcEBFR)p#;n>5$?/%Q9bh3,&l=mi;9:)n#H6kE9k"!&?<NAJe8)Csu
%7/oh?no>fL^%'S;$:so3UsmoDWfX3@o[)nXkdmi;DjNEHL&CL;C/q]jX(DR)qA&@kl'Oos#1D,Q2P@XN]<kF]($3#CQsk;bK=]hs
%)P*Vj2Vt\BB8s3%531I<QoeMV-0T\mH-LY0"gPu/#,rbI1na:'lcjBkY[4b`diIPQjjqUkhUXcO5h53Ig3Br).2]2+;=E>.CQ?bY
%4T70LTMM+ppoN<;[6r1=<%-<fcY@R*-F8+o9os;aT<qn,.P$=hJuh">E+X@k/iQ7Q`(W4m5nZmog9b;K_$3rpYS2[$NLPBj%26!H
%TPFG,enakaQKYhr]CckC9[[C1j]m!KTq1]@2HfaL<BFa=Q4J75U3!Df>M&J=ZjB>bD-UqIN._+fo*Ap3gU&WT1iJiT22_o`gb:2N
%`Oe2mA1Gt9J:6tT>-sHQG)KrsQc8fR&+]ZpdLS%u=.=KdV16o0Rm624YJGjK46Vm'VL,&Nc)^9Y!o:;"BV3;Fe^,`L+PDGJ-QVF<
%C:5qP>?*9-,%F9GmbL5<pA+&!Hf?%tMbU0Ym9?^hF#gle<"+HFK[tM$06m+Y0F:rD'jZ23*@QNqaEtcKT[IuZhS.5`RF$NY*[1d"
%V7.o5.G]&q8uLgXj?sfO4/mFdeOkV@>kG3Eqr.>7??Yd!]m$!(et]2L(,%172dk/tW8)icKn4'<)sOfQ7SZI?F1K5pe9VmaYcbFs
%<W<Eqlul^Xfd;'``M$lI4+U\'\DW>(CVGI`'g4Hd>DmXC>%AQZFn_K/K<XPuf[[&q`&;-\d$d`PQT0H(9^d.BC@/4Re2aX0?q)`[
%Cet^"3jAk3DO^+.YFaGiE@+^Fif^_R:g_;PiO@D&h(G*Y^_te)o@r$`pns`p:f],^/itg:Ri,iY<NN6qid:4[p7b<oq?`X5Kmbna
%kfeA%3O(VAko?1apt]Pq0R::@eFSpH!j5.p[Do\BrehGkbtFJ">VQRjhHg^A-80k_d@J1Te#XLnVcVXE#MQ]6LO/,hj=mH'qeb.b
%@6)tEAXB0LEc*tm\B(?dDO_,0HumsoTB<HZ_PY[UJ"]g)c/ts_9O)-M[p7/hXT!K>Nm75PXjjt4WoaukYN>[^L;gPL$f)_d[G,+_
%s3E_\r)TruD>s%q-0>^[2PEdNfgfc"C-Hk#Q5/?Kaa^&SVebt&4dWH(HF?kg^jPJ&LD,<,Y7lOA4#+hFh,3O,5*'AqSF1lSK(`\%
%F5MH>H`q?hJ"CAn\a$?$>\bbNWC@,Z.!,Y(S%@kh1@BQiSZHu+_A;:Ail\-(4Hf.\f6XGjhQG_p9b.oK[<a?ujLfHhUAqOXA5j$=
%n1"T_ZB!#_L*0"@00QBiYe>4.7rAVr.sgCgQ)!S@'VK5%mCJ<oWo21MdbEfAgbi9Z?X0)S4P@+/3qeVeq`+9$X:=*&k>lm,g\cp-
%[gmUh5Ai9'>r:;Omq[\!,7&&9M,)jB't_#7h7Rn?K.Im!V5l,B\HUPWVE09[0#$2:C#:FAD$oNd6)q=1Lk+$N?K#E[KWTE4.3Dl2
%<P&9f4eYW]*@5<ZL+=nfaM*#Y/JoIOG,<oR]`n"Gj"g2*B=sit5<M\`^u%O-J'f&",@n8iFu8UAf#Qi0f3/WH+XJ_Q`NV>f@Y''Q
%dJG$jd^BpPb(H+F>d<#nH[^40[Z?DL.T/t.-MAq75#EnTP9"k\p"SiP&N^peUMF7[leARe3.Qo031fNA`P03u<((f5JjQf=*2'q"
%b:E6R_*4@"`6\/fepE2Kl:q4f+.XH$:*pg5\:UdFhTZ(b-@H@u]OQ[>rOVib5o_dF4o?)A5L=UnmI9nUI7I$7V6/=n%reeQs.ZH9
%q510KFbC?6%ml!8mOne+g)tWXc/P<GX$1=:(!V/D*o[R^.-Lid^0$od$eP"VU+n.UAu9#(k!a$uNmmE<We'ISpLS\M82fP1$*0ZN
%3sm%LWY5_,AWjL>m>46TialT6l62JM)Jkk`$TELVWL##kSfsg]G`&Fuhq'Q8@D>o/!p[&;p1r&]haR".if&<'*qK4tSj)=Ma)UW^
%'(qhpb"oE4ZRpHBF>Q#h9[c+AX=Nr5]T&]NZ)O+LMKSpGoM!9h'cT%M]*B\QU$_c:A,To_qk\.i_`ced\S7-c\tPK`!0YHsqTS8O
%c"B4ZY-S@^bu'Zl`sQUIGE$qKHcJ"1h2Hkjil4YWkF3!,Hr`?*VpF@H0A-?H.Em^$kNRjWa/-IJ0%Y&X41[uc\V0-9@QuC7pPo2K
%S[=G"%:/'Y/b4GR]e:XW'Dk"#?]Y:2bM5IfOR!m&(`'DlHbN:QYs3102nTRG"og.IMg'p%[r;)GVbKA,!#a$ldB!a8'JBqDRPKBr
%\n!',[_\i&-?%]39u&`BU*_'#.;c0</lfb,-oJ;1Km,e/@B4mZq@N9"T?fRcq)h[r="H4tGb=%<]:*I#&?He_\h=b:lb$Gl]j2C\
%<NagR3fi*i;HB@J?ar;+q@.I)dq;+qj'3&4)Apcf.NZF>8K/ja7E])e]%k*VkK;!L<>QJKOceb+Y;\6-q!'@E]kjD#;09"EKR/Ap
%O4.?B];O%h2YQ'4a;rOoKCoQ<jfNLeL:lsH8c/>;\o!HILU5VD\]X<<&8N0gR\8EepoHX@97+/6g@F"oU20:,i6/F\LYCGb:#GC/
%2h'*ejrX,eB0GO0;b*,@4*Bh$7Ao!,%?^JHH2!lEnq4[G\C4DM!lY?9lr>04-X%n,6;NY+a8^CJ!r2i%JVU.CmF5DtI"6:G"d*W\
%fa"_bO=ZU"?dV)'Xg/:"\-1U.VN)p`"sT;/fG^N8[cP+!eF"jqjHl<m?_m.h>^Cu..#\)5CN?P'ZI<ZJ5n\7s8U(&uG+;<G06'IT
%p.*sA<kZ?!70o"j>H!7f"1E-7A+b;!*r[K^pA^snb8O$LD:b6^XnnAp6?`2*k(r*DOJ6dKk>><JqTRF+rY;$gems%#>O2H^I?C?n
%F?-O@lDIe"cTS"uO3*Nd&Ahr%(IbNJfrVrk==9[V:4n8<WSt_p/Zmk&R1_o`cA#7g86ZnbSH2ZnBpUE#:L*)uWpQp+kfM;.@OhnX
%<?CkF!W.I^_Q3#=*EcuP$Jj=F!;40.=*VUrA>u9u,A(Y=J]-:$bOpE;R`pc^(Gs0&8<:)W=2*o84m_I/&T'SX4R>VS)?en+pR1-A
%&ZrLFG/IIoZo%3bqq^I)Ntp_+>l%c84iPV(;k_N&r9bZ6RZj]@Zo()HZ\!5$?$jY=g#\V;dD0`GXcV1.dH$7Ejd1]UOcG9h+c+V=
%;X(pJ@@^WaMjpZkGhp=+WQV@=I5A'\Mc9KKm_U.&]#JkBrIC7eSG")a>/g6.\?<D#L9R$na6r-7QQ0pQH?*<'?JMlh!f:\><rd2J
%lgg-]jiUf?=7_f*^7U":fla]^m;82<hEIF^:O<*lL\Cq.2OA+kk_\X"LL(:$X]e*UrqG2+5NR\!j?qH]1A(,VZsR[SiZ\62##.3B
%\;oE%1n;@!k@=X2nI=lY#cP^O7.[R-\o?n[;Eb/*a&2:<iUF&RoVAqmghZR9CF6QX?1j9`0=Uj>cmrZ\O0g%c"XEKiUBd?<ApgTH
%PZS0f\NSJ6'\sJ8R]&T?515d;Zim>+C$qN5!@FBZ2WJ/i#/j<H7DE3!RJK%`REg0GMr,&"*ZQ98I`umqNd>YXp#pA\_'.H`UU'\h
%c'KL3C!ZfI`tGim%I]F:s85uumtpo1))`]1ZA)WH3.0KJcr^a;4qB&Zn26[j,[0Rr#eo!#X`Ba.G9r-;!ZhS6Id(7*X%?/b@asfb
%MbD.WIF9-46WloAF"QSN.a"2-MS=Bo^"D$1VUL:V3GS!/4'e=h=HY)!/K)tL@`@LWJ,Z-3P+Q6,<HiF'S#n;M##q&KJdLB$kq5Ls
%l\``:_`(o2<o6%'$r='NS4AM[[*FKM$*meCZ<O6,Hol0mAE75Z1A*QO`rs\L)bR\P0,PnA,CucJZM>_"H?N58p"0\egEUD)3"FRW
%Cj%OQ')Q!rp^JDgoKiGN"34O1^:-UN`D_g[G9-DM`4L*/\geWOC;FN3.bC,l4r6?J>dWH"XDYK*Z*LJoEJs,/:dcF9=!f[6$hCmq
%ddR)"n2TfE=7:3c5aP[E"*]ru"b>il=^I<V>>VlKFS]GP=.:q2IA"i3Vi`(V?J\%53_YRXh26u)MN3;3&:6QY*Mo(YFnbjc;'`6^
%Fkf%#/GI?[PYre71?eEDEQL0gGf,HBJt#.3N3>F]gsKc1bH+/R&Q,]X=2CqdMk*:B"lTs0#=M?:LV?*PSl.90OAak4arYoChG\C8
%BtGkhPZaF#gJcb\IYqFqdqR:;:Vcn,:UZ^G3+acXf+.Yq7c*p`A^(=^)C2h]c625Kj_CiK:#feV!.h9,>JKL7<=^UQgVn>I>HU@d
%#Z#/Z?-KcP6RLK@cOI9lkgh$>'.Ub9@oJ!)*YtX2./9aSg@`fC8Y&EHiO\uragAtJaPCX2BBaM=^[ES%\:h5DTYmmF>Z[Mclfh7c
%rkPgKlc\JQA*7]MBW]T;gT%bTCfsmP>4.Q%c9CB=8mdJt2*:t(r@js^3n&P4KVH^:c<3J-4?o(2mIO\7l8nsg?iO,E\)4l;mb?%D
%L`^<:A/8^la]A5@2l?g2l/k:+mCoO1ZJPB]G!oBDTSE1KH=1%jiNQ9-Z/a8l;3TfaUUJ74Do39b<Y^-"RY3^N^!CTmBF^uT:adj^
%i9q!sMLpS%`qAr*.#O?KH<[=$,nDksBQABkUQ(0Nb_#7(`2q$aU/N@GA#4I(X_Y8(L?H+:#Gb\OlDUnhRVq5S"FY]o42B*U47iQW
%FGA7l(F1+)YV*<DeYf[63#B/oLfhTImb"W5n3YCm`@77"OlQB>gUiambDrC2\)dQc)fLgSjnl<9b92?gih9Kt+bZqc`dk'Oa9F3p
%4o%NoOXKbW;q:<9ma3RtA$s(_-QeJ5Ocbdr:tGlD)I]JqFSoC#Tos@'V5XQDP&*FDM2"@gdFM2qWX/W)bt*#p$m.8gHkIh+M:qmH
%Ck"-NqhO8E)Boamq57S[%$,i#4ue8O(k\db3P^C9%`NnAD``&l1&h%YO7(tF`kVLo@)"gKp[GX&s84P<iHJXi5Q2m>(rgEVKo1V6
%6>f#Oq*65LVVVeec_!b;:YS8sXu&X2#1d-CTn7#LZ83bS`L#@`h-Qm3Y"#9N4]$]e'D4U:m8O"i)m0WYA'*H7/^BFWmc\n_,\r\F
%Z?u),_*7/pHH-1bAeD-.5_j7uH!g/K!)9.Dj#km,aku2rFI^(6=NR!B26*]q]UsDaQWQ2lP_?:?\8L\[bp4<<e'0.a;9&_!h-,C^
%>E47S/cKKQ]7q;cOepFeDlZlWOPi&QWJ&qTlUH"QIYFIQCMUl(;n).h8Xi5V)%jM.kkU5IYDYHhW.eb,gnrO?D,^$_A4Yp*7l3fH
%"#c-i@ep7^FtfHPr9YIkch%4Re#0[]->W$>jlgBIZC20Z5\m;3[1Wl:e]l..mEHO#Q$.oAZ6N1bI!57?78t[t!"q_ATt'HT1Dat(
%0.Ph1C0]X-_Bnee^LuZS]$&C%aR?N:`]hR,($%7#b3)%1;KkQVEG;^gmQ:q&)P,=(:PHf3j^#K*N#$SDI"r,^b>I;(T-X%5&Wjb3
%:/Ag/AtB1)m\>=rWG-B[gLnotTc24blY3[ITg:sKnP=taGioN=L9:=^_s[@.-W;Q3M&6mBZpl?nGUA)Y!X8s%FMDC87DGG&qjAi2
%Au,nC1%RD7^eI`c@raq2NB0(V6'WlD"ul&(*G5Y#O!/1h5,4dF?n%sdhmE8`VnDTtB@ul*HJld,C@"^6nu.tN:l-_8qd^=*ZoK;H
%fLsak8^/WQmB_Y)Rmt.0$#Ie7H=50/Qg]5-@bV<[IdgK/GO:5^a9cE.W"_1=N>hO:bNYOEf%4,Or>`+nkZtg(cMh%8c%_n\IfLL)
%88";d,=gOs&<k<j=V9NE$T1@CWMd;;<C?=gqE5;4bOKaphsBNtnp;6["s,9&Y@mW54R4!A1!,`[*"H#HEep&8Wf4Z,"rC"Fb?4e.
%G!GHFDta&ijZHKrou+eoFH)&<o"YALd@"]fP@U5XT7GSiH$qCF[VCP`lY3\4NX.SUhk!p+Hk:gRl0m?>Al4eF5l<q%Jl:<VWi<@]
%7at;_Vb/AoECZ)j^<6&`MDDHoF[_F;`Xdd_iTLC.0(Rrj@k<@>emTMB4e9dH''$^`N:)h;_p:HXEMo"O67+Y3VI5Y*1H*S9`\7m9
%&k'f_THrB:8)YpORQgS0a'r2/A'GFnXM^VXpT<P2+GpV'h+ao;N$VRLddp<^JY>AX)4'EHiE2S=r>Ke2q'sV97+>@]1M=!g`m#qW
%L!obV$8%4ETF57(<9bpj&pJGl8PaQM;WP,:F0HBBk%EU<KHMUq+d?&!=`PaQ,k$FkhqD1EA%/Q4X#%Cj$Bab6nFf\]Od&?ClH)8N
%[o?m(;Qe#,iOG=,=$'-H,gPY2#%itC71EWI8iCeE[fqbi[\Q2^nGP_/ZNYpg"b_skp4:4ND-kREA>lO>9.)+kKemE\NBrnJjG$u:
%kHftp\#;mTS;"Q',BB]CTe`*HI2a)u6#qQWdpB-f.3\=D:f?\lTl@)g>OBiFr$5hcQIR1$fg]kXcpnG*Ziu0'7Qh7,V9#U>6DWV9
%Wcj,KX"-1(BWbN[8&'2,Af]o?K>h:m)4(HEr+sM]o=cj(`_ki`Nn5;r-q"dkQ;6o^EQ_44G)@0K;p<UB&FqNf,@nfb@&UPhJ?Pe,
%j,jujqpb$5Nmf)!gPJ['&dQaP0-+p=SPm%p"c\>1BSeo3*PRsm,UkO50%PS3QqVV(-7D<j6@;o3W-G4339g"nr?K[#)n;Tne*/Eq
%ruLig@bsS>*UH`\e8ute%O2<4a)di89$4=Kks6?3n"dS`.#N,Uril#l*6#e#A:uSi^^[+i03Qj91jR^`m>'[*ZU1IaYk3K%q;0h1
%[-!BtiuH<)`]-J@-1A+AT8UO:;b$+Q$lcRXeUeiYFat)kkEN+$7h&^fAb?>r">b-IR%Xm..T=Bi&6X$$=Cp@Y[CL+uh/V)NP6!&>
%d*E>HZIj0$9C[B[QB>Pjo2;uBJIie=f/+,!^V)po>LD0m3I8(%DeHM=+LVPK)/5Zg#:bQlo+:9i\Y>iF\X2nO+B]mNcjsfk:ah`$
%m"mn,27K:>F1?.t>1ZLr1e/cB:)!l"@2aCE;$=1thTbBi:DcG?!j^3I#VF>a:D>D+.3>*'jI)Pi&4c>:9#mj]dh=CYolau^AU<0H
%SW;kB9b-WOEgAAB5"D`/lY3u_0C@YEZ7)(J@_qBAUt5d?bd>W*7o/pRKY-]=n$4OF/bO6V-Vp7OcJ<;9"MM^rpRoL:f]NWe^=]cC
%;fH+/-*Q=1doM!o?PBIc*WUih6geV-Z[;`e;IpkiajM,9gW*gf!J/b!UT-m1%D=5@oN4:I8Q%`?>:1@8ULB'>k]KCXd_'7Oek(E-
%Z9PFc+bUVtOV>FnXDNjgq*GAQjIThI;`_Y$c.4/,DnVj99L>$TZ#&B:C'V=$b5DCuOC><a.6lT]pi.\!6E`JNhMqI(ECLtKK7!_2
%pSa3/$eWKo`t+$R6krB&2;,`(S$hAp&I]@6:2<ut*#gl*;d<0bbc3V6=<J+8;84u18DIbC)28-9'`)(G84.W^,AnA+&L$3T1r1Q1
%Y"d2*4t'f%*/KR6nVhWET4f0^^A7VI5Q'mK0Q<@],l)T[Hj*<3p2'^%WF!%/$V@K?[*\3#\@8f3CjL'c)f-n^3]M$8)ILbsf$?FH
%[5:\O8P9l"6["&!^uMgbX:T!2VK]PDQt34_s3]3@Wl59J-S*-_8;e/#"(,Y#hZH;ME4A[rSKLiLJq]N<(kaum0lfXTi>toSF<Q<[
%Z9U=:b:+H]XjDJ`Yu1^nlMI+]oQ_\Z19"3@S5AX6`&lqE8Y*$=am.`f_.=S]arL0I=\Jm8Lo`R=?VtS']\>%A3m_G/-bR-6aKZ%H
%[`TUDll<<MnL9*]Yi4Dc?G:abcV[4.gcI\lm8\/*D$\kECEjPHU8`DQN3LG`]m[e9gtN%l;,M,>Y%Z<)BhN6?fFIYrV,r<1gW$N'
%`t(<?_RdB<[m3U$$T\MPS"$aoSZKd4roHV+MNn#1.)OG`An!MP8f<@S$\=Aen,]Yu37&#O(UQ/j6i?+:#m'*KUtZV31],SP5JD"%
%9P!O/Job0e969`Le%E=s;0=OcHI"i?U5jqDR;j,K2+S4=ITQ`(3+p=BO(;h_A6GXRdp*HOK_TM"^A"S0qsc'XMn!g=S+$J:IJ.!^
%D<b"jZ5a):L,?'n;Q*RLTu`=@IXBI:/tRr`Wh>&.[m!G[i,hHRl5c$c^[&A!hkQ@3V9h+e6k,@6W3m<3e#c9P>Q=*Qe,UCY),84T
%"o!T2%>B%&l67g;AG57/PrEu2c"^s!^81bF*QmRDXbA6Rgb419/ch/^5ehti%D]qI[Tg+PUp55G1"66=m@(6V"Z5HYrMjVF:KiEt
%6(;A<d]L"@[7p6dkVe@2Q$?I>718-:jscOrA6^LaA0EQI]hHkb(71Y":E+QTQu)Q(>s>p_KZ77iE(hqt=K30NcP$/3ZkIE?K&S:6
%9JVlblISjn`Qe70jCXMYRbII&PcBp8K1UtjX@SV^7uquj1pEZC=gbm)_C,*A\jfR=UYi3o2LALI@m#s/@d6,tH6gOAmP5sJ>"9br
%<6bO*e4848?H'bc#"aN7kgrdLa;`W*7mh3_$OVXRHD_$'0U\"^6-@G^Ee?Wi[$;g9W9XsUMo8[KM^2+p#+;$)6S3In7>o/)8LK`H
%8Go!B/jYC()+5ZJ4_Tit_W2du5WO=JPtGYS*V#E/S?gt^R?g^0o4(ssUhCS_+e^6`XC:hHr$\/EJ?g5>#''?+cfKp7GfmUNC1KD*
%",k]JW'"Dm6+g]:I0nPhbu"<FfeqO]gE-o"_8L&ErF)=:90V&EonEgW98&Xsd!#j(UpdR&*lo9cK-6^IOda?+>5s2APR<[H5Z/(+
%85=rBXfD?*d,"L5MLgl&gl;,R'+t^76CE#_[V06Oij@(95gGtgUuDIQ2=EE#Q#qZ>%TOgI.<cJ(T2qj%g[$k7F:$<]q5m,K#XgHa
%A![On/(ee*2A6BE&4h_.iE[&6"iOsE7BGb)D9sh/7Gd!]r6E>fm<;8p_I+I-OIS7$h"B`p_8tC9Us]LDb#+9>fNPQs%lEJpdF(T8
%.X2+$NNTUIC+M$F[2YrA_*_,_-o*)QRao9D[HflZ3h:8Fb=#"(q<!GH1Kj%4.6fTJMkGcBBM#\tI-A@eBdTIW"A=;BF)u?cYR/h2
%8<V]5/=9TP%13+K9p-g)S#7[7&G!o9Z66*HL=TN;N?Z1OlFN3k49>\0j!!jDNVJq+<(b_;K:H\4Q3]e.;KAG0G@jXefRU5kP'OYg
%)gIY<+<W/s#um::Bup<l]e[#*MhDM?$<dA"*/Y6EEt0U?''?ZSPEkup3]oPG$?CI89$X1LI$T)I,L2=NQE(8n'Jl8r+OR@DCZ<p1
%$`HX%opS7+0$klBY*`)o-`[eb&r/E@e;?`NG]+]mF=@p%i6,&&dt_k7;G]t];O'm@9/4R<d;=SHSjSMRp6&A)03sY$(68GD*3EK[
%HiY^6g4\csnJ7iKC0@a7pgFt5A8I([(n+BB%USd3;1!E&kh-J:hIc"<OeEUgV2)e::e5=U)NY0'1t\3!Z#(D[.fqHn%8[DPd6D2n
%j;Lp0MO"l!TkI1:\^dHZbraAH'NI\fef`>fktk%]7+njem9?F'!0Of6J1GZC$W8\Y_&q@a(Ld54HaMp472H!%4%W$`poPM;!bL%s
%"-ORer)O5].]d1t3.#(e#f^.>]'[e1]=DAQp<iDTOo2F=LR+iOXc\]bUY%LrAD1B9hgJCF2!C#iZppmBedW@cSL5H5Mqd;#T6,T@
%P53%_5qZ+g:iJu]CJL33o)e/%cY\(gQOogf0.>[K8XBI7(YtimMlMX9aY8CW^H)ngU^;5F`MCO.*10+!:Ru(t\*Ts$8@CPa,*+Q]
%RN.Em>.Y8X%$:j6HBm*KXQQ'<U9jp#h=aIEOX&/Kh9?rCW&Q"Nek3*E_.n@OTK2r2XjTpL#u=oY]UOpMOLoNRSn_-Ho/TeX.-S3J
%qn0NOotW\T&?7-3SR,W###!+CKEumGJoMGW#I"F-5Ru+MI3*P[+dK!Tlaa2E$Osj&eM^GH-\D>Z8^@uEgtAkFCXdt-AbI'Yi9#^p
%,;a)))ln*aa[*[Za+f8+OS19YJM;7LPoiVgJY"NhU=H?]ik'pH^EJ#T/0[6!c+V(R8-*HkMK+2LVD#;[:jP]@E@,T<1AEgPK$5Ds
%<?\%mjN2.*V-Ff1!+f'^P@<(Y4hFIMEBq2SJ"(2/'GZ_='t)g'A/sO[//79'`m8L>.XgD1,R'h^.L2<\AP(c428;2Fd[RpW%Y;Gk
%$M'q7_k_2*XOY%91jZM`[,YWXQH[T)fni.P3).8Y1`f3KO8A#L@Z'%ljc:B1])?s9mCFTA?.9BM\_)eIUm[Q9@t:s.I^MX$kX\sk
%SprL-\U`C[,?_2ma^eYpZR$R?+F&8O]ZT00`M_(&&Wn,:M,[TRVJ>:081%Jedka,3Ztl@W4dqd5%:[iaCr^jqkh#*fEmR`>N[b&1
%YsajBG%!W>lnEqAoX4Qm;'k>+-lAp#'Ft",S1:^KO+n#%9jMp=&66P='REeq=`34;a,J-cMf-e0XdC6M53!#tQo[pHU'X@F2U5D"
%?2!F$WDZ^&@`Mi8gZlH2R$rO+7/aQ[a]+t7\k=g[+F)c#C$mR?Yp`iMG3u2$FDh!0RU.W5LlE>5XS8DRC/nX'?#&SUG+<dpj)IqV
%g7:L2:g'#L3cpri;^#+-'JNC;N9e)'ZJEeZ+,d)g-rotdniFP-S:F=CB7UncB\q]Z&nmu,AK2%>$m`ZW51180-ldj#n7F);Y>6XN
%d12u:kaGWD`FbkoOpC!i[#38s*2!u$4.%4Q06O834Q7:I,B[m%B3e'q:AM>>@Ub!SRHrlTqs#H=/:cr/RX!sa;rn=!iSCW:Tm+^f
%MGc)CLCC)H5#!rB'P1g;W%&'$V*Odn>HdK`jLF=NAo:\COdk%id=P/6H'HLG5!TTK1*,sjak*YrU>?jR4)YDTfXoi9dB??QQ^`pb
%rotr,,gZpU]Mg4IUW2S2Pi`:BXj`fE<OG7/^hQslW2T02<EC@\Q&X#TM"9kCg-o`U"mV9-QK8INT/GJkA(>Ta<V(:d8Y]keEi&be
%Dd2DW,VSf3<58@j]OjT\Z_Id=6I)ggl82pD5[:%O0<k:?^7/RB'#;;q6:htjS>Hf2ef'?'CJ<S'jOu?c9LZ"8M#J<p)NL3F2="1+
%(]_sdBTTG?l_;4-Z67=e().8jElXQL6",NYXka1"-);<ojch;L46rsUn>Y8E!J*_FeJn@o2XaiiPk^pl='-ETUc)@g3.Zbp'-k&J
%Fs]qE%ZU7MD/cp[*(JI)Sh&ObPd7If"SQ9rZ?"=>d,_N[EkL\Wnd`641CBtU),-Y3[F`A71]:0j71FC6kn^BWOUie#pc_j2Lc*S^
%\*N8q^(cdUTo)b2r68a]^$_iNF)@Q#$RfhGf##hh3I:>k.jk,tOVZ3a^Fnp+dC!iTe^/QQ>h,<&bdt.h]!-bX(2m@<ILKS*[P?R=
%m4m17D&7:sR=b\sTZ`3G]q(o??/$<:Pf4C!h2rZp)QdNuWj"p*VYZB_bI,3&M+RR['ZS_*kop18a;KATMQSNVUbhW8AMiWbh/seW
%dAPI`?KX*ok^joGnkbMsUO#t*ca7?oCD:eE?N>q;L\1b+n[6qAdRQTZi1/#D#UkR:!6Ua")?+&-l).OF+4d6!A,'o%(:($>:X1cA
%'CR-LVF`5/q(#tiP]*nY!!*GY-pW0@'F:#-S?5PR61QU6F)<9%+fa[()mbnV#?5`#2I@qT"7;O`&h&30m2ZNJm=X9rd=P:Cn"!dY
%E(G]*H'AX<C5-lRPO<DF$CSHY[)*2e0_-[@e0QX2L\nABX`C72K6k9t7BQO^m6npn!,,UEk`t:,5R/NB3\o@A!akSn9C(7;di&Vp
%1>P]<3/@>^TSV+t;MV]^^4l>fPRB*KZ8+e7E-G8?P]\e?Vs4l'TiiDbV1mRu6toB!aO/-Ha917%R(R>#e*.@P0&@H/eL.ETLH8#Q
%MACUF1fThoab<!Q,Y7Kd!PU;aaesM('X[,&^<Y7so!igGW8$OII;>c@%OIT\.I@lR9/jVY_U@Q\.ZY`<EfOC"Bpfqm2;X!P,]$)=
%ZmE;3b-Tq7"hPO%B\$5uBs&C`jE-NTUkUaoW,&$_o);TkNX_*$10VeIZQ>0s5SJ's:o4Q(_U,LJRY*S$<55)-7Hrd:nOh8l\fDe=
%P#'AV$k,s6mELE.$]^d\P':[A(>R\_=R^dL.gq6T6"OqhK]I.!q@/XV)Ti(9VS#I^H=Go.irZSg-CQC0G>sQpp`=<=:T"<)T$dJg
%p/OiBc\b3:]nlk(;)?r-%BPGtUIf=of#!GbKZokhkTt=T$<3`U&Ug=nY*le<`-cpnj\cOqE9Ak85kQ%8KBfeb9`s5Z@*QS,=_>88
%bmE)LFdRTLr.7)&P4n#Pa0DAo,G$O6)^HIPof/7GYCk?F:q-doBN.^i+H_t.(oVaDT^!9DV5\VCW+bHl#ifnJdr41LQJ%+*bQ0OY
%(Ep&++Ujr>*jBBJIN#(OAS,"/#<R`E#`r"Y'rZBR[oM5[9EJte#>1c>UVH(]"<^a()6DXeYtrD`A,_X[?'aC<SO.Q7nnNe&C4b=]
%MHZ.Tr*)ltW$ClAk4RT1#<9rkr0FO/aKC+M^OX8R,Z*#7#O(L'3$`2V8L<)VTZPA-+UV_H.M98)'aK)J#D@D)>Tq,.9MGb;.M#5Y
%LQ=!h:Bs5#E9cmLIg4)a1B^-B!&\]&q#^MQj=N*RjsZfSTMD(>;Ur6K]"_90OP*j7-;_\=ES323Bj\!`+k3J63GJUk'L'+FVJ<l/
%jK"f*S/R8G@B*jhZfnOti=?8,,4Xk?]Ddm0_pM_^l%p9AALOt>U9Od/*-l(,e,PN\WSBg'BcOsH(9JK.bu#?.>.dW,c'F26RXo2X
%n_lL@LaPHX<MGC`Qe0EG$0g1,D!dZgPdj%/n$jU5(O(F@R7j5?6s?auL=rm2"Pm*Mb5nY1dW(QtZUV<?F64F5d+17WJT';EV^9Zu
%'&!b4`ah\RTs5Vkj>Er7KtupgP6nc<=/=kK;s'"LJPn3sg8YA-bV)U)rrLXJ$Zrrm-IbA>:33H@dGlu*ps]Sq-4S"IEP"tSgU6$'
%*+NBj&[j8Z3^SUUATMKDOVFn)rKutq.K4.h@d9(!:Agf,F8NC2`f)q>m=u7]VO5Fq7J^\k76=sQE`"PHIkjPX0?YTVX'(-)4ZD=%
%A1hI<onlYSUhg5;<pHd1nfs;O3pLEZ>W3hceTDO%4X?_2kuX+F/NOEG_ZPQ^0L/ZL*RFD$dboq2P+41G#&1jST[NM;U'D[2:+]P-
%0J07sj\[s?,[#lsdPI%M7g<s;(%hi9In24ll*mZdU/rMX*#ISa'.6kP="22if8'8C9jh%_`Tp1!.(5qG.MR$3gNBIth/jDHFH3Pt
%#Xu1Xb1W8X:T%^4;._(3_3T$in*iGYf#:VF`<!'sWdu:fb)7!g,G;C?qc![f(o%7k2`/hlZ*aa]?1$ACrHME2*UXN]"P)#Yn[RmC
%P[gC7f:p!sVdZSC;c*e"moq_!I?.G-rI,#bqE'jY]?LJtB7_,)If2)h*U#s6Uckb3UK\,Z_Mhed([bHr[[=Mka*Y]oh4&bnI4"Kn
%GqmVb>o`&`*7VWWnJ.:dTV0MrnflfW!a]bK3(K<0e?`2PIgKCPIEZrtc[.]X58HjGc)91.q"h%0rqrtk^]*B9hd+"s^CNPWqs=Bt
%q>9W1q!d%1^Aj7l%mPL@eIOlos1]Ws^Am^n4>VH]YOSNG++F(Uo7-f>V[j;&s8287!J6Bp#N'q#S%nj$YJ9p`UD4/b~>
%AI9_PrivateDataEnd
